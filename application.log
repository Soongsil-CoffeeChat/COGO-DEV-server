2024-07-23 05:05:21 [main] [transactionId=] [threadId=] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest]: ConcurrencyTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-07-23 05:05:21 [main] [transactionId=] [threadId=] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.soongsil.CoffeeChat.CoffeeChatApplication for test class com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest
2024-07-23 05:05:21 [main] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - Starting ConcurrencyTest using Java 17.0.11 with PID 9483 (started by kimkyohwee in /Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server)
2024-07-23 05:05:21 [main] [transactionId=] [threadId=] DEBUG c.s.C.Concurrency.ConcurrencyTest - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-07-23 05:05:21 [main] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - No active profile set, falling back to 1 default profile: "default"
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 73 ms. Found 6 JPA repository interfaces.
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@46894dc5
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@46894dc5
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@46894dc5
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@596afb2f
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@596afb2f
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@79ba0285
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@79ba0285
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6df2a206
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6df2a206
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@61993d18
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@61993d18
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@61993d18
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6f240187
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6f240187
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6f240187
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@16e07bae
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@16e07bae
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@598778cc
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3386ed8
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3386ed8
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@727453a3
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@67dc6b48
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@57f2e67
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@57f2e67
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@57f2e67
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4571cebe
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@4571cebe
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4571cebe
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@154864f8
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@154864f8
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@154864f8
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@11cadb32
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@11cadb32
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@11cadb32
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6d3ad37a
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6d3ad37a
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6d3ad37a
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@26f5e45d
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@26f5e45d
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@704c3bdf
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@704c3bdf
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@37986daf
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@37986daf
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@37986daf
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@c82d925
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@55c03e4
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@55c03e4
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@14df5253
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@605eb072
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@605eb072
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@605eb072
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7a0f06ad
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@1fa9692b
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@710afd47
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@64420e34
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@64420e34
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@667a467f
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@667a467f
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@324e8baa
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1488a861
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@604f376a
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5432dca2
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@12670e55
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@43fd77d8
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5a90fcaa
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5a90fcaa
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1805ec96
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1805ec96
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@32ba5c65
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@32ba5c65
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1ad1be5d
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1ad1be5d
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@47797401
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@47797401
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@702f4124
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@10166230
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7221539
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7221539
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@b77b0a0
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@15be68b
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@22ff1372
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@356341c9
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@356341c9
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3a70575
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5d96d434
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@7283877
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7283877
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@286a4c52
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@286a4c52
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@13dd7887
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@13dd7887
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@13dd7887
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@780129bc
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@780129bc
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@780129bc
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3e2c4d4b
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@44de8e00
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@3cbfdf5c
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3cbfdf5c
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4d825dbe
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4d825dbe
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4d825dbe
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@11180750
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@210635fd
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@63814bbe
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@63814bbe
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@3cb195dd
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3cb195dd
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3cb195dd
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6dc2279c
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6dc2279c
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7d7b4e04
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7d7b4e04
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@144e36ae
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@144e36ae
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@24615687
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@24615687
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@58636b50
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@58636b50
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@7f4f1536
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1ad1b737
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@15cee630
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@15cee630
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@39a8e2fa
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2f9addd4
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@1c43df76
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@ff2266c
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@71b3ba5a
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@83ebdc5
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@a047bdb
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@14dbfdb1
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7856f41a
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3d02ff64
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2e013ba1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d8c729f)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@740ee00f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@430106cf)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@647af13d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2aac6fa7)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@29a1ec65) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@625db0e0)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@511d568f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1805ca5c)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3e61cffd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3134b261)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@aa633e6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3cc74fc4)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c697186) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@185a7dd0)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2358443e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@25e796fe)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@10f397d0
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@39a8e2fa`
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6e78177b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4ec37a42]
2024-07-23 05:05:23 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-23 05:05:23 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6e78177b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@363d29dd]
2024-07-23 05:05:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678723448 | took 1ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 05:05:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678723451 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 05:05:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678723460 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 05:05:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678723469 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 05:05:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678723478 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 05:05:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678723479 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 05:05:23 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@363d29dd] for TypeConfiguration
2024-07-23 05:05:23 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 05:05:24 [main] [transactionId=] [threadId=] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-23 05:05:24 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@316975be, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6b09fcda, org.springframework.security.web.context.SecurityContextHolderFilter@17734113, org.springframework.security.web.header.HeaderWriterFilter@49e3b86b, org.springframework.web.filter.CorsFilter@5cf4c93, com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter@55cd41f7, org.springframework.security.web.authentication.logout.LogoutFilter@6dd0e2f4, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@10587ce5, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@33dcbdc2, com.soongsil.CoffeeChat.config.jwt.JWTFilter@2ff30a75, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@307ca947, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@b38dc7d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@d15f98a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@704c3ca2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@746cb25d, org.springframework.security.web.session.SessionManagementFilter@771c4015, org.springframework.security.web.access.ExceptionTranslationFilter@686279e0, org.springframework.security.web.access.intercept.AuthorizationFilter@45c57dbd]
2024-07-23 05:05:24 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Ant [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 05:05:24 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Ant [pattern='/v3/api-docs/**']
2024-07-23 05:05:24 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 05:05:24 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-ui/**']
2024-07-23 05:05:24 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 05:05:24 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-resources/**']
2024-07-23 05:05:25 [main] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - Started ConcurrencyTest in 3.386 seconds (process running for 4.006)
2024-07-23 05:05:25 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        m1_0.mentor_id,
        m1_0.birth,
        m1_0.field,
        m1_0.part,
        m1_0.phone_num,
        m1_0.picture 
    from
        Mentor m1_0 
    where
        m1_0.mentor_id=?
2024-07-23 05:05:25 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678725412 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture from Mentor m1_0 where m1_0.mentor_id=?
select m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture from Mentor m1_0 where m1_0.mentor_id=1;
2024-07-23 05:05:25 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678725419 | took 0ms | commit | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 05:05:25 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        m1_0.mentee_id,
        m1_0.birth,
        m1_0.grade,
        m1_0.memo,
        m1_0.nickname,
        m1_0.part,
        m1_0.phone_num,
        m1_0.picture 
    from
        Mentee m1_0 
    where
        m1_0.mentee_id=?
2024-07-23 05:05:25 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678725421 | took 0ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select m1_0.mentee_id,m1_0.birth,m1_0.grade,m1_0.memo,m1_0.nickname,m1_0.part,m1_0.phone_num,m1_0.picture from Mentee m1_0 where m1_0.mentee_id=?
select m1_0.mentee_id,m1_0.birth,m1_0.grade,m1_0.memo,m1_0.nickname,m1_0.part,m1_0.phone_num,m1_0.picture from Mentee m1_0 where m1_0.mentee_id=1;
2024-07-23 05:05:25 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678725422 | took 0ms | commit | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 05:05:25 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    where
        pd1_0.possible_date_id=?
2024-07-23 05:05:25 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678725425 | took 0ms | statement | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=2001;
2024-07-23 05:05:25 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    update
        PossibleDate 
    set
        date=?,
        endTime=?,
        isActive=?,
        mentor_id=?,
        startTime=? 
    where
        possible_date_id=?
2024-07-23 05:05:25 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678725437 | took 1ms | statement | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
update PossibleDate set date=?,endTime=?,isActive=?,mentor_id=?,startTime=? where possible_date_id=?
update PossibleDate set date='2024-06-25T00:00:00.000+0900',endTime='1970-01-01T11:00:00.000+0900',isActive=true,mentor_id=1,startTime='1970-01-01T10:00:00.000+0900' where possible_date_id=2001;
2024-07-23 05:05:25 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678725439 | took 1ms | commit | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 05:05:25 [Thread-1] [transactionId=1] [threadId=139] INFO  c.s.C.service.ApplicationService - aaa트랜잭션 시작
2024-07-23 05:05:25 [Thread-2] [transactionId=2] [threadId=140] INFO  c.s.C.service.ApplicationService - aaa트랜잭션 시작
2024-07-23 05:05:25 [Thread-1] [transactionId=1] [threadId=139] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    where
        pd1_0.possible_date_id=?
2024-07-23 05:05:25 [Thread-2] [transactionId=2] [threadId=140] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    where
        pd1_0.possible_date_id=?
2024-07-23 05:05:25 [Thread-1] [transactionId=1] [threadId=139] INFO  p6spy - #1721678725441 | took 0ms | statement | connection 6| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=2001;
2024-07-23 05:05:25 [Thread-1] [transactionId=1] [threadId=139] DEBUG org.hibernate.SQL - 
    insert 
    into
        Application
        (accept, date, endTime, mentee_id, mentor_id, startTime) 
    values
        (?, ?, ?, ?, ?, ?)
2024-07-23 05:05:25 [Thread-1] [transactionId=1] [threadId=139] INFO  p6spy - #1721678725445 | took 0ms | statement | connection 6| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
insert into Application (accept,date,endTime,mentee_id,mentor_id,startTime) values (?,?,?,?,?,?)
insert into Application (accept,date,endTime,mentee_id,mentor_id,startTime) values ('UNMATCHED','2024-06-25T00:00:00.000+0900','1970-01-01T11:00:00.000+0900',1,1,'1970-01-01T10:00:00.000+0900');
2024-07-23 05:05:25 [Thread-1] [transactionId=1] [threadId=139] INFO  c.s.C.service.ApplicationService - aaaApplication 생성: com.soongsil.CoffeeChat.entity.Application@12024369
2024-07-23 05:05:25 [Thread-1] [transactionId=1] [threadId=139] INFO  c.s.C.service.ApplicationService - aaa트랜잭션 종료
2024-07-23 05:05:25 [Thread-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    update
        PossibleDate 
    set
        date=?,
        endTime=?,
        isActive=?,
        mentor_id=?,
        startTime=? 
    where
        possible_date_id=?
2024-07-23 05:05:25 [Thread-1] [transactionId=] [threadId=] INFO  p6spy - #1721678725450 | took 0ms | statement | connection 6| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
update PossibleDate set date=?,endTime=?,isActive=?,mentor_id=?,startTime=? where possible_date_id=?
update PossibleDate set date='2024-06-25T00:00:00.000+0900',endTime='1970-01-01T11:00:00.000+0900',isActive=false,mentor_id=1,startTime='1970-01-01T10:00:00.000+0900' where possible_date_id=2001;
2024-07-23 05:05:25 [Thread-1] [transactionId=] [threadId=] INFO  p6spy - #1721678725451 | took 0ms | commit | connection 6| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 05:05:25 [Thread-2] [transactionId=2] [threadId=140] INFO  p6spy - #1721678725451 | took 10ms | statement | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=2001;
2024-07-23 05:05:25 [Thread-2] [transactionId=2] [threadId=140] ERROR c.s.C.service.ApplicationService - aaaAplication 생성 실패-Active하지 않음.
2024-07-23 05:05:25 [Thread-2] [transactionId=2] [threadId=140] ERROR c.s.C.service.ApplicationService - aaaAplication 생성중 에러: 
java.lang.Exception: The PossibleDate is already booked or does not exist.
	at com.soongsil.CoffeeChat.service.ApplicationService.createApplicationIfPossible(ApplicationService.java:129)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.soongsil.CoffeeChat.service.ApplicationService$$SpringCGLIB$$0.createApplicationIfPossible(<generated>)
	at com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest.lambda$testConcurrency$1(ConcurrencyTest.java:57)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-07-23 05:05:25 [Thread-2] [transactionId=2] [threadId=140] INFO  c.s.C.service.ApplicationService - aaa트랜잭션 종료
2024-07-23 05:05:25 [Thread-2] [transactionId=] [threadId=] INFO  p6spy - #1721678725453 | took 0ms | commit | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 05:05:25 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 05:05:25 [SpringApplicationShutdownHook] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@363d29dd] for TypeConfiguration
2024-07-23 05:05:25 [SpringApplicationShutdownHook] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@57589e0b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@363d29dd]
2024-07-23 05:05:25 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-23 05:05:25 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-23 05:09:32 [main] [transactionId=] [threadId=] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest]: ConcurrencyTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-07-23 05:09:32 [main] [transactionId=] [threadId=] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.soongsil.CoffeeChat.CoffeeChatApplication for test class com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - Starting ConcurrencyTest using Java 17.0.11 with PID 9498 (started by kimkyohwee in /Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG c.s.C.Concurrency.ConcurrencyTest - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - No active profile set, falling back to 1 default profile: "default"
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 68 ms. Found 6 JPA repository interfaces.
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@308a9264
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@308a9264
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@308a9264
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7da77305
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7da77305
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3cdfbbef
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3cdfbbef
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7a1ddbf1
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7a1ddbf1
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1e606f64
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1e606f64
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1e606f64
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@581918f6
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@581918f6
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@581918f6
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@100807ca
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@100807ca
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@c67395
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@5fc7255c
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5fc7255c
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@20a47036
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@70c205bf
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@43ab9ae9
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@43ab9ae9
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@43ab9ae9
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@2520aa05
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@2520aa05
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@2520aa05
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@26865b57
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@26865b57
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@26865b57
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@46894dc5
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@46894dc5
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@46894dc5
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@596afb2f
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@596afb2f
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@596afb2f
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@79ba0285
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@79ba0285
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6df2a206
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6df2a206
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@61993d18
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@61993d18
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@61993d18
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6f240187
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@46a388cc
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@46a388cc
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3e39f08c
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@16e07bae
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@16e07bae
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@16e07bae
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@598778cc
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3386ed8
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@727453a3
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@67dc6b48
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@67dc6b48
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@57f2e67
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@57f2e67
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4571cebe
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@154864f8
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@11cadb32
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6d3ad37a
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@26f5e45d
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@704c3bdf
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@37986daf
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@37986daf
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@c82d925
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@c82d925
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@55c03e4
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@55c03e4
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@14df5253
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@14df5253
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@605eb072
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@605eb072
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7a0f06ad
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1fa9692b
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@710afd47
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@710afd47
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@64420e34
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@667a467f
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@324e8baa
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1488a861
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1488a861
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@604f376a
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5432dca2
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@12670e55
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@12670e55
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@43fd77d8
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@43fd77d8
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5a90fcaa
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5a90fcaa
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5a90fcaa
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1805ec96
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1805ec96
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1805ec96
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@32ba5c65
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@1ad1be5d
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@47797401
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@47797401
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@702f4124
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@702f4124
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@702f4124
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@10166230
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7221539
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@b77b0a0
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@b77b0a0
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@15be68b
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@15be68b
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@15be68b
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@22ff1372
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@22ff1372
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@356341c9
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@356341c9
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3a70575
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3a70575
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5d96d434
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5d96d434
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7283877
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7283877
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@286a4c52
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@13dd7887
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@17136390
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@17136390
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@64c95480
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@69499c6f
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@3451fc88
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1e0294a7
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3041beb3
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@15cee630
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2e40fdbd
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@246de37e
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@19647566
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@31dbf5bb
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74e2cfc5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4a5d5b38)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7a47f0be) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d8087da)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4f7ef948) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6fdaef04)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2a5d2041) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3cacc87)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3bc6c10f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3dcbbbc)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4040ccae) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@15bb8ed5)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@18f8ebd4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7e1fb22c)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@38fc34fd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7178d811)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2e013ba1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2d8c729f)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2ba318c2
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@64c95480`
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 05:09:34 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@67c2b55d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5db04bd2]
2024-07-23 05:09:34 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-23 05:09:34 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@67c2b55d] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7b9f7087]
2024-07-23 05:09:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678974478 | took 1ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 05:09:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678974480 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 05:09:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678974491 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 05:09:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678974501 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 05:09:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678974509 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 05:09:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678974510 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 05:09:34 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7b9f7087] for TypeConfiguration
2024-07-23 05:09:34 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 05:09:35 [main] [transactionId=] [threadId=] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-23 05:09:35 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1da77a43, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@63604641, org.springframework.security.web.context.SecurityContextHolderFilter@36573ec5, org.springframework.security.web.header.HeaderWriterFilter@6ba3eee9, org.springframework.web.filter.CorsFilter@1313dea8, com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter@74bca236, org.springframework.security.web.authentication.logout.LogoutFilter@34989ceb, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@293ccbdd, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@64a009e7, com.soongsil.CoffeeChat.config.jwt.JWTFilter@526fbb80, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@3b42d7df, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@33dcbdc2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1ef6977b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@674cd2da, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3e37c38f, org.springframework.security.web.session.SessionManagementFilter@3c634a04, org.springframework.security.web.access.ExceptionTranslationFilter@214738c1, org.springframework.security.web.access.intercept.AuthorizationFilter@2cbb9702]
2024-07-23 05:09:35 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Ant [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 05:09:35 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Ant [pattern='/v3/api-docs/**']
2024-07-23 05:09:35 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 05:09:35 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-ui/**']
2024-07-23 05:09:35 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 05:09:35 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-resources/**']
2024-07-23 05:09:36 [main] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - Started ConcurrencyTest in 3.285 seconds (process running for 3.86)
2024-07-23 05:09:36 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        m1_0.mentor_id,
        m1_0.birth,
        m1_0.field,
        m1_0.part,
        m1_0.phone_num,
        m1_0.picture 
    from
        Mentor m1_0 
    where
        m1_0.mentor_id=?
2024-07-23 05:09:36 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678976490 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture from Mentor m1_0 where m1_0.mentor_id=?
select m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture from Mentor m1_0 where m1_0.mentor_id=1;
2024-07-23 05:09:36 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678976497 | took 0ms | commit | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 05:09:36 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        m1_0.mentee_id,
        m1_0.birth,
        m1_0.grade,
        m1_0.memo,
        m1_0.nickname,
        m1_0.part,
        m1_0.phone_num,
        m1_0.picture 
    from
        Mentee m1_0 
    where
        m1_0.mentee_id=?
2024-07-23 05:09:36 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678976499 | took 0ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select m1_0.mentee_id,m1_0.birth,m1_0.grade,m1_0.memo,m1_0.nickname,m1_0.part,m1_0.phone_num,m1_0.picture from Mentee m1_0 where m1_0.mentee_id=?
select m1_0.mentee_id,m1_0.birth,m1_0.grade,m1_0.memo,m1_0.nickname,m1_0.part,m1_0.phone_num,m1_0.picture from Mentee m1_0 where m1_0.mentee_id=1;
2024-07-23 05:09:36 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678976500 | took 0ms | commit | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 05:09:36 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    where
        pd1_0.possible_date_id=?
2024-07-23 05:09:36 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678976503 | took 0ms | statement | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=2002;
2024-07-23 05:09:36 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    update
        PossibleDate 
    set
        date=?,
        endTime=?,
        isActive=?,
        mentor_id=?,
        startTime=? 
    where
        possible_date_id=?
2024-07-23 05:09:36 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678976516 | took 1ms | statement | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
update PossibleDate set date=?,endTime=?,isActive=?,mentor_id=?,startTime=? where possible_date_id=?
update PossibleDate set date='2024-06-25T00:00:00.000+0900',endTime='1970-01-01T11:00:00.000+0900',isActive=true,mentor_id=1,startTime='1970-01-01T10:00:00.000+0900' where possible_date_id=2002;
2024-07-23 05:09:36 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678976517 | took 0ms | commit | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 05:09:36 [Thread-2] [transactionId=1] [threadId=140] INFO  c.s.C.service.ApplicationService - aaa트랜잭션 시작
2024-07-23 05:09:36 [Thread-1] [transactionId=2] [threadId=139] INFO  c.s.C.service.ApplicationService - aaa트랜잭션 시작
2024-07-23 05:09:36 [Thread-2] [transactionId=1] [threadId=140] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    where
        pd1_0.possible_date_id=?
2024-07-23 05:09:36 [Thread-1] [transactionId=2] [threadId=139] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    where
        pd1_0.possible_date_id=?
2024-07-23 05:09:36 [Thread-2] [transactionId=1] [threadId=140] INFO  p6spy - #1721678976519 | took 0ms | statement | connection 6| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=2002;
2024-07-23 05:09:36 [Thread-1] [transactionId=2] [threadId=139] INFO  p6spy - #1721678976520 | took 0ms | statement | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=2002;
2024-07-23 05:09:36 [Thread-2] [transactionId=1] [threadId=140] DEBUG org.hibernate.SQL - 
    insert 
    into
        Application
        (accept, date, endTime, mentee_id, mentor_id, startTime) 
    values
        (?, ?, ?, ?, ?, ?)
2024-07-23 05:09:36 [Thread-1] [transactionId=2] [threadId=139] DEBUG org.hibernate.SQL - 
    insert 
    into
        Application
        (accept, date, endTime, mentee_id, mentor_id, startTime) 
    values
        (?, ?, ?, ?, ?, ?)
2024-07-23 05:09:36 [Thread-2] [transactionId=1] [threadId=140] INFO  p6spy - #1721678976523 | took 0ms | statement | connection 6| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
insert into Application (accept,date,endTime,mentee_id,mentor_id,startTime) values (?,?,?,?,?,?)
insert into Application (accept,date,endTime,mentee_id,mentor_id,startTime) values ('UNMATCHED','2024-06-25T00:00:00.000+0900','1970-01-01T11:00:00.000+0900',1,1,'1970-01-01T10:00:00.000+0900');
2024-07-23 05:09:36 [Thread-1] [transactionId=2] [threadId=139] INFO  p6spy - #1721678976523 | took 0ms | statement | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
insert into Application (accept,date,endTime,mentee_id,mentor_id,startTime) values (?,?,?,?,?,?)
insert into Application (accept,date,endTime,mentee_id,mentor_id,startTime) values ('UNMATCHED','2024-06-25T00:00:00.000+0900','1970-01-01T11:00:00.000+0900',1,1,'1970-01-01T10:00:00.000+0900');
2024-07-23 05:09:36 [Thread-1] [transactionId=2] [threadId=139] INFO  c.s.C.service.ApplicationService - aaaApplication 생성: com.soongsil.CoffeeChat.entity.Application@7f941ded
2024-07-23 05:09:36 [Thread-2] [transactionId=1] [threadId=140] INFO  c.s.C.service.ApplicationService - aaaApplication 생성: com.soongsil.CoffeeChat.entity.Application@1340867a
2024-07-23 05:09:36 [Thread-1] [transactionId=2] [threadId=139] INFO  c.s.C.service.ApplicationService - aaa트랜잭션 종료
2024-07-23 05:09:36 [Thread-2] [transactionId=1] [threadId=140] INFO  c.s.C.service.ApplicationService - aaa트랜잭션 종료
2024-07-23 05:09:36 [Thread-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    update
        PossibleDate 
    set
        date=?,
        endTime=?,
        isActive=?,
        mentor_id=?,
        startTime=? 
    where
        possible_date_id=?
2024-07-23 05:09:36 [Thread-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    update
        PossibleDate 
    set
        date=?,
        endTime=?,
        isActive=?,
        mentor_id=?,
        startTime=? 
    where
        possible_date_id=?
2024-07-23 05:09:36 [Thread-1] [transactionId=] [threadId=] INFO  p6spy - #1721678976528 | took 0ms | statement | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
update PossibleDate set date=?,endTime=?,isActive=?,mentor_id=?,startTime=? where possible_date_id=?
update PossibleDate set date='2024-06-25T00:00:00.000+0900',endTime='1970-01-01T11:00:00.000+0900',isActive=false,mentor_id=1,startTime='1970-01-01T10:00:00.000+0900' where possible_date_id=2002;
2024-07-23 05:09:36 [Thread-1] [transactionId=] [threadId=] INFO  p6spy - #1721678976529 | took 0ms | commit | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 05:09:36 [Thread-2] [transactionId=] [threadId=] INFO  p6spy - #1721678976529 | took 1ms | statement | connection 6| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
update PossibleDate set date=?,endTime=?,isActive=?,mentor_id=?,startTime=? where possible_date_id=?
update PossibleDate set date='2024-06-25T00:00:00.000+0900',endTime='1970-01-01T11:00:00.000+0900',isActive=false,mentor_id=1,startTime='1970-01-01T10:00:00.000+0900' where possible_date_id=2002;
2024-07-23 05:09:36 [Thread-2] [transactionId=] [threadId=] INFO  p6spy - #1721678976530 | took 0ms | commit | connection 6| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 05:09:36 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 05:09:36 [SpringApplicationShutdownHook] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@7b9f7087] for TypeConfiguration
2024-07-23 05:09:36 [SpringApplicationShutdownHook] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@69852d58] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7b9f7087]
2024-07-23 05:09:36 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-23 05:09:36 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-23 16:26:10 [main] [transactionId=] [threadId=] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest]: ConcurrencyTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-07-23 16:26:10 [main] [transactionId=] [threadId=] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.soongsil.CoffeeChat.CoffeeChatApplication for test class com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest
2024-07-23 16:26:10 [main] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - Starting ConcurrencyTest using Java 17.0.11 with PID 10188 (started by kimkyohwee in /Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server)
2024-07-23 16:26:10 [main] [transactionId=] [threadId=] DEBUG c.s.C.Concurrency.ConcurrencyTest - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-07-23 16:26:10 [main] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - No active profile set, falling back to 1 default profile: "default"
2024-07-23 16:26:10 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 16:26:10 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-23 16:26:10 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 73 ms. Found 6 JPA repository interfaces.
2024-07-23 16:26:10 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 16:26:10 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-23 16:26:10 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:26:10 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:26:10 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:26:10 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:26:10 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:26:10 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:26:10 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@26865b57
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@26865b57
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@26865b57
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@46894dc5
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@46894dc5
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@596afb2f
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@596afb2f
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@79ba0285
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@79ba0285
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6df2a206
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6df2a206
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6df2a206
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@61993d18
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@61993d18
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@61993d18
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3e39f08c
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3e39f08c
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@16e07bae
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@598778cc
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@598778cc
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3386ed8
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@727453a3
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@67dc6b48
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@67dc6b48
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@67dc6b48
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@57f2e67
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@57f2e67
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@57f2e67
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4571cebe
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4571cebe
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4571cebe
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@154864f8
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@154864f8
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@154864f8
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@11cadb32
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@11cadb32
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@11cadb32
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6d3ad37a
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6d3ad37a
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@26f5e45d
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@26f5e45d
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@704c3bdf
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@704c3bdf
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@704c3bdf
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@37986daf
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@c82d925
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@c82d925
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@55c03e4
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@14df5253
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@14df5253
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@14df5253
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@605eb072
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@7a0f06ad
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1fa9692b
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@710afd47
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@710afd47
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@64420e34
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@64420e34
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@667a467f
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@324e8baa
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@1488a861
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@604f376a
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5432dca2
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@12670e55
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@43fd77d8
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@43fd77d8
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5a90fcaa
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5a90fcaa
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1805ec96
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1805ec96
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@32ba5c65
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@32ba5c65
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1ad1be5d
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1ad1be5d
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@47797401
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@702f4124
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@10166230
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@10166230
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7221539
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@b77b0a0
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@15be68b
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@22ff1372
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@22ff1372
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@356341c9
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3a70575
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@5d96d434
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5d96d434
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@7283877
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7283877
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@286a4c52
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@286a4c52
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@286a4c52
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@13dd7887
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@13dd7887
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@13dd7887
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@780129bc
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3e2c4d4b
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@44de8e00
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@44de8e00
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3cbfdf5c
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3cbfdf5c
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3cbfdf5c
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d825dbe
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@11180750
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@210635fd
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@210635fd
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@63814bbe
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@63814bbe
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@63814bbe
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@3cb195dd
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3cb195dd
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6dc2279c
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6dc2279c
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7d7b4e04
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7d7b4e04
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@144e36ae
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@144e36ae
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@24615687
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@24615687
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@58636b50
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7f4f1536
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@3041beb3
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3041beb3
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@376498da
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@39a8e2fa
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2f9addd4
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1c43df76
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@ff2266c
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@71b3ba5a
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@83ebdc5
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@a047bdb
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@14dbfdb1
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@46fa2a7e
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7178d811) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2e013ba1)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d8c729f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@740ee00f)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@430106cf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@647af13d)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aac6fa7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@29a1ec65)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@625db0e0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@511d568f)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1805ca5c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3e61cffd)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3134b261) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@aa633e6)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3cc74fc4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@c697186)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@185a7dd0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2358443e)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2a504ea7
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@376498da`
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@391b01c5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6e78177b]
2024-07-23 16:26:12 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-23 16:26:12 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@391b01c5] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@25fc2b8f]
2024-07-23 16:26:12 [main] [transactionId=] [threadId=] INFO  p6spy - #1721719572099 | took 1ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 16:26:12 [main] [transactionId=] [threadId=] INFO  p6spy - #1721719572101 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 16:26:12 [main] [transactionId=] [threadId=] INFO  p6spy - #1721719572115 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 16:26:12 [main] [transactionId=] [threadId=] INFO  p6spy - #1721719572124 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 16:26:12 [main] [transactionId=] [threadId=] INFO  p6spy - #1721719572132 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 16:26:12 [main] [transactionId=] [threadId=] INFO  p6spy - #1721719572134 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 16:26:12 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@25fc2b8f] for TypeConfiguration
2024-07-23 16:26:12 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 16:26:12 [main] [transactionId=] [threadId=] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-23 16:26:13 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6ca1c156, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@521f2a23, org.springframework.security.web.context.SecurityContextHolderFilter@216fe151, org.springframework.security.web.header.HeaderWriterFilter@43c76550, org.springframework.web.filter.CorsFilter@228ed68c, com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter@30e3544d, org.springframework.security.web.authentication.logout.LogoutFilter@7e130e34, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@5b1b5daf, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@379cfc77, com.soongsil.CoffeeChat.config.jwt.JWTFilter@522a9876, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@39ae0bff, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@794ffe22, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6ea48ca1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@ceb4f91, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2da16d31, org.springframework.security.web.session.SessionManagementFilter@7451338e, org.springframework.security.web.access.ExceptionTranslationFilter@54ff871a, org.springframework.security.web.access.intercept.AuthorizationFilter@21e5feb]
2024-07-23 16:26:13 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Ant [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 16:26:13 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Ant [pattern='/v3/api-docs/**']
2024-07-23 16:26:13 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 16:26:13 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-ui/**']
2024-07-23 16:26:13 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 16:26:13 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-resources/**']
2024-07-23 16:26:13 [main] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - Started ConcurrencyTest in 3.358 seconds (process running for 3.995)
2024-07-23 16:26:13 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        m1_0.mentor_id,
        m1_0.birth,
        m1_0.field,
        m1_0.part,
        m1_0.phone_num,
        m1_0.picture 
    from
        Mentor m1_0 
    where
        m1_0.mentor_id=?
2024-07-23 16:26:13 [main] [transactionId=] [threadId=] INFO  p6spy - #1721719573962 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture from Mentor m1_0 where m1_0.mentor_id=?
select m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture from Mentor m1_0 where m1_0.mentor_id=1;
2024-07-23 16:26:13 [main] [transactionId=] [threadId=] INFO  p6spy - #1721719573969 | took 0ms | commit | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 16:26:13 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        m1_0.mentee_id,
        m1_0.birth,
        m1_0.grade,
        m1_0.memo,
        m1_0.nickname,
        m1_0.part,
        m1_0.phone_num,
        m1_0.picture 
    from
        Mentee m1_0 
    where
        m1_0.mentee_id=?
2024-07-23 16:26:13 [main] [transactionId=] [threadId=] INFO  p6spy - #1721719573971 | took 0ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select m1_0.mentee_id,m1_0.birth,m1_0.grade,m1_0.memo,m1_0.nickname,m1_0.part,m1_0.phone_num,m1_0.picture from Mentee m1_0 where m1_0.mentee_id=?
select m1_0.mentee_id,m1_0.birth,m1_0.grade,m1_0.memo,m1_0.nickname,m1_0.part,m1_0.phone_num,m1_0.picture from Mentee m1_0 where m1_0.mentee_id=1;
2024-07-23 16:26:13 [main] [transactionId=] [threadId=] INFO  p6spy - #1721719573971 | took 0ms | commit | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 16:26:13 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    where
        pd1_0.possible_date_id=?
2024-07-23 16:26:13 [main] [transactionId=] [threadId=] INFO  p6spy - #1721719573974 | took 0ms | statement | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=2002;
2024-07-23 16:26:13 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    update
        PossibleDate 
    set
        date=?,
        endTime=?,
        isActive=?,
        mentor_id=?,
        startTime=? 
    where
        possible_date_id=?
2024-07-23 16:26:13 [main] [transactionId=] [threadId=] INFO  p6spy - #1721719573987 | took 2ms | statement | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
update PossibleDate set date=?,endTime=?,isActive=?,mentor_id=?,startTime=? where possible_date_id=?
update PossibleDate set date='2024-06-25T00:00:00.000+0900',endTime='1970-01-01T11:00:00.000+0900',isActive=true,mentor_id=1,startTime='1970-01-01T10:00:00.000+0900' where possible_date_id=2002;
2024-07-23 16:26:13 [main] [transactionId=] [threadId=] INFO  p6spy - #1721719573989 | took 1ms | commit | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 16:26:13 [Thread-1] [transactionId=2] [threadId=139] INFO  c.s.C.service.ApplicationService - aaa트랜잭션 시작
2024-07-23 16:26:13 [Thread-2] [transactionId=1] [threadId=140] INFO  c.s.C.service.ApplicationService - aaa트랜잭션 시작
2024-07-23 16:26:13 [Thread-1] [transactionId=2] [threadId=139] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    where
        pd1_0.possible_date_id=?
2024-07-23 16:26:13 [Thread-2] [transactionId=1] [threadId=140] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    where
        pd1_0.possible_date_id=?
2024-07-23 16:26:13 [Thread-1] [transactionId=2] [threadId=139] INFO  p6spy - #1721719573991 | took 0ms | statement | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=2002;
2024-07-23 16:26:13 [Thread-2] [transactionId=1] [threadId=140] INFO  p6spy - #1721719573991 | took 0ms | statement | connection 6| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=2002;
2024-07-23 16:26:13 [Thread-1] [transactionId=2] [threadId=139] DEBUG org.hibernate.SQL - 
    insert 
    into
        Application
        (accept, date, endTime, mentee_id, mentor_id, startTime) 
    values
        (?, ?, ?, ?, ?, ?)
2024-07-23 16:26:13 [Thread-2] [transactionId=1] [threadId=140] DEBUG org.hibernate.SQL - 
    insert 
    into
        Application
        (accept, date, endTime, mentee_id, mentor_id, startTime) 
    values
        (?, ?, ?, ?, ?, ?)
2024-07-23 16:26:13 [Thread-2] [transactionId=1] [threadId=140] INFO  p6spy - #1721719573995 | took 0ms | statement | connection 6| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
insert into Application (accept,date,endTime,mentee_id,mentor_id,startTime) values (?,?,?,?,?,?)
insert into Application (accept,date,endTime,mentee_id,mentor_id,startTime) values ('UNMATCHED','2024-06-25T00:00:00.000+0900','1970-01-01T11:00:00.000+0900',1,1,'1970-01-01T10:00:00.000+0900');
2024-07-23 16:26:13 [Thread-1] [transactionId=2] [threadId=139] INFO  p6spy - #1721719573995 | took 0ms | statement | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
insert into Application (accept,date,endTime,mentee_id,mentor_id,startTime) values (?,?,?,?,?,?)
insert into Application (accept,date,endTime,mentee_id,mentor_id,startTime) values ('UNMATCHED','2024-06-25T00:00:00.000+0900','1970-01-01T11:00:00.000+0900',1,1,'1970-01-01T10:00:00.000+0900');
2024-07-23 16:26:13 [Thread-1] [transactionId=2] [threadId=139] INFO  c.s.C.service.ApplicationService - aaaApplication 생성: com.soongsil.CoffeeChat.entity.Application@45958c71
2024-07-23 16:26:13 [Thread-1] [transactionId=2] [threadId=139] INFO  c.s.C.service.ApplicationService - aaa트랜잭션 종료
2024-07-23 16:26:13 [Thread-2] [transactionId=1] [threadId=140] INFO  c.s.C.service.ApplicationService - aaaApplication 생성: com.soongsil.CoffeeChat.entity.Application@987f560
2024-07-23 16:26:13 [Thread-2] [transactionId=1] [threadId=140] INFO  c.s.C.service.ApplicationService - aaa트랜잭션 종료
2024-07-23 16:26:13 [Thread-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    update
        PossibleDate 
    set
        date=?,
        endTime=?,
        isActive=?,
        mentor_id=?,
        startTime=? 
    where
        possible_date_id=?
2024-07-23 16:26:13 [Thread-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    update
        PossibleDate 
    set
        date=?,
        endTime=?,
        isActive=?,
        mentor_id=?,
        startTime=? 
    where
        possible_date_id=?
2024-07-23 16:26:13 [Thread-1] [transactionId=] [threadId=] INFO  p6spy - #1721719573999 | took 0ms | statement | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
update PossibleDate set date=?,endTime=?,isActive=?,mentor_id=?,startTime=? where possible_date_id=?
update PossibleDate set date='2024-06-25T00:00:00.000+0900',endTime='1970-01-01T11:00:00.000+0900',isActive=false,mentor_id=1,startTime='1970-01-01T10:00:00.000+0900' where possible_date_id=2002;
2024-07-23 16:26:13 [Thread-1] [transactionId=] [threadId=] INFO  p6spy - #1721719573999 | took 0ms | commit | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 16:26:13 [Thread-2] [transactionId=] [threadId=] INFO  p6spy - #1721719573999 | took 0ms | statement | connection 6| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
update PossibleDate set date=?,endTime=?,isActive=?,mentor_id=?,startTime=? where possible_date_id=?
update PossibleDate set date='2024-06-25T00:00:00.000+0900',endTime='1970-01-01T11:00:00.000+0900',isActive=false,mentor_id=1,startTime='1970-01-01T10:00:00.000+0900' where possible_date_id=2002;
2024-07-23 16:26:14 [Thread-2] [transactionId=] [threadId=] INFO  p6spy - #1721719574000 | took 0ms | commit | connection 6| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 16:26:14 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 16:26:14 [SpringApplicationShutdownHook] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@25fc2b8f] for TypeConfiguration
2024-07-23 16:26:14 [SpringApplicationShutdownHook] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5e799b6e] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@25fc2b8f]
2024-07-23 16:26:14 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-23 16:26:14 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-23 16:27:17 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Starting CoffeeChatApplication using Java 17.0.11 with PID 10194 (/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes started by kimkyohwee in /Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server)
2024-07-23 16:27:17 [main] [transactionId=] [threadId=] DEBUG c.s.CoffeeChat.CoffeeChatApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-07-23 16:27:17 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 63 ms. Found 6 JPA repository interfaces.
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 669 ms
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@238ad211
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@238ad211
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@238ad211
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1c011855
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1c011855
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6591f8ea
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6591f8ea
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5273143e
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5273143e
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@279c4e3b
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@279c4e3b
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@279c4e3b
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@334b392d
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@334b392d
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@334b392d
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@56478522
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@56478522
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@3caf5c96
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@5b3755f4
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5b3755f4
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@37d3aa8c
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5dd747c1
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1bdafb01
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1bdafb01
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1bdafb01
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@7aa3857b
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@7aa3857b
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7aa3857b
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@500ec769
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@500ec769
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@500ec769
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@37806be6
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@37806be6
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@37806be6
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7bce9ce4
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7bce9ce4
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7bce9ce4
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1d2046bb
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1d2046bb
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@3b33fff9
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@3b33fff9
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@fd87c22
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@fd87c22
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@fd87c22
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@fee881
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1ff463bb
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1ff463bb
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3b9c9b8b
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7769d9b6
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7769d9b6
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7769d9b6
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@248d3a
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3c71cf3e
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@636e4bf8
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5af38a4a
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5af38a4a
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7e1a9173
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7e1a9173
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4ca0b9b1
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5d800a56
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@1be77a76
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@315cf170
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7878bbdb
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@25f7cc38
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@563263a
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@563263a
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@53e28097
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@53e28097
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6e794f53
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6e794f53
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@75f4d8a8
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@75f4d8a8
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@69ba72da
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@69ba72da
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2e1ba142
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@abc7005
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@595ec862
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@595ec862
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@63c84d31
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@102af1bb
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@797f97e3
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@56cd5d76
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@56cd5d76
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@77cd235b
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@302da330
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@3568ea59
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3568ea59
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@9f2376f
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@9f2376f
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@173b1af1
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@173b1af1
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@173b1af1
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4a520f05
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4a520f05
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4a520f05
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@389a1e34
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@204b0f07
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@6f68756d
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6f68756d
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@359865a2
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@359865a2
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@359865a2
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5d9bb69b
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@25d0b918
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2d38db6f
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2d38db6f
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@37cf91d8
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@37cf91d8
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@571d0925
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@571d0925
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@2df71be0
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2df71be0
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@5158a9f7
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7c8f047a
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4387d2f4
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1dbff71c
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@93ce24d
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@d949bc4
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7079f8f0
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@121cf6f4
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7cdc4070
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7614378d
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6a6a2fdd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@552ffa44)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6e66b498) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@54d35ed5)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6f7c9755) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45abbd24)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1e32037d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5059d398)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5b1420f9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@434ee422)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4de93edd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@53b2e1eb)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@29db008c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1d008e61)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@191b44ca) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5de243bb)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2c4cf7eb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@35260785)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@726ef6aa
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@5158a9f7`
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@67d180e4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@54e18a46]
2024-07-23 16:27:19 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-23 16:27:19 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@67d180e4] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2e9f5499]
2024-07-23 16:27:19 [main] [transactionId=] [threadId=] INFO  p6spy - #1721719639191 | took 1ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 16:27:19 [main] [transactionId=] [threadId=] INFO  p6spy - #1721719639192 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 16:27:19 [main] [transactionId=] [threadId=] INFO  p6spy - #1721719639202 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 16:27:19 [main] [transactionId=] [threadId=] INFO  p6spy - #1721719639210 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 16:27:19 [main] [transactionId=] [threadId=] INFO  p6spy - #1721719639217 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 16:27:19 [main] [transactionId=] [threadId=] INFO  p6spy - #1721719639218 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 16:27:19 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2e9f5499] for TypeConfiguration
2024-07-23 16:27:19 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 16:27:19 [main] [transactionId=] [threadId=] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-23 16:27:20 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@21dc1d99, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7bfa2d74, org.springframework.security.web.context.SecurityContextHolderFilter@9c7699e, org.springframework.security.web.header.HeaderWriterFilter@4d542218, org.springframework.web.filter.CorsFilter@467924d8, com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter@20bc417f, org.springframework.security.web.authentication.logout.LogoutFilter@21f3a99c, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@2220780d, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@418f5f63, com.soongsil.CoffeeChat.config.jwt.JWTFilter@614da024, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@4d7909bd, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@4b76a0f4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5bbda8aa, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@36d02719, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@442612a6, org.springframework.security.web.session.SessionManagementFilter@463a0302, org.springframework.security.web.access.ExceptionTranslationFilter@1e1c1634, org.springframework.security.web.access.intercept.AuthorizationFilter@763960eb]
2024-07-23 16:27:20 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 16:27:20 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/v3/api-docs/**']
2024-07-23 16:27:20 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 16:27:20 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-ui/**']
2024-07-23 16:27:20 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 16:27:20 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-resources/**']
2024-07-23 16:27:20 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-07-23 16:27:20 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2024-07-23 16:27:20 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Started CoffeeChatApplication in 2.754 seconds (process running for 3.122)
2024-07-23 16:27:30 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-23 16:27:30 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-23 16:27:30 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-07-23 16:27:35 [http-nio-8080-exec-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.user_mentee,
        u1_0.user_mentor,
        u1_0.name,
        u1_0.phone,
        u1_0.picture,
        u1_0.role,
        u1_0.username 
    from
        User u1_0 
    where
        u1_0.username=?
2024-07-23 16:27:35 [http-nio-8080-exec-2] [transactionId=] [threadId=] INFO  p6spy - #1721719655161 | took 1ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username=?
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username='google 114962161569005947668';
2024-07-23 16:27:35 [http-nio-8080-exec-2] [transactionId=] [threadId=] INFO  p6spy - #1721719655174 | took 0ms | commit | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 16:27:35 [http-nio-8080-exec-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    insert 
    into
        Refresh
        (expiration, refresh, username) 
    values
        (?, ?, ?)
2024-07-23 16:27:35 [http-nio-8080-exec-2] [transactionId=] [threadId=] INFO  p6spy - #1721719655202 | took 0ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
insert into Refresh (expiration,refresh,username) values (?,?,?)
insert into Refresh (expiration,refresh,username) values ('Wed Jul 24 16:27:35 KST 2024','eyJhbGciOiJIUzI1NiJ9.eyJjYXRlZ29yeSI6InJlZnJlc2giLCJ1c2VybmFtZSI6Imdvb2dsZSAxMTQ5NjIxNjE1NjkwMDU5NDc2NjgiLCJyb2xlIjoiUk9MRV9NRU5URUUiLCJpYXQiOjE3MjE3MTk2NTUsImV4cCI6MTcyMTgwNjA1NX0.S_R2p25elZSfDa9RdtYVdPuqHMMb5kTN7kDqq31IHZg','google 114962161569005947668');
2024-07-23 16:27:35 [http-nio-8080-exec-2] [transactionId=] [threadId=] INFO  p6spy - #1721719655208 | took 1ms | commit | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 16:27:41 [http-nio-8080-exec-7] [transactionId=] [threadId=] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 157 ms
2024-07-23 16:27:48 [http-nio-8080-exec-8] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        r1_0.id 
    from
        Refresh r1_0 
    where
        r1_0.refresh=? 
    limit
        ?
2024-07-23 16:27:48 [http-nio-8080-exec-8] [transactionId=] [threadId=] INFO  p6spy - #1721719668281 | took 1ms | statement | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select r1_0.id from Refresh r1_0 where r1_0.refresh=? limit ?
select r1_0.id from Refresh r1_0 where r1_0.refresh='eyJhbGciOiJIUzI1NiJ9.eyJjYXRlZ29yeSI6InJlZnJlc2giLCJ1c2VybmFtZSI6Imdvb2dsZSAxMTQ5NjIxNjE1NjkwMDU5NDc2NjgiLCJyb2xlIjoiUk9MRV9NRU5URUUiLCJpYXQiOjE3MjE3MTk2NTUsImV4cCI6MTcyMTgwNjA1NX0.S_R2p25elZSfDa9RdtYVdPuqHMMb5kTN7kDqq31IHZg' limit 1;
2024-07-23 16:27:48 [http-nio-8080-exec-8] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.expiration,
        r1_0.refresh,
        r1_0.username 
    from
        Refresh r1_0 
    where
        r1_0.refresh=?
2024-07-23 16:27:48 [http-nio-8080-exec-8] [transactionId=] [threadId=] INFO  p6spy - #1721719668283 | took 0ms | statement | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select r1_0.id,r1_0.expiration,r1_0.refresh,r1_0.username from Refresh r1_0 where r1_0.refresh=?
select r1_0.id,r1_0.expiration,r1_0.refresh,r1_0.username from Refresh r1_0 where r1_0.refresh='eyJhbGciOiJIUzI1NiJ9.eyJjYXRlZ29yeSI6InJlZnJlc2giLCJ1c2VybmFtZSI6Imdvb2dsZSAxMTQ5NjIxNjE1NjkwMDU5NDc2NjgiLCJyb2xlIjoiUk9MRV9NRU5URUUiLCJpYXQiOjE3MjE3MTk2NTUsImV4cCI6MTcyMTgwNjA1NX0.S_R2p25elZSfDa9RdtYVdPuqHMMb5kTN7kDqq31IHZg';
2024-07-23 16:27:48 [http-nio-8080-exec-8] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    delete 
    from
        Refresh 
    where
        id=?
2024-07-23 16:27:48 [http-nio-8080-exec-8] [transactionId=] [threadId=] INFO  p6spy - #1721719668287 | took 0ms | statement | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
delete from Refresh where id=?
delete from Refresh where id=171;
2024-07-23 16:27:48 [http-nio-8080-exec-8] [transactionId=] [threadId=] INFO  p6spy - #1721719668289 | took 1ms | commit | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 16:27:48 [http-nio-8080-exec-8] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    insert 
    into
        Refresh
        (expiration, refresh, username) 
    values
        (?, ?, ?)
2024-07-23 16:27:48 [http-nio-8080-exec-8] [transactionId=] [threadId=] INFO  p6spy - #1721719668290 | took 0ms | statement | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
insert into Refresh (expiration,refresh,username) values (?,?,?)
insert into Refresh (expiration,refresh,username) values ('Wed Jul 24 16:27:48 KST 2024','eyJhbGciOiJIUzI1NiJ9.eyJjYXRlZ29yeSI6InJlZnJlc2giLCJ1c2VybmFtZSI6Imdvb2dsZSAxMTQ5NjIxNjE1NjkwMDU5NDc2NjgiLCJyb2xlIjoiUk9MRV9NRU5URUUiLCJpYXQiOjE3MjE3MTk2NjgsImV4cCI6MTcyMTgwNjA2OH0.CHD1ANh9ipqYxfb58VngM6qqgHBwnXz7qD397PxQCBU','google 114962161569005947668');
2024-07-23 16:27:48 [http-nio-8080-exec-8] [transactionId=] [threadId=] INFO  p6spy - #1721719668291 | took 0ms | commit | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 16:28:10 [http-nio-8080-exec-9] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        pd1_0.date,
        pd1_0.startTime,
        pd1_0.endTime,
        pd1_0.possible_date_id 
    from
        User u1_0 
    join
        Mentor m1_0 
            on m1_0.mentor_id=u1_0.user_mentor 
    join
        PossibleDate pd1_0 
            on m1_0.mentor_id=pd1_0.mentor_id 
    where
        u1_0.username=? 
        and pd1_0.isActive=?
2024-07-23 16:28:10 [http-nio-8080-exec-9] [transactionId=] [threadId=] INFO  p6spy - #1721719690517 | took 1ms | statement | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.date,pd1_0.startTime,pd1_0.endTime,pd1_0.possible_date_id from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where u1_0.username=? and pd1_0.isActive=?
select pd1_0.date,pd1_0.startTime,pd1_0.endTime,pd1_0.possible_date_id from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where u1_0.username='user0' and pd1_0.isActive=true;
2024-07-23 16:29:17 [http-nio-8080-exec-5] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.user_mentee,
        m1_0.mentor_id,
        m1_0.birth,
        m1_0.field,
        m1_0.part,
        m1_0.phone_num,
        m1_0.picture,
        pd1_0.mentor_id,
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.startTime,
        u1_0.name,
        u1_0.phone,
        u1_0.picture,
        u1_0.role,
        u1_0.username 
    from
        User u1_0 
    join
        Mentor m1_0 
            on m1_0.mentor_id=u1_0.user_mentor 
    join
        PossibleDate pd1_0 
            on m1_0.mentor_id=pd1_0.mentor_id 
    where
        m1_0.mentor_id=?
2024-07-23 16:29:17 [http-nio-8080-exec-5] [transactionId=] [threadId=] INFO  p6spy - #1721719757097 | took 0ms | statement | connection 6| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select u1_0.user_id,u1_0.email,u1_0.user_mentee,m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture,pd1_0.mentor_id,pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.startTime,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=?
select u1_0.user_id,u1_0.email,u1_0.user_mentee,m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture,pd1_0.mentor_id,pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.startTime,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=1;
2024-07-23 16:29:17 [http-nio-8080-exec-5] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.user_mentee,
        u1_0.user_mentor,
        u1_0.name,
        u1_0.phone,
        u1_0.picture,
        u1_0.role,
        u1_0.username 
    from
        User u1_0 
    where
        u1_0.username=?
2024-07-23 16:29:17 [http-nio-8080-exec-5] [transactionId=] [threadId=] INFO  p6spy - #1721719757106 | took 1ms | statement | connection 6| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username=?
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username='google 114962161569005947668';
2024-07-23 16:29:17 [http-nio-8080-exec-5] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    join
        Mentor m1_0 
            on m1_0.mentor_id=pd1_0.mentor_id 
    where
        m1_0.mentor_id=? 
        and pd1_0.startTime=?
2024-07-23 16:29:17 [http-nio-8080-exec-5] [transactionId=] [threadId=] INFO  p6spy - #1721719757112 | took 1ms | statement | connection 6| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 join Mentor m1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=? and pd1_0.startTime=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 join Mentor m1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=1 and pd1_0.startTime='1970-01-01T10:00:00.000+0900';
2024-07-23 16:29:17 [http-nio-8080-exec-5] [transactionId=] [threadId=] INFO  p6spy - #1721719757113 | took 0ms | rollback | connection 6| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 16:29:17 [http-nio-8080-exec-5] [transactionId=] [threadId=] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalStateException: 이미 신청된 시간입니다.] with root cause
java.lang.IllegalStateException: 이미 신청된 시간입니다.
	at com.soongsil.CoffeeChat.service.ApplicationService.createApplication(ApplicationService.java:85)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.soongsil.CoffeeChat.service.ApplicationService$$SpringCGLIB$$0.createApplication(<generated>)
	at com.soongsil.CoffeeChat.controller.ApplicationController.createApplication(ApplicationController.java:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:261)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:189)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter.doFilterInternal(DefaultLogoutPageGeneratingFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:189)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:175)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.soongsil.CoffeeChat.config.jwt.JWTFilter.doFilterInternal(JWTFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter.doFilter(CustomLogoutFilter.java:43)
	at com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter.doFilter(CustomLogoutFilter.java:32)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-07-23 16:34:31 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 16:34:31 [SpringApplicationShutdownHook] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2e9f5499] for TypeConfiguration
2024-07-23 16:34:31 [SpringApplicationShutdownHook] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@75c7baf5] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2e9f5499]
2024-07-23 16:34:31 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-23 16:34:31 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-23 16:34:33 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Starting CoffeeChatApplication using Java 17.0.11 with PID 10309 (/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes started by kimkyohwee in /Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server)
2024-07-23 16:34:33 [main] [transactionId=] [threadId=] DEBUG c.s.CoffeeChat.CoffeeChatApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-07-23 16:34:33 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 68 ms. Found 6 JPA repository interfaces.
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 697 ms
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@631944d4
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@631944d4
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@631944d4
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3d132bb6
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3d132bb6
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@60ae7cf2
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@60ae7cf2
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@225e09f0
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@225e09f0
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@bc8d68b
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@bc8d68b
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@bc8d68b
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2fa212df
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2fa212df
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2fa212df
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@238ad211
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@238ad211
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@1c011855
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@6591f8ea
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6591f8ea
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5273143e
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@279c4e3b
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@334b392d
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@334b392d
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@334b392d
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@59f7c106
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@59f7c106
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@59f7c106
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@136fece2
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@136fece2
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@136fece2
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@56478522
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@56478522
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@56478522
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3caf5c96
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3caf5c96
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3caf5c96
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5b3755f4
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5b3755f4
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@37d3aa8c
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@37d3aa8c
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@5dd747c1
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@5dd747c1
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5dd747c1
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1bdafb01
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@7aa3857b
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7aa3857b
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@500ec769
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@37806be6
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@37806be6
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@37806be6
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7bce9ce4
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@1d2046bb
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3b33fff9
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@fd87c22
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@fd87c22
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@fee881
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@fee881
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1ff463bb
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3b9c9b8b
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7769d9b6
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@248d3a
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3c71cf3e
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@636e4bf8
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5af38a4a
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5af38a4a
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7e1a9173
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7e1a9173
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4ca0b9b1
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4ca0b9b1
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5d800a56
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5d800a56
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1be77a76
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1be77a76
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@315cf170
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7878bbdb
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@25f7cc38
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@25f7cc38
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@563263a
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@53e28097
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6e794f53
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@75f4d8a8
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@75f4d8a8
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@69ba72da
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2e1ba142
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@abc7005
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@abc7005
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@595ec862
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@595ec862
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@63c84d31
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@63c84d31
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@63c84d31
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@102af1bb
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@102af1bb
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@102af1bb
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@797f97e3
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@56cd5d76
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@77cd235b
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@77cd235b
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@302da330
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@302da330
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@302da330
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3568ea59
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@9f2376f
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@173b1af1
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@173b1af1
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@4a520f05
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4a520f05
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4a520f05
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@389a1e34
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@389a1e34
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@204b0f07
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@204b0f07
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6f68756d
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6f68756d
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@359865a2
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@359865a2
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@5d9bb69b
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5d9bb69b
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@25d0b918
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@73da7f08
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@73da7f08
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@4fee14b
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@11c3d22f
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@3a54638b
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7d8f2eec
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@e886caf
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1d585fb
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1884e671
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1c7843c3
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5158a9f7
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@194e78af
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4d5ea776) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5d68be4f)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@34eb5d01) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@77b22b05)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4fef5792) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@57ed02e6)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39004e4f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5f0ca069)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6a6a2fdd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@552ffa44)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6e66b498) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@54d35ed5)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6f7c9755) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45abbd24)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1e32037d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5059d398)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5b1420f9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@434ee422)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@45b08b17
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4fee14b`
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7131d668] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@46a97805]
2024-07-23 16:34:35 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-23 16:34:35 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7131d668] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6e161cea]
2024-07-23 16:34:35 [main] [transactionId=] [threadId=] INFO  p6spy - #1721720075147 | took 1ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 16:34:35 [main] [transactionId=] [threadId=] INFO  p6spy - #1721720075150 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 16:34:35 [main] [transactionId=] [threadId=] INFO  p6spy - #1721720075159 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 16:34:35 [main] [transactionId=] [threadId=] INFO  p6spy - #1721720075167 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 16:34:35 [main] [transactionId=] [threadId=] INFO  p6spy - #1721720075175 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 16:34:35 [main] [transactionId=] [threadId=] INFO  p6spy - #1721720075175 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 16:34:35 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6e161cea] for TypeConfiguration
2024-07-23 16:34:35 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 16:34:35 [main] [transactionId=] [threadId=] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-23 16:34:36 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@28023029, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@27165978, org.springframework.security.web.context.SecurityContextHolderFilter@5b1b5daf, org.springframework.security.web.header.HeaderWriterFilter@3b5fa30d, org.springframework.web.filter.CorsFilter@1cd97ebe, com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter@6431ab21, org.springframework.security.web.authentication.logout.LogoutFilter@521f2a23, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@225fc6a2, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@aecfc07, com.soongsil.CoffeeChat.config.jwt.JWTFilter@5d8b5cf6, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@79228440, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@484313a6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1e1c1634, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4ca3e806, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1fb8b89e, org.springframework.security.web.session.SessionManagementFilter@1cb83205, org.springframework.security.web.access.ExceptionTranslationFilter@78333d5a, org.springframework.security.web.access.intercept.AuthorizationFilter@418f5f63]
2024-07-23 16:34:36 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 16:34:36 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/v3/api-docs/**']
2024-07-23 16:34:36 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 16:34:36 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-ui/**']
2024-07-23 16:34:36 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 16:34:36 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-resources/**']
2024-07-23 16:34:36 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-07-23 16:34:36 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2024-07-23 16:34:36 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Started CoffeeChatApplication in 2.814 seconds (process running for 3.114)
2024-07-23 16:34:56 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-23 16:34:56 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-23 16:34:56 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-07-23 16:34:56 [http-nio-8080-exec-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        r1_0.id 
    from
        Refresh r1_0 
    where
        r1_0.refresh=? 
    limit
        ?
2024-07-23 16:34:56 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721720096335 | took 1ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select r1_0.id from Refresh r1_0 where r1_0.refresh=? limit ?
select r1_0.id from Refresh r1_0 where r1_0.refresh='eyJhbGciOiJIUzI1NiJ9.eyJjYXRlZ29yeSI6InJlZnJlc2giLCJ1c2VybmFtZSI6Imdvb2dsZSAxMTQ5NjIxNjE1NjkwMDU5NDc2NjgiLCJyb2xlIjoiUk9MRV9NRU5URUUiLCJpYXQiOjE3MjE3MTk2NjgsImV4cCI6MTcyMTgwNjA2OH0.CHD1ANh9ipqYxfb58VngM6qqgHBwnXz7qD397PxQCBU' limit 1;
2024-07-23 16:34:56 [http-nio-8080-exec-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.expiration,
        r1_0.refresh,
        r1_0.username 
    from
        Refresh r1_0 
    where
        r1_0.refresh=?
2024-07-23 16:34:56 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721720096356 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select r1_0.id,r1_0.expiration,r1_0.refresh,r1_0.username from Refresh r1_0 where r1_0.refresh=?
select r1_0.id,r1_0.expiration,r1_0.refresh,r1_0.username from Refresh r1_0 where r1_0.refresh='eyJhbGciOiJIUzI1NiJ9.eyJjYXRlZ29yeSI6InJlZnJlc2giLCJ1c2VybmFtZSI6Imdvb2dsZSAxMTQ5NjIxNjE1NjkwMDU5NDc2NjgiLCJyb2xlIjoiUk9MRV9NRU5URUUiLCJpYXQiOjE3MjE3MTk2NjgsImV4cCI6MTcyMTgwNjA2OH0.CHD1ANh9ipqYxfb58VngM6qqgHBwnXz7qD397PxQCBU';
2024-07-23 16:34:56 [http-nio-8080-exec-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    delete 
    from
        Refresh 
    where
        id=?
2024-07-23 16:34:56 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721720096366 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
delete from Refresh where id=?
delete from Refresh where id=172;
2024-07-23 16:34:56 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721720096369 | took 1ms | commit | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 16:34:56 [http-nio-8080-exec-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    insert 
    into
        Refresh
        (expiration, refresh, username) 
    values
        (?, ?, ?)
2024-07-23 16:34:56 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721720096373 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
insert into Refresh (expiration,refresh,username) values (?,?,?)
insert into Refresh (expiration,refresh,username) values ('Wed Jul 24 16:34:56 KST 2024','eyJhbGciOiJIUzI1NiJ9.eyJjYXRlZ29yeSI6InJlZnJlc2giLCJ1c2VybmFtZSI6Imdvb2dsZSAxMTQ5NjIxNjE1NjkwMDU5NDc2NjgiLCJyb2xlIjoiUk9MRV9NRU5URUUiLCJpYXQiOjE3MjE3MjAwOTYsImV4cCI6MTcyMTgwNjQ5Nn0.kEAooV0PEJaEvDTbcTnEEyKOUN4BO77xrcx3EYfSXF8','google 114962161569005947668');
2024-07-23 16:34:56 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721720096376 | took 0ms | commit | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 16:35:08 [http-nio-8080-exec-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.user_mentee,
        m1_0.mentor_id,
        m1_0.birth,
        m1_0.field,
        m1_0.part,
        m1_0.phone_num,
        m1_0.picture,
        pd1_0.mentor_id,
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.startTime,
        u1_0.name,
        u1_0.phone,
        u1_0.picture,
        u1_0.role,
        u1_0.username 
    from
        User u1_0 
    join
        Mentor m1_0 
            on m1_0.mentor_id=u1_0.user_mentor 
    join
        PossibleDate pd1_0 
            on m1_0.mentor_id=pd1_0.mentor_id 
    where
        m1_0.mentor_id=?
2024-07-23 16:35:08 [http-nio-8080-exec-2] [transactionId=] [threadId=] INFO  p6spy - #1721720108540 | took 1ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select u1_0.user_id,u1_0.email,u1_0.user_mentee,m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture,pd1_0.mentor_id,pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.startTime,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=?
select u1_0.user_id,u1_0.email,u1_0.user_mentee,m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture,pd1_0.mentor_id,pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.startTime,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=1;
2024-07-23 16:35:08 [http-nio-8080-exec-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.user_mentee,
        u1_0.user_mentor,
        u1_0.name,
        u1_0.phone,
        u1_0.picture,
        u1_0.role,
        u1_0.username 
    from
        User u1_0 
    where
        u1_0.username=?
2024-07-23 16:35:08 [http-nio-8080-exec-2] [transactionId=] [threadId=] INFO  p6spy - #1721720108552 | took 1ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username=?
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username='google 114962161569005947668';
2024-07-23 16:35:08 [http-nio-8080-exec-2] [transactionId=] [threadId=] INFO  p6spy - #1721720108563 | took 0ms | rollback | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 16:35:08 [http-nio-8080-exec-2] [transactionId=] [threadId=] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.hibernate.QueryParameterException: No argument for named parameter ':date'] with root cause
org.hibernate.QueryParameterException: No argument for named parameter ':date'
	at org.hibernate.query.internal.QueryParameterBindingsImpl.lambda$validate$0(QueryParameterBindingsImpl.java:142)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1092)
	at org.hibernate.query.internal.ParameterMetadataImpl.visitParameters(ParameterMetadataImpl.java:191)
	at org.hibernate.query.spi.ParameterMetadataImplementor.visitRegistrations(ParameterMetadataImplementor.java:29)
	at org.hibernate.query.internal.QueryParameterBindingsImpl.validate(QueryParameterBindingsImpl.java:138)
	at org.hibernate.query.spi.AbstractSelectionQuery.beforeQuery(AbstractSelectionQuery.java:455)
	at org.hibernate.query.spi.AbstractSelectionQuery.beforeQueryHandlingFetchProfiles(AbstractSelectionQuery.java:446)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:424)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at com.soongsil.CoffeeChat.service.ApplicationService.createApplication(ApplicationService.java:81)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.soongsil.CoffeeChat.service.ApplicationService$$SpringCGLIB$$0.createApplication(<generated>)
	at com.soongsil.CoffeeChat.controller.ApplicationController.createApplication(ApplicationController.java:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:261)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:189)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter.doFilterInternal(DefaultLogoutPageGeneratingFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:189)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:175)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.soongsil.CoffeeChat.config.jwt.JWTFilter.doFilterInternal(JWTFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter.doFilter(CustomLogoutFilter.java:43)
	at com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter.doFilter(CustomLogoutFilter.java:32)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-07-23 16:35:58 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 16:35:58 [SpringApplicationShutdownHook] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6e161cea] for TypeConfiguration
2024-07-23 16:35:58 [SpringApplicationShutdownHook] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7506d35] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6e161cea]
2024-07-23 16:35:58 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-23 16:35:58 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-23 16:36:00 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Starting CoffeeChatApplication using Java 17.0.11 with PID 10324 (/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes started by kimkyohwee in /Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server)
2024-07-23 16:36:00 [main] [transactionId=] [threadId=] DEBUG c.s.CoffeeChat.CoffeeChatApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-07-23 16:36:00 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-23 16:36:00 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 16:36:00 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 67 ms. Found 6 JPA repository interfaces.
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 693 ms
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6591f8ea
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6591f8ea
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6591f8ea
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5273143e
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5273143e
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@279c4e3b
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@279c4e3b
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@334b392d
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@334b392d
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@59f7c106
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@59f7c106
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@59f7c106
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@136fece2
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@136fece2
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@136fece2
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5b3755f4
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5b3755f4
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@37d3aa8c
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@5dd747c1
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5dd747c1
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1bdafb01
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7aa3857b
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@500ec769
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@500ec769
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@500ec769
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@37806be6
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@37806be6
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@37806be6
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7bce9ce4
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7bce9ce4
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7bce9ce4
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1d2046bb
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1d2046bb
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1d2046bb
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3b33fff9
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3b33fff9
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3b33fff9
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@fd87c22
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@fd87c22
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@fee881
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@fee881
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@1ff463bb
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@1ff463bb
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1ff463bb
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3b9c9b8b
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@7769d9b6
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7769d9b6
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@248d3a
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3c71cf3e
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3c71cf3e
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3c71cf3e
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@636e4bf8
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@5af38a4a
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@7e1a9173
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@4ca0b9b1
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4ca0b9b1
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5d800a56
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5d800a56
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1be77a76
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@315cf170
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7878bbdb
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@25f7cc38
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@563263a
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@53e28097
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6e794f53
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6e794f53
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@75f4d8a8
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@75f4d8a8
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@69ba72da
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@69ba72da
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2e1ba142
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2e1ba142
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@abc7005
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@abc7005
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@595ec862
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@63c84d31
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@102af1bb
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@102af1bb
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@797f97e3
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@56cd5d76
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@77cd235b
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@302da330
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@302da330
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3568ea59
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@9f2376f
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@173b1af1
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@173b1af1
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@4a520f05
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4a520f05
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@389a1e34
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@389a1e34
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@389a1e34
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@204b0f07
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@204b0f07
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@204b0f07
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6f68756d
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@359865a2
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@5d9bb69b
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5d9bb69b
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@25d0b918
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@25d0b918
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@25d0b918
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@2d38db6f
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2d38db6f
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@37cf91d8
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@37cf91d8
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@571d0925
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@571d0925
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@3fef1e6b
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3fef1e6b
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@4387d2f4
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1dbff71c
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@93ce24d
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@d949bc4
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7079f8f0
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@121cf6f4
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7cdc4070
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@553fbe94
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6abe62bb
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7c0ff7a0
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6e66b498) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@54d35ed5)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6f7c9755) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45abbd24)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1e32037d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5059d398)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5b1420f9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@434ee422)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4de93edd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@53b2e1eb)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@29db008c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1d008e61)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@191b44ca) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5de243bb)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2c4cf7eb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@35260785)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@76d828ff) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39685204)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@195cbf5e
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4387d2f4`
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1293f8d7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@58e5fbe5]
2024-07-23 16:36:02 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-23 16:36:02 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1293f8d7] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5af47414]
2024-07-23 16:36:02 [main] [transactionId=] [threadId=] INFO  p6spy - #1721720162098 | took 1ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 16:36:02 [main] [transactionId=] [threadId=] INFO  p6spy - #1721720162100 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 16:36:02 [main] [transactionId=] [threadId=] INFO  p6spy - #1721720162109 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 16:36:02 [main] [transactionId=] [threadId=] INFO  p6spy - #1721720162117 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 16:36:02 [main] [transactionId=] [threadId=] INFO  p6spy - #1721720162125 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 16:36:02 [main] [transactionId=] [threadId=] INFO  p6spy - #1721720162126 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 16:36:02 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5af47414] for TypeConfiguration
2024-07-23 16:36:02 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 16:36:02 [main] [transactionId=] [threadId=] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-23 16:36:03 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7bfa2d74, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@467924d8, org.springframework.security.web.context.SecurityContextHolderFilter@1ff359b7, org.springframework.security.web.header.HeaderWriterFilter@38691f8d, org.springframework.web.filter.CorsFilter@20bc417f, com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter@614da024, org.springframework.security.web.authentication.logout.LogoutFilter@76c1ede3, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@2991524, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@6a225642, com.soongsil.CoffeeChat.config.jwt.JWTFilter@4b76a0f4, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@5bddb619, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@442612a6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@36d02719, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@46933c4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@65314e4, org.springframework.security.web.session.SessionManagementFilter@150a201b, org.springframework.security.web.access.ExceptionTranslationFilter@4ca3e806, org.springframework.security.web.access.intercept.AuthorizationFilter@7152ee36]
2024-07-23 16:36:03 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 16:36:03 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/v3/api-docs/**']
2024-07-23 16:36:03 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 16:36:03 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-ui/**']
2024-07-23 16:36:03 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 16:36:03 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-resources/**']
2024-07-23 16:36:03 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-07-23 16:36:03 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2024-07-23 16:36:03 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Started CoffeeChatApplication in 2.797 seconds (process running for 3.103)
2024-07-23 16:36:06 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-23 16:36:06 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-23 16:36:06 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-07-23 16:36:07 [http-nio-8080-exec-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.user_mentee,
        m1_0.mentor_id,
        m1_0.birth,
        m1_0.field,
        m1_0.part,
        m1_0.phone_num,
        m1_0.picture,
        pd1_0.mentor_id,
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.startTime,
        u1_0.name,
        u1_0.phone,
        u1_0.picture,
        u1_0.role,
        u1_0.username 
    from
        User u1_0 
    join
        Mentor m1_0 
            on m1_0.mentor_id=u1_0.user_mentor 
    join
        PossibleDate pd1_0 
            on m1_0.mentor_id=pd1_0.mentor_id 
    where
        m1_0.mentor_id=?
2024-07-23 16:36:07 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721720167278 | took 1ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select u1_0.user_id,u1_0.email,u1_0.user_mentee,m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture,pd1_0.mentor_id,pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.startTime,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=?
select u1_0.user_id,u1_0.email,u1_0.user_mentee,m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture,pd1_0.mentor_id,pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.startTime,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=1;
2024-07-23 16:36:07 [http-nio-8080-exec-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.user_mentee,
        u1_0.user_mentor,
        u1_0.name,
        u1_0.phone,
        u1_0.picture,
        u1_0.role,
        u1_0.username 
    from
        User u1_0 
    where
        u1_0.username=?
2024-07-23 16:36:07 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721720167304 | took 4ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username=?
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username='google 114962161569005947668';
2024-07-23 16:36:07 [http-nio-8080-exec-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    join
        Mentor m1_0 
            on m1_0.mentor_id=pd1_0.mentor_id 
    where
        m1_0.mentor_id=? 
        and pd1_0.startTime=? 
        and pd1_0.date=?
2024-07-23 16:36:07 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721720167317 | took 1ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 join Mentor m1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=? and pd1_0.startTime=? and pd1_0.date=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 join Mentor m1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=1 and pd1_0.startTime='1970-01-01T10:00:00.000+0900' and pd1_0.date='2024-07-04T00:00:00.000+0900';
2024-07-23 16:36:07 [http-nio-8080-exec-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    insert 
    into
        Application
        (date, endTime, mentee_id, mentor_id, startTime) 
    values
        (?, ?, ?, ?, ?)
2024-07-23 16:36:07 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721720167324 | took 1ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
insert into Application (date,endTime,mentee_id,mentor_id,startTime) values (?,?,?,?,?)
insert into Application (date,endTime,mentee_id,mentor_id,startTime) values ('2024-07-04T00:00:00.000+0900','1970-01-01T11:00:00.000+0900',4,1,'1970-01-01T10:00:00.000+0900');
2024-07-23 16:36:07 [http-nio-8080-exec-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    update
        PossibleDate 
    set
        date=?,
        endTime=?,
        isActive=?,
        mentor_id=?,
        startTime=? 
    where
        possible_date_id=?
2024-07-23 16:36:07 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721720167335 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
update PossibleDate set date=?,endTime=?,isActive=?,mentor_id=?,startTime=? where possible_date_id=?
update PossibleDate set date='2024-07-04T00:00:00.000+0900',endTime='1970-01-01T11:00:00.000+0900',isActive=false,mentor_id=1,startTime='1970-01-01T10:00:00.000+0900' where possible_date_id=1502;
2024-07-23 16:36:07 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721720167340 | took 3ms | commit | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 16:36:17 [http-nio-8080-exec-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.user_mentee,
        m1_0.mentor_id,
        m1_0.birth,
        m1_0.field,
        m1_0.part,
        m1_0.phone_num,
        m1_0.picture,
        pd1_0.mentor_id,
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.startTime,
        u1_0.name,
        u1_0.phone,
        u1_0.picture,
        u1_0.role,
        u1_0.username 
    from
        User u1_0 
    join
        Mentor m1_0 
            on m1_0.mentor_id=u1_0.user_mentor 
    join
        PossibleDate pd1_0 
            on m1_0.mentor_id=pd1_0.mentor_id 
    where
        m1_0.mentor_id=?
2024-07-23 16:36:17 [http-nio-8080-exec-2] [transactionId=] [threadId=] INFO  p6spy - #1721720177925 | took 0ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select u1_0.user_id,u1_0.email,u1_0.user_mentee,m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture,pd1_0.mentor_id,pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.startTime,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=?
select u1_0.user_id,u1_0.email,u1_0.user_mentee,m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture,pd1_0.mentor_id,pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.startTime,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=1;
2024-07-23 16:36:17 [http-nio-8080-exec-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.user_mentee,
        u1_0.user_mentor,
        u1_0.name,
        u1_0.phone,
        u1_0.picture,
        u1_0.role,
        u1_0.username 
    from
        User u1_0 
    where
        u1_0.username=?
2024-07-23 16:36:17 [http-nio-8080-exec-2] [transactionId=] [threadId=] INFO  p6spy - #1721720177936 | took 1ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username=?
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username='google 114962161569005947668';
2024-07-23 16:36:17 [http-nio-8080-exec-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    join
        Mentor m1_0 
            on m1_0.mentor_id=pd1_0.mentor_id 
    where
        m1_0.mentor_id=? 
        and pd1_0.startTime=? 
        and pd1_0.date=?
2024-07-23 16:36:17 [http-nio-8080-exec-2] [transactionId=] [threadId=] INFO  p6spy - #1721720177940 | took 1ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 join Mentor m1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=? and pd1_0.startTime=? and pd1_0.date=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 join Mentor m1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=1 and pd1_0.startTime='1970-01-01T10:00:00.000+0900' and pd1_0.date='2024-07-04T00:00:00.000+0900';
2024-07-23 16:36:17 [http-nio-8080-exec-2] [transactionId=] [threadId=] INFO  p6spy - #1721720177941 | took 0ms | rollback | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 16:36:17 [http-nio-8080-exec-2] [transactionId=] [threadId=] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalStateException: 이미 신청된 시간입니다.] with root cause
java.lang.IllegalStateException: 이미 신청된 시간입니다.
	at com.soongsil.CoffeeChat.service.ApplicationService.createApplication(ApplicationService.java:87)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.soongsil.CoffeeChat.service.ApplicationService$$SpringCGLIB$$0.createApplication(<generated>)
	at com.soongsil.CoffeeChat.controller.ApplicationController.createApplication(ApplicationController.java:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:261)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:189)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter.doFilterInternal(DefaultLogoutPageGeneratingFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:189)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:175)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.soongsil.CoffeeChat.config.jwt.JWTFilter.doFilterInternal(JWTFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter.doFilter(CustomLogoutFilter.java:43)
	at com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter.doFilter(CustomLogoutFilter.java:32)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-07-23 17:03:34 [main] [transactionId=] [threadId=] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest]: ConcurrencyTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-07-23 17:03:34 [main] [transactionId=] [threadId=] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.soongsil.CoffeeChat.CoffeeChatApplication for test class com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest
2024-07-23 17:03:34 [main] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - Starting ConcurrencyTest using Java 17.0.11 with PID 10474 (started by kimkyohwee in /Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server)
2024-07-23 17:03:34 [main] [transactionId=] [threadId=] DEBUG c.s.C.Concurrency.ConcurrencyTest - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-07-23 17:03:34 [main] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - No active profile set, falling back to 1 default profile: "default"
2024-07-23 17:03:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 17:03:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-23 17:03:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 74 ms. Found 6 JPA repository interfaces.
2024-07-23 17:03:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 17:03:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-23 17:03:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:03:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:03:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:03:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:03:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:03:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:03:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-07-23 17:03:34 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@16e07bae
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@16e07bae
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@16e07bae
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@598778cc
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@598778cc
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3386ed8
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3386ed8
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@727453a3
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@727453a3
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@67dc6b48
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@67dc6b48
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@67dc6b48
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@57f2e67
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@57f2e67
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@57f2e67
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@11cadb32
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@11cadb32
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@6d3ad37a
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@26f5e45d
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@26f5e45d
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@704c3bdf
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@37986daf
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@c82d925
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@c82d925
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@c82d925
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@55c03e4
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@55c03e4
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@55c03e4
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@14df5253
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@14df5253
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@14df5253
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@605eb072
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@605eb072
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@605eb072
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7a0f06ad
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7a0f06ad
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7a0f06ad
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1fa9692b
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1fa9692b
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@710afd47
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@710afd47
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@64420e34
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@64420e34
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@64420e34
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@667a467f
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@324e8baa
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@324e8baa
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1488a861
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@604f376a
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@604f376a
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@604f376a
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5432dca2
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@12670e55
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@43fd77d8
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5a90fcaa
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5a90fcaa
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1805ec96
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1805ec96
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@32ba5c65
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1ad1be5d
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@47797401
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@702f4124
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@10166230
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@7221539
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@b77b0a0
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@b77b0a0
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@15be68b
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@15be68b
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@22ff1372
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@22ff1372
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@356341c9
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@356341c9
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3a70575
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3a70575
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5d96d434
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7283877
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@286a4c52
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@286a4c52
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@13dd7887
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@780129bc
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3e2c4d4b
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@44de8e00
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@44de8e00
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3cbfdf5c
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4d825dbe
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@11180750
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@11180750
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@210635fd
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@210635fd
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@63814bbe
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@63814bbe
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@63814bbe
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3cb195dd
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3cb195dd
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3cb195dd
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6dc2279c
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7d7b4e04
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@144e36ae
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@144e36ae
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@24615687
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@24615687
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@24615687
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@58636b50
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7f4f1536
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1ad1b737
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1ad1b737
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@342a1f84
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@342a1f84
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@342a1f84
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@77d0dbba
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@77d0dbba
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@70b196d3
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@70b196d3
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@67ceeffd
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@67ceeffd
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3fc1abf
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3fc1abf
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@72001c71
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@72001c71
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@e7b0bec
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1e5aacd9
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@17003497
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@17003497
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7856f41a
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5fbae40
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2c08c787
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@67f591c2
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@284c4f02
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@709d6de5
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1a43a88e
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@51f34185
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1b8d20e6
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:815)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:438)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:189)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at com.p6spy.engine.spy.P6DataSource.getConnection(P6DataSource.java:300)
	at org.springframework.jdbc.datasource.DelegatingDataSource.getConnection(DelegatingDataSource.java:101)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:428)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:276)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:107)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:129)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:223)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:170)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:104)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:149)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:165)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:88)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:935)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:805)
	... 128 common frames omitted
Caused by: java.net.UnknownHostException: ${DB_URL}: nodename nor servname provided, or not known
	at java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(InetAddress.java:934)
	at java.base/java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1543)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(InetAddress.java:852)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1533)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1385)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:130)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:62)
	... 131 common frames omitted
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator - HHH000342: Could not obtain connection to query metadata
java.lang.NullPointerException: Cannot invoke "org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(java.sql.SQLException, String)" because the return value of "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.sqlExceptionHelper()" is null
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:116)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:276)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:107)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:129)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:223)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:170)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@28f8ce2e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2c0a3826)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4af0c50) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5ffd35dd)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@311a09b2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4cacccbf)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@301d84f6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6f80cf5)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@674ed201) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4dad2363)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@114b2414) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@57920d6c)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@465d1345) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@62cf86d6)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2a6c751f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6dd2e453)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@433b1597) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5d5cd210)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@43090195
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@7856f41a`
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@53e166ad] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@30c03473]
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@53e166ad] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@14b9817b]
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-23 17:03:37 [main] [transactionId=] [threadId=] ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:815)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:438)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:189)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at com.p6spy.engine.spy.P6DataSource.getConnection(P6DataSource.java:300)
	at org.springframework.jdbc.datasource.DelegatingDataSource.getConnection(DelegatingDataSource.java:101)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:428)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:46)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:39)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:70)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processTableResultSet(InformationExtractorJdbcDatabaseMetaDataImpl.java:64)
	at org.hibernate.tool.schema.extract.internal.AbstractInformationExtractorImpl.getTables(AbstractInformationExtractorImpl.java:570)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:122)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:72)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:104)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:149)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:165)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:88)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:935)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:805)
	... 133 common frames omitted
Caused by: java.net.UnknownHostException: ${DB_URL}
	at java.base/java.net.InetAddress$CachedAddresses.get(InetAddress.java:801)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1533)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1385)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:130)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:62)
	... 136 common frames omitted
2024-07-23 17:03:37 [main] [transactionId=] [threadId=] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 08S01
2024-07-23 17:03:37 [main] [transactionId=] [threadId=] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
2024-07-23 17:03:37 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@14b9817b] for TypeConfiguration
2024-07-23 17:03:37 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@15ae31b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@14b9817b]
2024-07-23 17:03:37 [main] [transactionId=] [threadId=] ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution [Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.] [n/a]
2024-07-23 17:03:37 [main] [transactionId=] [threadId=] WARN  o.s.w.c.s.GenericWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution [Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.] [n/a]
2024-07-23 17:03:37 [main] [transactionId=] [threadId=] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-07-23 17:03:37 [main] [transactionId=] [threadId=] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution [Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.] [n/a]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1773)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: jakarta.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution [Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.] [n/a]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	... 93 common frames omitted
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution [Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.] [n/a]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:100)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:74)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:39)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:70)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processTableResultSet(InformationExtractorJdbcDatabaseMetaDataImpl.java:64)
	at org.hibernate.tool.schema.extract.internal.AbstractInformationExtractorImpl.getTables(AbstractInformationExtractorImpl.java:570)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:122)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:72)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	... 97 common frames omitted
Caused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:815)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:438)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:189)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at com.p6spy.engine.spy.P6DataSource.getConnection(P6DataSource.java:300)
	at org.springframework.jdbc.datasource.DelegatingDataSource.getConnection(DelegatingDataSource.java:101)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:428)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:46)
	... 118 common frames omitted
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:104)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:149)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:165)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:88)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:935)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:805)
	... 133 common frames omitted
Caused by: java.net.UnknownHostException: ${DB_URL}
	at java.base/java.net.InetAddress$CachedAddresses.get(InetAddress.java:801)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1533)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1385)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:130)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:62)
	... 136 common frames omitted
2024-07-23 17:03:37 [main] [transactionId=] [threadId=] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest@308e465b]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@4ac26092 testClass = com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest, locations = [], classes = [com.soongsil.CoffeeChat.CoffeeChatApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@345f69f3, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@71e9ebae, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@42530531, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@1b75c2e3, org.springframework.boot.test.context.SpringBootTestAnnotation@393d5387], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution [Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.] [n/a]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1773)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 72 common frames omitted
Caused by: jakarta.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution [Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.] [n/a]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	... 93 common frames omitted
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution [Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.] [n/a]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:100)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:74)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:39)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:70)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processTableResultSet(InformationExtractorJdbcDatabaseMetaDataImpl.java:64)
	at org.hibernate.tool.schema.extract.internal.AbstractInformationExtractorImpl.getTables(AbstractInformationExtractorImpl.java:570)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:122)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:72)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	... 97 common frames omitted
Caused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:815)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:438)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:189)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at com.p6spy.engine.spy.P6DataSource.getConnection(P6DataSource.java:300)
	at org.springframework.jdbc.datasource.DelegatingDataSource.getConnection(DelegatingDataSource.java:101)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:428)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:46)
	... 118 common frames omitted
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:104)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:149)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:165)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:88)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:935)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:805)
	... 133 common frames omitted
Caused by: java.net.UnknownHostException: ${DB_URL}
	at java.base/java.net.InetAddress$CachedAddresses.get(InetAddress.java:801)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1533)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1385)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:130)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:62)
	... 136 common frames omitted
2024-07-23 17:04:08 [main] [transactionId=] [threadId=] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest]: ConcurrencyTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-07-23 17:04:08 [main] [transactionId=] [threadId=] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.soongsil.CoffeeChat.CoffeeChatApplication for test class com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - Starting ConcurrencyTest using Java 17.0.11 with PID 10481 (started by kimkyohwee in /Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server)
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG c.s.C.Concurrency.ConcurrencyTest - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - No active profile set, falling back to 1 default profile: "default"
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 75 ms. Found 6 JPA repository interfaces.
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6df2a206
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6df2a206
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6df2a206
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@61993d18
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@61993d18
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6f240187
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6f240187
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@46a388cc
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@46a388cc
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3e39f08c
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3e39f08c
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3e39f08c
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@16e07bae
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@16e07bae
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@16e07bae
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@727453a3
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@727453a3
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@67dc6b48
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@57f2e67
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@57f2e67
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4571cebe
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@154864f8
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@11cadb32
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@11cadb32
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@11cadb32
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@6d3ad37a
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@6d3ad37a
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6d3ad37a
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@26f5e45d
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@26f5e45d
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@26f5e45d
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@704c3bdf
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@704c3bdf
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@704c3bdf
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@37986daf
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@37986daf
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@37986daf
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@c82d925
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@c82d925
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@55c03e4
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@55c03e4
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@14df5253
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@14df5253
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@14df5253
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@605eb072
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@7a0f06ad
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7a0f06ad
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1fa9692b
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@710afd47
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@710afd47
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@710afd47
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@64420e34
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@667a467f
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@324e8baa
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1488a861
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1488a861
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@604f376a
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@604f376a
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5432dca2
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@12670e55
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@43fd77d8
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5a90fcaa
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@1805ec96
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@32ba5c65
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1ad1be5d
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1ad1be5d
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@47797401
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@47797401
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@702f4124
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@702f4124
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@10166230
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@10166230
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7221539
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7221539
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@b77b0a0
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@15be68b
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@22ff1372
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@22ff1372
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@356341c9
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3a70575
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5d96d434
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7283877
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7283877
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@286a4c52
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@13dd7887
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@780129bc
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@780129bc
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@3e2c4d4b
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3e2c4d4b
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@44de8e00
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@44de8e00
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@44de8e00
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3cbfdf5c
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3cbfdf5c
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3cbfdf5c
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4d825dbe
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@11180750
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@210635fd
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@210635fd
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@63814bbe
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@63814bbe
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@63814bbe
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3cb195dd
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6dc2279c
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@7d7b4e04
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7d7b4e04
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@144e36ae
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@144e36ae
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@144e36ae
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@24615687
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@24615687
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@58636b50
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@58636b50
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7f4f1536
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7f4f1536
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1ad1b737
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1ad1b737
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@342a1f84
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@342a1f84
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@77d0dbba
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@70b196d3
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@19647566
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@19647566
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@ff2266c
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@71b3ba5a
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@83ebdc5
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@a047bdb
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@14dbfdb1
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7856f41a
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5fbae40
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2c08c787
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@67f591c2
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6ec98ccc
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@430106cf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@647af13d)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2aac6fa7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@29a1ec65)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@625db0e0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@511d568f)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1805ca5c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3e61cffd)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3134b261) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@aa633e6)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3cc74fc4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@c697186)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@185a7dd0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2358443e)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@25e796fe) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@62c53685)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@29ba63f0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4822ab4d)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@679f59f1
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@ff2266c`
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@18ff1520] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@36120a8b]
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@18ff1520] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4138af7]
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1721721850698 | took 1ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1721721850700 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1721721850710 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1721721850718 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1721721850726 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1721721850727 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4138af7] for TypeConfiguration
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 17:04:11 [main] [transactionId=] [threadId=] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-23 17:04:12 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@522a9876, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@794ffe22, org.springframework.security.web.context.SecurityContextHolderFilter@52d04234, org.springframework.security.web.header.HeaderWriterFilter@4cf5db07, org.springframework.web.filter.CorsFilter@2da16d31, com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter@74a15f4, org.springframework.security.web.authentication.logout.LogoutFilter@66ade539, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@4d542218, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@b729651, com.soongsil.CoffeeChat.config.jwt.JWTFilter@125c443, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@705606ac, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@71d94ab, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3f7e72a7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@69bf351e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@21f3a99c, org.springframework.security.web.session.SessionManagementFilter@5cdf6bb1, org.springframework.security.web.access.ExceptionTranslationFilter@3e51beda, org.springframework.security.web.access.intercept.AuthorizationFilter@228ed68c]
2024-07-23 17:04:12 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Ant [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 17:04:12 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Ant [pattern='/v3/api-docs/**']
2024-07-23 17:04:12 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 17:04:12 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-ui/**']
2024-07-23 17:04:12 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 17:04:12 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-resources/**']
2024-07-23 17:04:12 [main] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - Started ConcurrencyTest in 3.502 seconds (process running for 4.112)
2024-07-23 17:04:12 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        m1_0.mentor_id,
        m1_0.birth,
        m1_0.field,
        m1_0.part,
        m1_0.phone_num,
        m1_0.picture 
    from
        Mentor m1_0 
    where
        m1_0.mentor_id=?
2024-07-23 17:04:12 [main] [transactionId=] [threadId=] INFO  p6spy - #1721721852729 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture from Mentor m1_0 where m1_0.mentor_id=?
select m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture from Mentor m1_0 where m1_0.mentor_id=1;
2024-07-23 17:04:12 [main] [transactionId=] [threadId=] INFO  p6spy - #1721721852737 | took 0ms | commit | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 17:04:12 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    where
        pd1_0.possible_date_id=?
2024-07-23 17:04:12 [main] [transactionId=] [threadId=] INFO  p6spy - #1721721852741 | took 0ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=2003;
2024-07-23 17:04:12 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    update
        PossibleDate 
    set
        date=?,
        endTime=?,
        isActive=?,
        mentor_id=?,
        startTime=? 
    where
        possible_date_id=?
2024-07-23 17:04:12 [main] [transactionId=] [threadId=] INFO  p6spy - #1721721852755 | took 2ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
update PossibleDate set date=?,endTime=?,isActive=?,mentor_id=?,startTime=? where possible_date_id=?
update PossibleDate set date='2000-06-25T00:00:00.000+0900',endTime='1970-01-01T11:00:00.000+0900',isActive=true,mentor_id=1,startTime='1970-01-01T10:00:00.000+0900' where possible_date_id=2003;
2024-07-23 17:04:12 [main] [transactionId=] [threadId=] INFO  p6spy - #1721721852757 | took 1ms | commit | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 17:04:12 [Thread-1] [transactionId=] [threadId=] INFO  p6spy - #1721721852943 | took 0ms | rollback | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 17:04:13 [Thread-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.user_mentee,
        m1_0.mentor_id,
        m1_0.birth,
        m1_0.field,
        m1_0.part,
        m1_0.phone_num,
        m1_0.picture,
        pd1_0.mentor_id,
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.startTime,
        u1_0.name,
        u1_0.phone,
        u1_0.picture,
        u1_0.role,
        u1_0.username 
    from
        User u1_0 
    join
        Mentor m1_0 
            on m1_0.mentor_id=u1_0.user_mentor 
    join
        PossibleDate pd1_0 
            on m1_0.mentor_id=pd1_0.mentor_id 
    where
        m1_0.mentor_id=?
2024-07-23 17:04:13 [Thread-2] [transactionId=] [threadId=] INFO  p6spy - #1721721853113 | took 11ms | statement | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select u1_0.user_id,u1_0.email,u1_0.user_mentee,m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture,pd1_0.mentor_id,pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.startTime,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=?
select u1_0.user_id,u1_0.email,u1_0.user_mentee,m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture,pd1_0.mentor_id,pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.startTime,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=1;
2024-07-23 17:04:13 [Thread-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.user_mentee,
        u1_0.user_mentor,
        u1_0.name,
        u1_0.phone,
        u1_0.picture,
        u1_0.role,
        u1_0.username 
    from
        User u1_0 
    where
        u1_0.username=?
2024-07-23 17:04:13 [Thread-2] [transactionId=] [threadId=] INFO  p6spy - #1721721853127 | took 0ms | statement | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username=?
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username='user0';
2024-07-23 17:04:13 [Thread-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    join
        Mentor m1_0 
            on m1_0.mentor_id=pd1_0.mentor_id 
    where
        m1_0.mentor_id=? 
        and pd1_0.startTime=? 
        and pd1_0.date=?
2024-07-23 17:04:13 [Thread-2] [transactionId=] [threadId=] INFO  p6spy - #1721721853140 | took 0ms | statement | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 join Mentor m1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=? and pd1_0.startTime=? and pd1_0.date=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 join Mentor m1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=1 and pd1_0.startTime='1970-01-01T10:00:00.000+0900' and pd1_0.date='2000-06-25T00:00:00.000+0900';
2024-07-23 17:04:13 [Thread-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    insert 
    into
        Application
        (date, endTime, mentor_id, startTime) 
    values
        (?, ?, ?, ?)
2024-07-23 17:04:13 [Thread-2] [transactionId=] [threadId=] INFO  p6spy - #1721721853144 | took 0ms | statement | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
insert into Application (date,endTime,mentor_id,startTime) values (?,?,?,?)
insert into Application (date,endTime,mentor_id,startTime) values ('2000-06-25T00:00:00.000+0900','1970-01-01T11:00:00.000+0900',1,'1970-01-01T10:00:00.000+0900');
2024-07-23 17:04:13 [Thread-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    update
        PossibleDate 
    set
        date=?,
        endTime=?,
        isActive=?,
        mentor_id=?,
        startTime=? 
    where
        possible_date_id=?
2024-07-23 17:04:13 [Thread-2] [transactionId=] [threadId=] INFO  p6spy - #1721721853157 | took 3ms | statement | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
update PossibleDate set date=?,endTime=?,isActive=?,mentor_id=?,startTime=? where possible_date_id=?
update PossibleDate set date='2000-06-25T00:00:00.000+0900',endTime='1970-01-01T11:00:00.000+0900',isActive=false,mentor_id=1,startTime='1970-01-01T10:00:00.000+0900' where possible_date_id=2003;
2024-07-23 17:04:13 [Thread-2] [transactionId=] [threadId=] INFO  p6spy - #1721721853158 | took 0ms | commit | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 17:04:13 [MailExecutor-1] [transactionId=] [threadId=] ERROR o.s.a.i.SimpleAsyncUncaughtExceptionHandler - Unexpected exception occurred invoking async method: public void com.soongsil.CoffeeChat.service.ApplicationService.sendApplicationMatchedEmailAsync(java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate,java.time.LocalTime,java.time.LocalTime) throws jakarta.mail.MessagingException
java.lang.NullPointerException: Cannot invoke "String.length()" because "s" is null
	at jakarta.mail.internet.InternetAddress.parse(InternetAddress.java:778)
	at jakarta.mail.internet.InternetAddress.parse(InternetAddress.java:737)
	at jakarta.mail.internet.InternetAddress.parse(InternetAddress.java:714)
	at jakarta.mail.internet.MimeMessage.addRecipients(MimeMessage.java:709)
	at com.soongsil.CoffeeChat.util.email.EmailUtil.sendMail(EmailUtil.java:25)
	at com.soongsil.CoffeeChat.util.email.EmailUtil.sendApplicationMatchedEmail(EmailUtil.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:713)
	at com.soongsil.CoffeeChat.util.email.EmailUtil$$SpringCGLIB$$0.sendApplicationMatchedEmail(<generated>)
	at com.soongsil.CoffeeChat.service.ApplicationService.sendApplicationMatchedEmailAsync(ApplicationService.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:113)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-07-23 17:04:13 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 17:04:13 [SpringApplicationShutdownHook] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@4138af7] for TypeConfiguration
2024-07-23 17:04:13 [SpringApplicationShutdownHook] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@45b6e133] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4138af7]
2024-07-23 17:04:13 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-23 17:04:13 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
