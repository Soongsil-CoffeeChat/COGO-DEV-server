2024-07-23 05:05:21 [main] [transactionId=] [threadId=] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest]: ConcurrencyTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-07-23 05:05:21 [main] [transactionId=] [threadId=] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.soongsil.CoffeeChat.CoffeeChatApplication for test class com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest
2024-07-23 05:05:21 [main] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - Starting ConcurrencyTest using Java 17.0.11 with PID 9483 (started by kimkyohwee in /Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server)
2024-07-23 05:05:21 [main] [transactionId=] [threadId=] DEBUG c.s.C.Concurrency.ConcurrencyTest - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-07-23 05:05:21 [main] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - No active profile set, falling back to 1 default profile: "default"
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 73 ms. Found 6 JPA repository interfaces.
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@46894dc5
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@46894dc5
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@46894dc5
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@596afb2f
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@596afb2f
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@79ba0285
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@79ba0285
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6df2a206
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6df2a206
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@61993d18
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@61993d18
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@61993d18
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6f240187
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6f240187
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6f240187
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@16e07bae
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@16e07bae
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@598778cc
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3386ed8
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3386ed8
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@727453a3
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@67dc6b48
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@57f2e67
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@57f2e67
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@57f2e67
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4571cebe
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@4571cebe
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4571cebe
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@154864f8
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@154864f8
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@154864f8
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@11cadb32
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@11cadb32
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@11cadb32
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6d3ad37a
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6d3ad37a
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6d3ad37a
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@26f5e45d
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@26f5e45d
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@704c3bdf
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@704c3bdf
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@37986daf
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@37986daf
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@37986daf
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@c82d925
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@55c03e4
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@55c03e4
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@14df5253
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@605eb072
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@605eb072
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@605eb072
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7a0f06ad
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@1fa9692b
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@710afd47
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@64420e34
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@64420e34
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@667a467f
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@667a467f
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@324e8baa
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1488a861
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@604f376a
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5432dca2
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@12670e55
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@43fd77d8
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5a90fcaa
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5a90fcaa
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1805ec96
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1805ec96
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@32ba5c65
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@32ba5c65
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1ad1be5d
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1ad1be5d
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@47797401
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@47797401
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@702f4124
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@10166230
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7221539
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7221539
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@b77b0a0
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@15be68b
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@22ff1372
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@356341c9
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@356341c9
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3a70575
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5d96d434
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@7283877
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7283877
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@286a4c52
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@286a4c52
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@13dd7887
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@13dd7887
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@13dd7887
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@780129bc
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@780129bc
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@780129bc
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3e2c4d4b
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@44de8e00
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@3cbfdf5c
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3cbfdf5c
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4d825dbe
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4d825dbe
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4d825dbe
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@11180750
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@210635fd
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@63814bbe
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@63814bbe
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@3cb195dd
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3cb195dd
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3cb195dd
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6dc2279c
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6dc2279c
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7d7b4e04
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7d7b4e04
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@144e36ae
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@144e36ae
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@24615687
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@24615687
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@58636b50
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@58636b50
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@7f4f1536
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1ad1b737
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@15cee630
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@15cee630
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@39a8e2fa
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2f9addd4
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@1c43df76
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@ff2266c
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@71b3ba5a
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@83ebdc5
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@a047bdb
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@14dbfdb1
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7856f41a
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3d02ff64
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2e013ba1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d8c729f)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@740ee00f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@430106cf)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@647af13d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2aac6fa7)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@29a1ec65) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@625db0e0)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@511d568f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1805ca5c)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3e61cffd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3134b261)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@aa633e6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3cc74fc4)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c697186) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@185a7dd0)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2358443e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@25e796fe)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@10f397d0
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@39a8e2fa`
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 05:05:22 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6e78177b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4ec37a42]
2024-07-23 05:05:23 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-23 05:05:23 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6e78177b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@363d29dd]
2024-07-23 05:05:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678723448 | took 1ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 05:05:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678723451 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 05:05:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678723460 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 05:05:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678723469 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 05:05:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678723478 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 05:05:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678723479 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 05:05:23 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@363d29dd] for TypeConfiguration
2024-07-23 05:05:23 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 05:05:24 [main] [transactionId=] [threadId=] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-23 05:05:24 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@316975be, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6b09fcda, org.springframework.security.web.context.SecurityContextHolderFilter@17734113, org.springframework.security.web.header.HeaderWriterFilter@49e3b86b, org.springframework.web.filter.CorsFilter@5cf4c93, com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter@55cd41f7, org.springframework.security.web.authentication.logout.LogoutFilter@6dd0e2f4, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@10587ce5, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@33dcbdc2, com.soongsil.CoffeeChat.config.jwt.JWTFilter@2ff30a75, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@307ca947, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@b38dc7d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@d15f98a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@704c3ca2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@746cb25d, org.springframework.security.web.session.SessionManagementFilter@771c4015, org.springframework.security.web.access.ExceptionTranslationFilter@686279e0, org.springframework.security.web.access.intercept.AuthorizationFilter@45c57dbd]
2024-07-23 05:05:24 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Ant [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 05:05:24 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Ant [pattern='/v3/api-docs/**']
2024-07-23 05:05:24 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 05:05:24 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-ui/**']
2024-07-23 05:05:24 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 05:05:24 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-resources/**']
2024-07-23 05:05:25 [main] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - Started ConcurrencyTest in 3.386 seconds (process running for 4.006)
2024-07-23 05:05:25 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        m1_0.mentor_id,
        m1_0.birth,
        m1_0.field,
        m1_0.part,
        m1_0.phone_num,
        m1_0.picture 
    from
        Mentor m1_0 
    where
        m1_0.mentor_id=?
2024-07-23 05:05:25 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678725412 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture from Mentor m1_0 where m1_0.mentor_id=?
select m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture from Mentor m1_0 where m1_0.mentor_id=1;
2024-07-23 05:05:25 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678725419 | took 0ms | commit | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 05:05:25 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        m1_0.mentee_id,
        m1_0.birth,
        m1_0.grade,
        m1_0.memo,
        m1_0.nickname,
        m1_0.part,
        m1_0.phone_num,
        m1_0.picture 
    from
        Mentee m1_0 
    where
        m1_0.mentee_id=?
2024-07-23 05:05:25 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678725421 | took 0ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select m1_0.mentee_id,m1_0.birth,m1_0.grade,m1_0.memo,m1_0.nickname,m1_0.part,m1_0.phone_num,m1_0.picture from Mentee m1_0 where m1_0.mentee_id=?
select m1_0.mentee_id,m1_0.birth,m1_0.grade,m1_0.memo,m1_0.nickname,m1_0.part,m1_0.phone_num,m1_0.picture from Mentee m1_0 where m1_0.mentee_id=1;
2024-07-23 05:05:25 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678725422 | took 0ms | commit | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 05:05:25 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    where
        pd1_0.possible_date_id=?
2024-07-23 05:05:25 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678725425 | took 0ms | statement | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=2001;
2024-07-23 05:05:25 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    update
        PossibleDate 
    set
        date=?,
        endTime=?,
        isActive=?,
        mentor_id=?,
        startTime=? 
    where
        possible_date_id=?
2024-07-23 05:05:25 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678725437 | took 1ms | statement | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
update PossibleDate set date=?,endTime=?,isActive=?,mentor_id=?,startTime=? where possible_date_id=?
update PossibleDate set date='2024-06-25T00:00:00.000+0900',endTime='1970-01-01T11:00:00.000+0900',isActive=true,mentor_id=1,startTime='1970-01-01T10:00:00.000+0900' where possible_date_id=2001;
2024-07-23 05:05:25 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678725439 | took 1ms | commit | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 05:05:25 [Thread-1] [transactionId=1] [threadId=139] INFO  c.s.C.service.ApplicationService - aaa트랜잭션 시작
2024-07-23 05:05:25 [Thread-2] [transactionId=2] [threadId=140] INFO  c.s.C.service.ApplicationService - aaa트랜잭션 시작
2024-07-23 05:05:25 [Thread-1] [transactionId=1] [threadId=139] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    where
        pd1_0.possible_date_id=?
2024-07-23 05:05:25 [Thread-2] [transactionId=2] [threadId=140] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    where
        pd1_0.possible_date_id=?
2024-07-23 05:05:25 [Thread-1] [transactionId=1] [threadId=139] INFO  p6spy - #1721678725441 | took 0ms | statement | connection 6| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=2001;
2024-07-23 05:05:25 [Thread-1] [transactionId=1] [threadId=139] DEBUG org.hibernate.SQL - 
    insert 
    into
        Application
        (accept, date, endTime, mentee_id, mentor_id, startTime) 
    values
        (?, ?, ?, ?, ?, ?)
2024-07-23 05:05:25 [Thread-1] [transactionId=1] [threadId=139] INFO  p6spy - #1721678725445 | took 0ms | statement | connection 6| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
insert into Application (accept,date,endTime,mentee_id,mentor_id,startTime) values (?,?,?,?,?,?)
insert into Application (accept,date,endTime,mentee_id,mentor_id,startTime) values ('UNMATCHED','2024-06-25T00:00:00.000+0900','1970-01-01T11:00:00.000+0900',1,1,'1970-01-01T10:00:00.000+0900');
2024-07-23 05:05:25 [Thread-1] [transactionId=1] [threadId=139] INFO  c.s.C.service.ApplicationService - aaaApplication 생성: com.soongsil.CoffeeChat.entity.Application@12024369
2024-07-23 05:05:25 [Thread-1] [transactionId=1] [threadId=139] INFO  c.s.C.service.ApplicationService - aaa트랜잭션 종료
2024-07-23 05:05:25 [Thread-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    update
        PossibleDate 
    set
        date=?,
        endTime=?,
        isActive=?,
        mentor_id=?,
        startTime=? 
    where
        possible_date_id=?
2024-07-23 05:05:25 [Thread-1] [transactionId=] [threadId=] INFO  p6spy - #1721678725450 | took 0ms | statement | connection 6| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
update PossibleDate set date=?,endTime=?,isActive=?,mentor_id=?,startTime=? where possible_date_id=?
update PossibleDate set date='2024-06-25T00:00:00.000+0900',endTime='1970-01-01T11:00:00.000+0900',isActive=false,mentor_id=1,startTime='1970-01-01T10:00:00.000+0900' where possible_date_id=2001;
2024-07-23 05:05:25 [Thread-1] [transactionId=] [threadId=] INFO  p6spy - #1721678725451 | took 0ms | commit | connection 6| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 05:05:25 [Thread-2] [transactionId=2] [threadId=140] INFO  p6spy - #1721678725451 | took 10ms | statement | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=2001;
2024-07-23 05:05:25 [Thread-2] [transactionId=2] [threadId=140] ERROR c.s.C.service.ApplicationService - aaaAplication 생성 실패-Active하지 않음.
2024-07-23 05:05:25 [Thread-2] [transactionId=2] [threadId=140] ERROR c.s.C.service.ApplicationService - aaaAplication 생성중 에러: 
java.lang.Exception: The PossibleDate is already booked or does not exist.
	at com.soongsil.CoffeeChat.service.ApplicationService.createApplicationIfPossible(ApplicationService.java:129)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.soongsil.CoffeeChat.service.ApplicationService$$SpringCGLIB$$0.createApplicationIfPossible(<generated>)
	at com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest.lambda$testConcurrency$1(ConcurrencyTest.java:57)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-07-23 05:05:25 [Thread-2] [transactionId=2] [threadId=140] INFO  c.s.C.service.ApplicationService - aaa트랜잭션 종료
2024-07-23 05:05:25 [Thread-2] [transactionId=] [threadId=] INFO  p6spy - #1721678725453 | took 0ms | commit | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 05:05:25 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 05:05:25 [SpringApplicationShutdownHook] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@363d29dd] for TypeConfiguration
2024-07-23 05:05:25 [SpringApplicationShutdownHook] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@57589e0b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@363d29dd]
2024-07-23 05:05:25 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-23 05:05:25 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-23 05:09:32 [main] [transactionId=] [threadId=] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest]: ConcurrencyTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-07-23 05:09:32 [main] [transactionId=] [threadId=] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.soongsil.CoffeeChat.CoffeeChatApplication for test class com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - Starting ConcurrencyTest using Java 17.0.11 with PID 9498 (started by kimkyohwee in /Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG c.s.C.Concurrency.ConcurrencyTest - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - No active profile set, falling back to 1 default profile: "default"
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 68 ms. Found 6 JPA repository interfaces.
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@308a9264
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@308a9264
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@308a9264
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7da77305
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7da77305
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3cdfbbef
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3cdfbbef
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7a1ddbf1
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7a1ddbf1
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1e606f64
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@1e606f64
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@1e606f64
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@581918f6
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@581918f6
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@581918f6
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@100807ca
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@100807ca
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@c67395
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@5fc7255c
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5fc7255c
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@20a47036
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@70c205bf
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@43ab9ae9
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@43ab9ae9
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@43ab9ae9
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@2520aa05
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@2520aa05
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@2520aa05
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@26865b57
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@26865b57
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@26865b57
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@46894dc5
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@46894dc5
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@46894dc5
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@596afb2f
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@596afb2f
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@596afb2f
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@79ba0285
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@79ba0285
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@6df2a206
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@6df2a206
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@61993d18
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@61993d18
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@61993d18
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@6f240187
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@46a388cc
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@46a388cc
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3e39f08c
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@16e07bae
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@16e07bae
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@16e07bae
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@598778cc
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3386ed8
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@727453a3
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@67dc6b48
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@67dc6b48
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@57f2e67
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@57f2e67
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4571cebe
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@154864f8
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@11cadb32
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6d3ad37a
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@26f5e45d
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@704c3bdf
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@37986daf
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@37986daf
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@c82d925
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@c82d925
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@55c03e4
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@55c03e4
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@14df5253
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@14df5253
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@605eb072
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@605eb072
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7a0f06ad
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1fa9692b
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@710afd47
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@710afd47
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@64420e34
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@667a467f
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@324e8baa
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1488a861
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1488a861
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@604f376a
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5432dca2
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@12670e55
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@12670e55
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@43fd77d8
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@43fd77d8
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5a90fcaa
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5a90fcaa
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5a90fcaa
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1805ec96
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1805ec96
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1805ec96
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@32ba5c65
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@1ad1be5d
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@47797401
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@47797401
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@702f4124
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@702f4124
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@702f4124
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@10166230
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7221539
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@b77b0a0
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@b77b0a0
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@15be68b
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@15be68b
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@15be68b
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@22ff1372
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@22ff1372
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@356341c9
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@356341c9
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3a70575
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3a70575
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5d96d434
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5d96d434
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7283877
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7283877
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@286a4c52
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@13dd7887
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@17136390
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@17136390
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@64c95480
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@69499c6f
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@3451fc88
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1e0294a7
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3041beb3
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@15cee630
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2e40fdbd
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@246de37e
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@19647566
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@31dbf5bb
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74e2cfc5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4a5d5b38)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7a47f0be) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d8087da)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4f7ef948) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6fdaef04)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2a5d2041) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3cacc87)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3bc6c10f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3dcbbbc)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4040ccae) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@15bb8ed5)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@18f8ebd4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7e1fb22c)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@38fc34fd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7178d811)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2e013ba1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2d8c729f)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2ba318c2
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@64c95480`
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 05:09:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 05:09:34 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@67c2b55d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5db04bd2]
2024-07-23 05:09:34 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-23 05:09:34 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@67c2b55d] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7b9f7087]
2024-07-23 05:09:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678974478 | took 1ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 05:09:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678974480 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 05:09:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678974491 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 05:09:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678974501 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 05:09:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678974509 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 05:09:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678974510 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 05:09:34 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7b9f7087] for TypeConfiguration
2024-07-23 05:09:34 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 05:09:35 [main] [transactionId=] [threadId=] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-23 05:09:35 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1da77a43, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@63604641, org.springframework.security.web.context.SecurityContextHolderFilter@36573ec5, org.springframework.security.web.header.HeaderWriterFilter@6ba3eee9, org.springframework.web.filter.CorsFilter@1313dea8, com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter@74bca236, org.springframework.security.web.authentication.logout.LogoutFilter@34989ceb, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@293ccbdd, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@64a009e7, com.soongsil.CoffeeChat.config.jwt.JWTFilter@526fbb80, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@3b42d7df, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@33dcbdc2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1ef6977b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@674cd2da, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3e37c38f, org.springframework.security.web.session.SessionManagementFilter@3c634a04, org.springframework.security.web.access.ExceptionTranslationFilter@214738c1, org.springframework.security.web.access.intercept.AuthorizationFilter@2cbb9702]
2024-07-23 05:09:35 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Ant [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 05:09:35 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Ant [pattern='/v3/api-docs/**']
2024-07-23 05:09:35 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 05:09:35 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-ui/**']
2024-07-23 05:09:35 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 05:09:35 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-resources/**']
2024-07-23 05:09:36 [main] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - Started ConcurrencyTest in 3.285 seconds (process running for 3.86)
2024-07-23 05:09:36 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        m1_0.mentor_id,
        m1_0.birth,
        m1_0.field,
        m1_0.part,
        m1_0.phone_num,
        m1_0.picture 
    from
        Mentor m1_0 
    where
        m1_0.mentor_id=?
2024-07-23 05:09:36 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678976490 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture from Mentor m1_0 where m1_0.mentor_id=?
select m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture from Mentor m1_0 where m1_0.mentor_id=1;
2024-07-23 05:09:36 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678976497 | took 0ms | commit | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 05:09:36 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        m1_0.mentee_id,
        m1_0.birth,
        m1_0.grade,
        m1_0.memo,
        m1_0.nickname,
        m1_0.part,
        m1_0.phone_num,
        m1_0.picture 
    from
        Mentee m1_0 
    where
        m1_0.mentee_id=?
2024-07-23 05:09:36 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678976499 | took 0ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select m1_0.mentee_id,m1_0.birth,m1_0.grade,m1_0.memo,m1_0.nickname,m1_0.part,m1_0.phone_num,m1_0.picture from Mentee m1_0 where m1_0.mentee_id=?
select m1_0.mentee_id,m1_0.birth,m1_0.grade,m1_0.memo,m1_0.nickname,m1_0.part,m1_0.phone_num,m1_0.picture from Mentee m1_0 where m1_0.mentee_id=1;
2024-07-23 05:09:36 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678976500 | took 0ms | commit | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 05:09:36 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    where
        pd1_0.possible_date_id=?
2024-07-23 05:09:36 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678976503 | took 0ms | statement | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=2002;
2024-07-23 05:09:36 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    update
        PossibleDate 
    set
        date=?,
        endTime=?,
        isActive=?,
        mentor_id=?,
        startTime=? 
    where
        possible_date_id=?
2024-07-23 05:09:36 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678976516 | took 1ms | statement | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
update PossibleDate set date=?,endTime=?,isActive=?,mentor_id=?,startTime=? where possible_date_id=?
update PossibleDate set date='2024-06-25T00:00:00.000+0900',endTime='1970-01-01T11:00:00.000+0900',isActive=true,mentor_id=1,startTime='1970-01-01T10:00:00.000+0900' where possible_date_id=2002;
2024-07-23 05:09:36 [main] [transactionId=] [threadId=] INFO  p6spy - #1721678976517 | took 0ms | commit | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 05:09:36 [Thread-2] [transactionId=1] [threadId=140] INFO  c.s.C.service.ApplicationService - aaa트랜잭션 시작
2024-07-23 05:09:36 [Thread-1] [transactionId=2] [threadId=139] INFO  c.s.C.service.ApplicationService - aaa트랜잭션 시작
2024-07-23 05:09:36 [Thread-2] [transactionId=1] [threadId=140] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    where
        pd1_0.possible_date_id=?
2024-07-23 05:09:36 [Thread-1] [transactionId=2] [threadId=139] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    where
        pd1_0.possible_date_id=?
2024-07-23 05:09:36 [Thread-2] [transactionId=1] [threadId=140] INFO  p6spy - #1721678976519 | took 0ms | statement | connection 6| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=2002;
2024-07-23 05:09:36 [Thread-1] [transactionId=2] [threadId=139] INFO  p6spy - #1721678976520 | took 0ms | statement | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=2002;
2024-07-23 05:09:36 [Thread-2] [transactionId=1] [threadId=140] DEBUG org.hibernate.SQL - 
    insert 
    into
        Application
        (accept, date, endTime, mentee_id, mentor_id, startTime) 
    values
        (?, ?, ?, ?, ?, ?)
2024-07-23 05:09:36 [Thread-1] [transactionId=2] [threadId=139] DEBUG org.hibernate.SQL - 
    insert 
    into
        Application
        (accept, date, endTime, mentee_id, mentor_id, startTime) 
    values
        (?, ?, ?, ?, ?, ?)
2024-07-23 05:09:36 [Thread-2] [transactionId=1] [threadId=140] INFO  p6spy - #1721678976523 | took 0ms | statement | connection 6| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
insert into Application (accept,date,endTime,mentee_id,mentor_id,startTime) values (?,?,?,?,?,?)
insert into Application (accept,date,endTime,mentee_id,mentor_id,startTime) values ('UNMATCHED','2024-06-25T00:00:00.000+0900','1970-01-01T11:00:00.000+0900',1,1,'1970-01-01T10:00:00.000+0900');
2024-07-23 05:09:36 [Thread-1] [transactionId=2] [threadId=139] INFO  p6spy - #1721678976523 | took 0ms | statement | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
insert into Application (accept,date,endTime,mentee_id,mentor_id,startTime) values (?,?,?,?,?,?)
insert into Application (accept,date,endTime,mentee_id,mentor_id,startTime) values ('UNMATCHED','2024-06-25T00:00:00.000+0900','1970-01-01T11:00:00.000+0900',1,1,'1970-01-01T10:00:00.000+0900');
2024-07-23 05:09:36 [Thread-1] [transactionId=2] [threadId=139] INFO  c.s.C.service.ApplicationService - aaaApplication 생성: com.soongsil.CoffeeChat.entity.Application@7f941ded
2024-07-23 05:09:36 [Thread-2] [transactionId=1] [threadId=140] INFO  c.s.C.service.ApplicationService - aaaApplication 생성: com.soongsil.CoffeeChat.entity.Application@1340867a
2024-07-23 05:09:36 [Thread-1] [transactionId=2] [threadId=139] INFO  c.s.C.service.ApplicationService - aaa트랜잭션 종료
2024-07-23 05:09:36 [Thread-2] [transactionId=1] [threadId=140] INFO  c.s.C.service.ApplicationService - aaa트랜잭션 종료
2024-07-23 05:09:36 [Thread-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    update
        PossibleDate 
    set
        date=?,
        endTime=?,
        isActive=?,
        mentor_id=?,
        startTime=? 
    where
        possible_date_id=?
2024-07-23 05:09:36 [Thread-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    update
        PossibleDate 
    set
        date=?,
        endTime=?,
        isActive=?,
        mentor_id=?,
        startTime=? 
    where
        possible_date_id=?
2024-07-23 05:09:36 [Thread-1] [transactionId=] [threadId=] INFO  p6spy - #1721678976528 | took 0ms | statement | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
update PossibleDate set date=?,endTime=?,isActive=?,mentor_id=?,startTime=? where possible_date_id=?
update PossibleDate set date='2024-06-25T00:00:00.000+0900',endTime='1970-01-01T11:00:00.000+0900',isActive=false,mentor_id=1,startTime='1970-01-01T10:00:00.000+0900' where possible_date_id=2002;
2024-07-23 05:09:36 [Thread-1] [transactionId=] [threadId=] INFO  p6spy - #1721678976529 | took 0ms | commit | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 05:09:36 [Thread-2] [transactionId=] [threadId=] INFO  p6spy - #1721678976529 | took 1ms | statement | connection 6| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
update PossibleDate set date=?,endTime=?,isActive=?,mentor_id=?,startTime=? where possible_date_id=?
update PossibleDate set date='2024-06-25T00:00:00.000+0900',endTime='1970-01-01T11:00:00.000+0900',isActive=false,mentor_id=1,startTime='1970-01-01T10:00:00.000+0900' where possible_date_id=2002;
2024-07-23 05:09:36 [Thread-2] [transactionId=] [threadId=] INFO  p6spy - #1721678976530 | took 0ms | commit | connection 6| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 05:09:36 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 05:09:36 [SpringApplicationShutdownHook] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@7b9f7087] for TypeConfiguration
2024-07-23 05:09:36 [SpringApplicationShutdownHook] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@69852d58] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7b9f7087]
2024-07-23 05:09:36 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-23 05:09:36 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-23 16:26:10 [main] [transactionId=] [threadId=] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest]: ConcurrencyTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-07-23 16:26:10 [main] [transactionId=] [threadId=] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.soongsil.CoffeeChat.CoffeeChatApplication for test class com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest
2024-07-23 16:26:10 [main] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - Starting ConcurrencyTest using Java 17.0.11 with PID 10188 (started by kimkyohwee in /Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server)
2024-07-23 16:26:10 [main] [transactionId=] [threadId=] DEBUG c.s.C.Concurrency.ConcurrencyTest - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-07-23 16:26:10 [main] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - No active profile set, falling back to 1 default profile: "default"
2024-07-23 16:26:10 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 16:26:10 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-23 16:26:10 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 73 ms. Found 6 JPA repository interfaces.
2024-07-23 16:26:10 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 16:26:10 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-23 16:26:10 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:26:10 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:26:10 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:26:10 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:26:10 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:26:10 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:26:10 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@26865b57
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@26865b57
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@26865b57
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@46894dc5
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@46894dc5
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@596afb2f
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@596afb2f
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@79ba0285
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@79ba0285
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6df2a206
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6df2a206
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6df2a206
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@61993d18
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@61993d18
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@61993d18
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3e39f08c
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3e39f08c
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@16e07bae
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@598778cc
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@598778cc
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3386ed8
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@727453a3
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@67dc6b48
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@67dc6b48
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@67dc6b48
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@57f2e67
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@57f2e67
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@57f2e67
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4571cebe
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4571cebe
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4571cebe
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@154864f8
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@154864f8
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@154864f8
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@11cadb32
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@11cadb32
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@11cadb32
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6d3ad37a
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6d3ad37a
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@26f5e45d
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@26f5e45d
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@704c3bdf
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@704c3bdf
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@704c3bdf
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@37986daf
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@c82d925
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@c82d925
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@55c03e4
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@14df5253
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@14df5253
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@14df5253
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@605eb072
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@7a0f06ad
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1fa9692b
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@710afd47
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@710afd47
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@64420e34
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@64420e34
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@667a467f
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@324e8baa
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@1488a861
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@604f376a
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5432dca2
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@12670e55
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@43fd77d8
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@43fd77d8
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5a90fcaa
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5a90fcaa
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1805ec96
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1805ec96
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@32ba5c65
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@32ba5c65
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1ad1be5d
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1ad1be5d
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@47797401
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@702f4124
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@10166230
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@10166230
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7221539
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@b77b0a0
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@15be68b
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@22ff1372
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@22ff1372
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@356341c9
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3a70575
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@5d96d434
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5d96d434
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@7283877
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7283877
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@286a4c52
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@286a4c52
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@286a4c52
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@13dd7887
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@13dd7887
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@13dd7887
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@780129bc
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3e2c4d4b
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@44de8e00
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@44de8e00
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3cbfdf5c
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3cbfdf5c
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3cbfdf5c
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d825dbe
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@11180750
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@210635fd
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@210635fd
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@63814bbe
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@63814bbe
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@63814bbe
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@3cb195dd
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3cb195dd
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6dc2279c
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6dc2279c
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7d7b4e04
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7d7b4e04
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@144e36ae
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@144e36ae
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@24615687
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@24615687
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@58636b50
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7f4f1536
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@3041beb3
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3041beb3
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@376498da
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@39a8e2fa
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2f9addd4
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1c43df76
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@ff2266c
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@71b3ba5a
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@83ebdc5
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@a047bdb
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@14dbfdb1
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@46fa2a7e
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7178d811) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2e013ba1)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d8c729f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@740ee00f)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@430106cf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@647af13d)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aac6fa7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@29a1ec65)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@625db0e0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@511d568f)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1805ca5c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3e61cffd)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3134b261) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@aa633e6)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3cc74fc4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@c697186)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@185a7dd0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2358443e)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2a504ea7
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@376498da`
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 16:26:11 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@391b01c5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6e78177b]
2024-07-23 16:26:12 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-23 16:26:12 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@391b01c5] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@25fc2b8f]
2024-07-23 16:26:12 [main] [transactionId=] [threadId=] INFO  p6spy - #1721719572099 | took 1ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 16:26:12 [main] [transactionId=] [threadId=] INFO  p6spy - #1721719572101 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 16:26:12 [main] [transactionId=] [threadId=] INFO  p6spy - #1721719572115 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 16:26:12 [main] [transactionId=] [threadId=] INFO  p6spy - #1721719572124 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 16:26:12 [main] [transactionId=] [threadId=] INFO  p6spy - #1721719572132 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 16:26:12 [main] [transactionId=] [threadId=] INFO  p6spy - #1721719572134 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 16:26:12 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@25fc2b8f] for TypeConfiguration
2024-07-23 16:26:12 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 16:26:12 [main] [transactionId=] [threadId=] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-23 16:26:13 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6ca1c156, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@521f2a23, org.springframework.security.web.context.SecurityContextHolderFilter@216fe151, org.springframework.security.web.header.HeaderWriterFilter@43c76550, org.springframework.web.filter.CorsFilter@228ed68c, com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter@30e3544d, org.springframework.security.web.authentication.logout.LogoutFilter@7e130e34, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@5b1b5daf, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@379cfc77, com.soongsil.CoffeeChat.config.jwt.JWTFilter@522a9876, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@39ae0bff, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@794ffe22, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6ea48ca1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@ceb4f91, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2da16d31, org.springframework.security.web.session.SessionManagementFilter@7451338e, org.springframework.security.web.access.ExceptionTranslationFilter@54ff871a, org.springframework.security.web.access.intercept.AuthorizationFilter@21e5feb]
2024-07-23 16:26:13 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Ant [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 16:26:13 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Ant [pattern='/v3/api-docs/**']
2024-07-23 16:26:13 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 16:26:13 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-ui/**']
2024-07-23 16:26:13 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 16:26:13 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-resources/**']
2024-07-23 16:26:13 [main] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - Started ConcurrencyTest in 3.358 seconds (process running for 3.995)
2024-07-23 16:26:13 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        m1_0.mentor_id,
        m1_0.birth,
        m1_0.field,
        m1_0.part,
        m1_0.phone_num,
        m1_0.picture 
    from
        Mentor m1_0 
    where
        m1_0.mentor_id=?
2024-07-23 16:26:13 [main] [transactionId=] [threadId=] INFO  p6spy - #1721719573962 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture from Mentor m1_0 where m1_0.mentor_id=?
select m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture from Mentor m1_0 where m1_0.mentor_id=1;
2024-07-23 16:26:13 [main] [transactionId=] [threadId=] INFO  p6spy - #1721719573969 | took 0ms | commit | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 16:26:13 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        m1_0.mentee_id,
        m1_0.birth,
        m1_0.grade,
        m1_0.memo,
        m1_0.nickname,
        m1_0.part,
        m1_0.phone_num,
        m1_0.picture 
    from
        Mentee m1_0 
    where
        m1_0.mentee_id=?
2024-07-23 16:26:13 [main] [transactionId=] [threadId=] INFO  p6spy - #1721719573971 | took 0ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select m1_0.mentee_id,m1_0.birth,m1_0.grade,m1_0.memo,m1_0.nickname,m1_0.part,m1_0.phone_num,m1_0.picture from Mentee m1_0 where m1_0.mentee_id=?
select m1_0.mentee_id,m1_0.birth,m1_0.grade,m1_0.memo,m1_0.nickname,m1_0.part,m1_0.phone_num,m1_0.picture from Mentee m1_0 where m1_0.mentee_id=1;
2024-07-23 16:26:13 [main] [transactionId=] [threadId=] INFO  p6spy - #1721719573971 | took 0ms | commit | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 16:26:13 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    where
        pd1_0.possible_date_id=?
2024-07-23 16:26:13 [main] [transactionId=] [threadId=] INFO  p6spy - #1721719573974 | took 0ms | statement | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=2002;
2024-07-23 16:26:13 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    update
        PossibleDate 
    set
        date=?,
        endTime=?,
        isActive=?,
        mentor_id=?,
        startTime=? 
    where
        possible_date_id=?
2024-07-23 16:26:13 [main] [transactionId=] [threadId=] INFO  p6spy - #1721719573987 | took 2ms | statement | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
update PossibleDate set date=?,endTime=?,isActive=?,mentor_id=?,startTime=? where possible_date_id=?
update PossibleDate set date='2024-06-25T00:00:00.000+0900',endTime='1970-01-01T11:00:00.000+0900',isActive=true,mentor_id=1,startTime='1970-01-01T10:00:00.000+0900' where possible_date_id=2002;
2024-07-23 16:26:13 [main] [transactionId=] [threadId=] INFO  p6spy - #1721719573989 | took 1ms | commit | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 16:26:13 [Thread-1] [transactionId=2] [threadId=139] INFO  c.s.C.service.ApplicationService - aaa트랜잭션 시작
2024-07-23 16:26:13 [Thread-2] [transactionId=1] [threadId=140] INFO  c.s.C.service.ApplicationService - aaa트랜잭션 시작
2024-07-23 16:26:13 [Thread-1] [transactionId=2] [threadId=139] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    where
        pd1_0.possible_date_id=?
2024-07-23 16:26:13 [Thread-2] [transactionId=1] [threadId=140] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    where
        pd1_0.possible_date_id=?
2024-07-23 16:26:13 [Thread-1] [transactionId=2] [threadId=139] INFO  p6spy - #1721719573991 | took 0ms | statement | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=2002;
2024-07-23 16:26:13 [Thread-2] [transactionId=1] [threadId=140] INFO  p6spy - #1721719573991 | took 0ms | statement | connection 6| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=2002;
2024-07-23 16:26:13 [Thread-1] [transactionId=2] [threadId=139] DEBUG org.hibernate.SQL - 
    insert 
    into
        Application
        (accept, date, endTime, mentee_id, mentor_id, startTime) 
    values
        (?, ?, ?, ?, ?, ?)
2024-07-23 16:26:13 [Thread-2] [transactionId=1] [threadId=140] DEBUG org.hibernate.SQL - 
    insert 
    into
        Application
        (accept, date, endTime, mentee_id, mentor_id, startTime) 
    values
        (?, ?, ?, ?, ?, ?)
2024-07-23 16:26:13 [Thread-2] [transactionId=1] [threadId=140] INFO  p6spy - #1721719573995 | took 0ms | statement | connection 6| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
insert into Application (accept,date,endTime,mentee_id,mentor_id,startTime) values (?,?,?,?,?,?)
insert into Application (accept,date,endTime,mentee_id,mentor_id,startTime) values ('UNMATCHED','2024-06-25T00:00:00.000+0900','1970-01-01T11:00:00.000+0900',1,1,'1970-01-01T10:00:00.000+0900');
2024-07-23 16:26:13 [Thread-1] [transactionId=2] [threadId=139] INFO  p6spy - #1721719573995 | took 0ms | statement | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
insert into Application (accept,date,endTime,mentee_id,mentor_id,startTime) values (?,?,?,?,?,?)
insert into Application (accept,date,endTime,mentee_id,mentor_id,startTime) values ('UNMATCHED','2024-06-25T00:00:00.000+0900','1970-01-01T11:00:00.000+0900',1,1,'1970-01-01T10:00:00.000+0900');
2024-07-23 16:26:13 [Thread-1] [transactionId=2] [threadId=139] INFO  c.s.C.service.ApplicationService - aaaApplication 생성: com.soongsil.CoffeeChat.entity.Application@45958c71
2024-07-23 16:26:13 [Thread-1] [transactionId=2] [threadId=139] INFO  c.s.C.service.ApplicationService - aaa트랜잭션 종료
2024-07-23 16:26:13 [Thread-2] [transactionId=1] [threadId=140] INFO  c.s.C.service.ApplicationService - aaaApplication 생성: com.soongsil.CoffeeChat.entity.Application@987f560
2024-07-23 16:26:13 [Thread-2] [transactionId=1] [threadId=140] INFO  c.s.C.service.ApplicationService - aaa트랜잭션 종료
2024-07-23 16:26:13 [Thread-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    update
        PossibleDate 
    set
        date=?,
        endTime=?,
        isActive=?,
        mentor_id=?,
        startTime=? 
    where
        possible_date_id=?
2024-07-23 16:26:13 [Thread-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    update
        PossibleDate 
    set
        date=?,
        endTime=?,
        isActive=?,
        mentor_id=?,
        startTime=? 
    where
        possible_date_id=?
2024-07-23 16:26:13 [Thread-1] [transactionId=] [threadId=] INFO  p6spy - #1721719573999 | took 0ms | statement | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
update PossibleDate set date=?,endTime=?,isActive=?,mentor_id=?,startTime=? where possible_date_id=?
update PossibleDate set date='2024-06-25T00:00:00.000+0900',endTime='1970-01-01T11:00:00.000+0900',isActive=false,mentor_id=1,startTime='1970-01-01T10:00:00.000+0900' where possible_date_id=2002;
2024-07-23 16:26:13 [Thread-1] [transactionId=] [threadId=] INFO  p6spy - #1721719573999 | took 0ms | commit | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 16:26:13 [Thread-2] [transactionId=] [threadId=] INFO  p6spy - #1721719573999 | took 0ms | statement | connection 6| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
update PossibleDate set date=?,endTime=?,isActive=?,mentor_id=?,startTime=? where possible_date_id=?
update PossibleDate set date='2024-06-25T00:00:00.000+0900',endTime='1970-01-01T11:00:00.000+0900',isActive=false,mentor_id=1,startTime='1970-01-01T10:00:00.000+0900' where possible_date_id=2002;
2024-07-23 16:26:14 [Thread-2] [transactionId=] [threadId=] INFO  p6spy - #1721719574000 | took 0ms | commit | connection 6| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 16:26:14 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 16:26:14 [SpringApplicationShutdownHook] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@25fc2b8f] for TypeConfiguration
2024-07-23 16:26:14 [SpringApplicationShutdownHook] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5e799b6e] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@25fc2b8f]
2024-07-23 16:26:14 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-23 16:26:14 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-23 16:27:17 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Starting CoffeeChatApplication using Java 17.0.11 with PID 10194 (/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes started by kimkyohwee in /Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server)
2024-07-23 16:27:17 [main] [transactionId=] [threadId=] DEBUG c.s.CoffeeChat.CoffeeChatApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-07-23 16:27:17 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 63 ms. Found 6 JPA repository interfaces.
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 669 ms
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@238ad211
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@238ad211
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@238ad211
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1c011855
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1c011855
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6591f8ea
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6591f8ea
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5273143e
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5273143e
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@279c4e3b
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@279c4e3b
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@279c4e3b
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@334b392d
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@334b392d
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@334b392d
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@56478522
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@56478522
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@3caf5c96
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@5b3755f4
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5b3755f4
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@37d3aa8c
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5dd747c1
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1bdafb01
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1bdafb01
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1bdafb01
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@7aa3857b
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@7aa3857b
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7aa3857b
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@500ec769
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@500ec769
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@500ec769
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@37806be6
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@37806be6
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@37806be6
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7bce9ce4
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7bce9ce4
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7bce9ce4
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1d2046bb
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1d2046bb
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@3b33fff9
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@3b33fff9
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@fd87c22
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@fd87c22
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@fd87c22
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@fee881
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1ff463bb
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1ff463bb
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3b9c9b8b
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7769d9b6
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7769d9b6
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7769d9b6
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@248d3a
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3c71cf3e
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@636e4bf8
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5af38a4a
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5af38a4a
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7e1a9173
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7e1a9173
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4ca0b9b1
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5d800a56
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@1be77a76
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@315cf170
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7878bbdb
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@25f7cc38
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@563263a
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@563263a
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@53e28097
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@53e28097
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6e794f53
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6e794f53
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@75f4d8a8
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@75f4d8a8
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@69ba72da
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@69ba72da
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2e1ba142
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@abc7005
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@595ec862
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@595ec862
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@63c84d31
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@102af1bb
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@797f97e3
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@56cd5d76
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@56cd5d76
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@77cd235b
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@302da330
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@3568ea59
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3568ea59
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@9f2376f
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@9f2376f
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@173b1af1
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@173b1af1
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@173b1af1
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4a520f05
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4a520f05
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4a520f05
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@389a1e34
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@204b0f07
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@6f68756d
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6f68756d
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@359865a2
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@359865a2
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@359865a2
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5d9bb69b
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@25d0b918
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2d38db6f
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2d38db6f
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@37cf91d8
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@37cf91d8
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@571d0925
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@571d0925
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@2df71be0
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2df71be0
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@5158a9f7
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7c8f047a
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4387d2f4
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1dbff71c
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@93ce24d
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@d949bc4
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7079f8f0
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@121cf6f4
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7cdc4070
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7614378d
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6a6a2fdd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@552ffa44)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6e66b498) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@54d35ed5)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6f7c9755) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45abbd24)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1e32037d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5059d398)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5b1420f9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@434ee422)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4de93edd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@53b2e1eb)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@29db008c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1d008e61)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@191b44ca) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5de243bb)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2c4cf7eb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@35260785)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@726ef6aa
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@5158a9f7`
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 16:27:18 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@67d180e4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@54e18a46]
2024-07-23 16:27:19 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-23 16:27:19 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@67d180e4] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2e9f5499]
2024-07-23 16:27:19 [main] [transactionId=] [threadId=] INFO  p6spy - #1721719639191 | took 1ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 16:27:19 [main] [transactionId=] [threadId=] INFO  p6spy - #1721719639192 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 16:27:19 [main] [transactionId=] [threadId=] INFO  p6spy - #1721719639202 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 16:27:19 [main] [transactionId=] [threadId=] INFO  p6spy - #1721719639210 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 16:27:19 [main] [transactionId=] [threadId=] INFO  p6spy - #1721719639217 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 16:27:19 [main] [transactionId=] [threadId=] INFO  p6spy - #1721719639218 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 16:27:19 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2e9f5499] for TypeConfiguration
2024-07-23 16:27:19 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 16:27:19 [main] [transactionId=] [threadId=] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-23 16:27:20 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@21dc1d99, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7bfa2d74, org.springframework.security.web.context.SecurityContextHolderFilter@9c7699e, org.springframework.security.web.header.HeaderWriterFilter@4d542218, org.springframework.web.filter.CorsFilter@467924d8, com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter@20bc417f, org.springframework.security.web.authentication.logout.LogoutFilter@21f3a99c, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@2220780d, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@418f5f63, com.soongsil.CoffeeChat.config.jwt.JWTFilter@614da024, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@4d7909bd, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@4b76a0f4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5bbda8aa, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@36d02719, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@442612a6, org.springframework.security.web.session.SessionManagementFilter@463a0302, org.springframework.security.web.access.ExceptionTranslationFilter@1e1c1634, org.springframework.security.web.access.intercept.AuthorizationFilter@763960eb]
2024-07-23 16:27:20 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 16:27:20 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/v3/api-docs/**']
2024-07-23 16:27:20 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 16:27:20 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-ui/**']
2024-07-23 16:27:20 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 16:27:20 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-resources/**']
2024-07-23 16:27:20 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-07-23 16:27:20 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2024-07-23 16:27:20 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Started CoffeeChatApplication in 2.754 seconds (process running for 3.122)
2024-07-23 16:27:30 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-23 16:27:30 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-23 16:27:30 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-07-23 16:27:35 [http-nio-8080-exec-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.user_mentee,
        u1_0.user_mentor,
        u1_0.name,
        u1_0.phone,
        u1_0.picture,
        u1_0.role,
        u1_0.username 
    from
        User u1_0 
    where
        u1_0.username=?
2024-07-23 16:27:35 [http-nio-8080-exec-2] [transactionId=] [threadId=] INFO  p6spy - #1721719655161 | took 1ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username=?
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username='google 114962161569005947668';
2024-07-23 16:27:35 [http-nio-8080-exec-2] [transactionId=] [threadId=] INFO  p6spy - #1721719655174 | took 0ms | commit | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 16:27:35 [http-nio-8080-exec-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    insert 
    into
        Refresh
        (expiration, refresh, username) 
    values
        (?, ?, ?)
2024-07-23 16:27:35 [http-nio-8080-exec-2] [transactionId=] [threadId=] INFO  p6spy - #1721719655202 | took 0ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
insert into Refresh (expiration,refresh,username) values (?,?,?)
insert into Refresh (expiration,refresh,username) values ('Wed Jul 24 16:27:35 KST 2024','eyJhbGciOiJIUzI1NiJ9.eyJjYXRlZ29yeSI6InJlZnJlc2giLCJ1c2VybmFtZSI6Imdvb2dsZSAxMTQ5NjIxNjE1NjkwMDU5NDc2NjgiLCJyb2xlIjoiUk9MRV9NRU5URUUiLCJpYXQiOjE3MjE3MTk2NTUsImV4cCI6MTcyMTgwNjA1NX0.S_R2p25elZSfDa9RdtYVdPuqHMMb5kTN7kDqq31IHZg','google 114962161569005947668');
2024-07-23 16:27:35 [http-nio-8080-exec-2] [transactionId=] [threadId=] INFO  p6spy - #1721719655208 | took 1ms | commit | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 16:27:41 [http-nio-8080-exec-7] [transactionId=] [threadId=] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 157 ms
2024-07-23 16:27:48 [http-nio-8080-exec-8] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        r1_0.id 
    from
        Refresh r1_0 
    where
        r1_0.refresh=? 
    limit
        ?
2024-07-23 16:27:48 [http-nio-8080-exec-8] [transactionId=] [threadId=] INFO  p6spy - #1721719668281 | took 1ms | statement | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select r1_0.id from Refresh r1_0 where r1_0.refresh=? limit ?
select r1_0.id from Refresh r1_0 where r1_0.refresh='eyJhbGciOiJIUzI1NiJ9.eyJjYXRlZ29yeSI6InJlZnJlc2giLCJ1c2VybmFtZSI6Imdvb2dsZSAxMTQ5NjIxNjE1NjkwMDU5NDc2NjgiLCJyb2xlIjoiUk9MRV9NRU5URUUiLCJpYXQiOjE3MjE3MTk2NTUsImV4cCI6MTcyMTgwNjA1NX0.S_R2p25elZSfDa9RdtYVdPuqHMMb5kTN7kDqq31IHZg' limit 1;
2024-07-23 16:27:48 [http-nio-8080-exec-8] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.expiration,
        r1_0.refresh,
        r1_0.username 
    from
        Refresh r1_0 
    where
        r1_0.refresh=?
2024-07-23 16:27:48 [http-nio-8080-exec-8] [transactionId=] [threadId=] INFO  p6spy - #1721719668283 | took 0ms | statement | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select r1_0.id,r1_0.expiration,r1_0.refresh,r1_0.username from Refresh r1_0 where r1_0.refresh=?
select r1_0.id,r1_0.expiration,r1_0.refresh,r1_0.username from Refresh r1_0 where r1_0.refresh='eyJhbGciOiJIUzI1NiJ9.eyJjYXRlZ29yeSI6InJlZnJlc2giLCJ1c2VybmFtZSI6Imdvb2dsZSAxMTQ5NjIxNjE1NjkwMDU5NDc2NjgiLCJyb2xlIjoiUk9MRV9NRU5URUUiLCJpYXQiOjE3MjE3MTk2NTUsImV4cCI6MTcyMTgwNjA1NX0.S_R2p25elZSfDa9RdtYVdPuqHMMb5kTN7kDqq31IHZg';
2024-07-23 16:27:48 [http-nio-8080-exec-8] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    delete 
    from
        Refresh 
    where
        id=?
2024-07-23 16:27:48 [http-nio-8080-exec-8] [transactionId=] [threadId=] INFO  p6spy - #1721719668287 | took 0ms | statement | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
delete from Refresh where id=?
delete from Refresh where id=171;
2024-07-23 16:27:48 [http-nio-8080-exec-8] [transactionId=] [threadId=] INFO  p6spy - #1721719668289 | took 1ms | commit | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 16:27:48 [http-nio-8080-exec-8] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    insert 
    into
        Refresh
        (expiration, refresh, username) 
    values
        (?, ?, ?)
2024-07-23 16:27:48 [http-nio-8080-exec-8] [transactionId=] [threadId=] INFO  p6spy - #1721719668290 | took 0ms | statement | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
insert into Refresh (expiration,refresh,username) values (?,?,?)
insert into Refresh (expiration,refresh,username) values ('Wed Jul 24 16:27:48 KST 2024','eyJhbGciOiJIUzI1NiJ9.eyJjYXRlZ29yeSI6InJlZnJlc2giLCJ1c2VybmFtZSI6Imdvb2dsZSAxMTQ5NjIxNjE1NjkwMDU5NDc2NjgiLCJyb2xlIjoiUk9MRV9NRU5URUUiLCJpYXQiOjE3MjE3MTk2NjgsImV4cCI6MTcyMTgwNjA2OH0.CHD1ANh9ipqYxfb58VngM6qqgHBwnXz7qD397PxQCBU','google 114962161569005947668');
2024-07-23 16:27:48 [http-nio-8080-exec-8] [transactionId=] [threadId=] INFO  p6spy - #1721719668291 | took 0ms | commit | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 16:28:10 [http-nio-8080-exec-9] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        pd1_0.date,
        pd1_0.startTime,
        pd1_0.endTime,
        pd1_0.possible_date_id 
    from
        User u1_0 
    join
        Mentor m1_0 
            on m1_0.mentor_id=u1_0.user_mentor 
    join
        PossibleDate pd1_0 
            on m1_0.mentor_id=pd1_0.mentor_id 
    where
        u1_0.username=? 
        and pd1_0.isActive=?
2024-07-23 16:28:10 [http-nio-8080-exec-9] [transactionId=] [threadId=] INFO  p6spy - #1721719690517 | took 1ms | statement | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.date,pd1_0.startTime,pd1_0.endTime,pd1_0.possible_date_id from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where u1_0.username=? and pd1_0.isActive=?
select pd1_0.date,pd1_0.startTime,pd1_0.endTime,pd1_0.possible_date_id from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where u1_0.username='user0' and pd1_0.isActive=true;
2024-07-23 16:29:17 [http-nio-8080-exec-5] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.user_mentee,
        m1_0.mentor_id,
        m1_0.birth,
        m1_0.field,
        m1_0.part,
        m1_0.phone_num,
        m1_0.picture,
        pd1_0.mentor_id,
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.startTime,
        u1_0.name,
        u1_0.phone,
        u1_0.picture,
        u1_0.role,
        u1_0.username 
    from
        User u1_0 
    join
        Mentor m1_0 
            on m1_0.mentor_id=u1_0.user_mentor 
    join
        PossibleDate pd1_0 
            on m1_0.mentor_id=pd1_0.mentor_id 
    where
        m1_0.mentor_id=?
2024-07-23 16:29:17 [http-nio-8080-exec-5] [transactionId=] [threadId=] INFO  p6spy - #1721719757097 | took 0ms | statement | connection 6| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select u1_0.user_id,u1_0.email,u1_0.user_mentee,m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture,pd1_0.mentor_id,pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.startTime,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=?
select u1_0.user_id,u1_0.email,u1_0.user_mentee,m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture,pd1_0.mentor_id,pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.startTime,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=1;
2024-07-23 16:29:17 [http-nio-8080-exec-5] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.user_mentee,
        u1_0.user_mentor,
        u1_0.name,
        u1_0.phone,
        u1_0.picture,
        u1_0.role,
        u1_0.username 
    from
        User u1_0 
    where
        u1_0.username=?
2024-07-23 16:29:17 [http-nio-8080-exec-5] [transactionId=] [threadId=] INFO  p6spy - #1721719757106 | took 1ms | statement | connection 6| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username=?
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username='google 114962161569005947668';
2024-07-23 16:29:17 [http-nio-8080-exec-5] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    join
        Mentor m1_0 
            on m1_0.mentor_id=pd1_0.mentor_id 
    where
        m1_0.mentor_id=? 
        and pd1_0.startTime=?
2024-07-23 16:29:17 [http-nio-8080-exec-5] [transactionId=] [threadId=] INFO  p6spy - #1721719757112 | took 1ms | statement | connection 6| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 join Mentor m1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=? and pd1_0.startTime=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 join Mentor m1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=1 and pd1_0.startTime='1970-01-01T10:00:00.000+0900';
2024-07-23 16:29:17 [http-nio-8080-exec-5] [transactionId=] [threadId=] INFO  p6spy - #1721719757113 | took 0ms | rollback | connection 6| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 16:29:17 [http-nio-8080-exec-5] [transactionId=] [threadId=] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalStateException: 이미 신청된 시간입니다.] with root cause
java.lang.IllegalStateException: 이미 신청된 시간입니다.
	at com.soongsil.CoffeeChat.service.ApplicationService.createApplication(ApplicationService.java:85)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.soongsil.CoffeeChat.service.ApplicationService$$SpringCGLIB$$0.createApplication(<generated>)
	at com.soongsil.CoffeeChat.controller.ApplicationController.createApplication(ApplicationController.java:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:261)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:189)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter.doFilterInternal(DefaultLogoutPageGeneratingFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:189)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:175)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.soongsil.CoffeeChat.config.jwt.JWTFilter.doFilterInternal(JWTFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter.doFilter(CustomLogoutFilter.java:43)
	at com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter.doFilter(CustomLogoutFilter.java:32)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-07-23 16:34:31 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 16:34:31 [SpringApplicationShutdownHook] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2e9f5499] for TypeConfiguration
2024-07-23 16:34:31 [SpringApplicationShutdownHook] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@75c7baf5] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2e9f5499]
2024-07-23 16:34:31 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-23 16:34:31 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-23 16:34:33 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Starting CoffeeChatApplication using Java 17.0.11 with PID 10309 (/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes started by kimkyohwee in /Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server)
2024-07-23 16:34:33 [main] [transactionId=] [threadId=] DEBUG c.s.CoffeeChat.CoffeeChatApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-07-23 16:34:33 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 68 ms. Found 6 JPA repository interfaces.
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 697 ms
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@631944d4
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@631944d4
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@631944d4
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3d132bb6
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3d132bb6
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@60ae7cf2
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@60ae7cf2
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@225e09f0
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@225e09f0
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@bc8d68b
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@bc8d68b
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@bc8d68b
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2fa212df
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2fa212df
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2fa212df
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@238ad211
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@238ad211
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@1c011855
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@6591f8ea
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@6591f8ea
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5273143e
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@279c4e3b
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@334b392d
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@334b392d
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@334b392d
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@59f7c106
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@59f7c106
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@59f7c106
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@136fece2
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@136fece2
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@136fece2
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@56478522
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@56478522
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@56478522
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3caf5c96
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3caf5c96
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3caf5c96
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5b3755f4
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5b3755f4
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@37d3aa8c
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@37d3aa8c
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@5dd747c1
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@5dd747c1
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5dd747c1
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1bdafb01
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@7aa3857b
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7aa3857b
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@500ec769
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@37806be6
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@37806be6
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@37806be6
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7bce9ce4
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@1d2046bb
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3b33fff9
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@fd87c22
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@fd87c22
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@fee881
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@fee881
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1ff463bb
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3b9c9b8b
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7769d9b6
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@248d3a
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3c71cf3e
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@636e4bf8
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5af38a4a
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5af38a4a
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@7e1a9173
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@7e1a9173
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4ca0b9b1
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4ca0b9b1
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5d800a56
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5d800a56
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1be77a76
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1be77a76
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@315cf170
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7878bbdb
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@25f7cc38
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@25f7cc38
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@563263a
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@53e28097
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6e794f53
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@75f4d8a8
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@75f4d8a8
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@69ba72da
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2e1ba142
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@abc7005
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@abc7005
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@595ec862
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@595ec862
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@63c84d31
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@63c84d31
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@63c84d31
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@102af1bb
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@102af1bb
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@102af1bb
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@797f97e3
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@56cd5d76
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@77cd235b
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@77cd235b
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@302da330
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@302da330
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@302da330
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3568ea59
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@9f2376f
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@173b1af1
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@173b1af1
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@4a520f05
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4a520f05
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4a520f05
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@389a1e34
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@389a1e34
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@204b0f07
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@204b0f07
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6f68756d
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6f68756d
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@359865a2
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@359865a2
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@5d9bb69b
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5d9bb69b
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@25d0b918
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@73da7f08
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@73da7f08
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@4fee14b
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@11c3d22f
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@3a54638b
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7d8f2eec
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@e886caf
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1d585fb
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1884e671
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1c7843c3
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5158a9f7
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@194e78af
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4d5ea776) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5d68be4f)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@34eb5d01) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@77b22b05)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4fef5792) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@57ed02e6)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39004e4f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5f0ca069)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6a6a2fdd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@552ffa44)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6e66b498) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@54d35ed5)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6f7c9755) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45abbd24)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1e32037d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5059d398)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5b1420f9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@434ee422)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@45b08b17
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4fee14b`
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 16:34:34 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7131d668] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@46a97805]
2024-07-23 16:34:35 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-23 16:34:35 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7131d668] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6e161cea]
2024-07-23 16:34:35 [main] [transactionId=] [threadId=] INFO  p6spy - #1721720075147 | took 1ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 16:34:35 [main] [transactionId=] [threadId=] INFO  p6spy - #1721720075150 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 16:34:35 [main] [transactionId=] [threadId=] INFO  p6spy - #1721720075159 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 16:34:35 [main] [transactionId=] [threadId=] INFO  p6spy - #1721720075167 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 16:34:35 [main] [transactionId=] [threadId=] INFO  p6spy - #1721720075175 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 16:34:35 [main] [transactionId=] [threadId=] INFO  p6spy - #1721720075175 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 16:34:35 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6e161cea] for TypeConfiguration
2024-07-23 16:34:35 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 16:34:35 [main] [transactionId=] [threadId=] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-23 16:34:36 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@28023029, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@27165978, org.springframework.security.web.context.SecurityContextHolderFilter@5b1b5daf, org.springframework.security.web.header.HeaderWriterFilter@3b5fa30d, org.springframework.web.filter.CorsFilter@1cd97ebe, com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter@6431ab21, org.springframework.security.web.authentication.logout.LogoutFilter@521f2a23, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@225fc6a2, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@aecfc07, com.soongsil.CoffeeChat.config.jwt.JWTFilter@5d8b5cf6, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@79228440, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@484313a6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1e1c1634, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4ca3e806, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1fb8b89e, org.springframework.security.web.session.SessionManagementFilter@1cb83205, org.springframework.security.web.access.ExceptionTranslationFilter@78333d5a, org.springframework.security.web.access.intercept.AuthorizationFilter@418f5f63]
2024-07-23 16:34:36 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 16:34:36 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/v3/api-docs/**']
2024-07-23 16:34:36 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 16:34:36 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-ui/**']
2024-07-23 16:34:36 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 16:34:36 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-resources/**']
2024-07-23 16:34:36 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-07-23 16:34:36 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2024-07-23 16:34:36 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Started CoffeeChatApplication in 2.814 seconds (process running for 3.114)
2024-07-23 16:34:56 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-23 16:34:56 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-23 16:34:56 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-07-23 16:34:56 [http-nio-8080-exec-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        r1_0.id 
    from
        Refresh r1_0 
    where
        r1_0.refresh=? 
    limit
        ?
2024-07-23 16:34:56 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721720096335 | took 1ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select r1_0.id from Refresh r1_0 where r1_0.refresh=? limit ?
select r1_0.id from Refresh r1_0 where r1_0.refresh='eyJhbGciOiJIUzI1NiJ9.eyJjYXRlZ29yeSI6InJlZnJlc2giLCJ1c2VybmFtZSI6Imdvb2dsZSAxMTQ5NjIxNjE1NjkwMDU5NDc2NjgiLCJyb2xlIjoiUk9MRV9NRU5URUUiLCJpYXQiOjE3MjE3MTk2NjgsImV4cCI6MTcyMTgwNjA2OH0.CHD1ANh9ipqYxfb58VngM6qqgHBwnXz7qD397PxQCBU' limit 1;
2024-07-23 16:34:56 [http-nio-8080-exec-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.expiration,
        r1_0.refresh,
        r1_0.username 
    from
        Refresh r1_0 
    where
        r1_0.refresh=?
2024-07-23 16:34:56 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721720096356 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select r1_0.id,r1_0.expiration,r1_0.refresh,r1_0.username from Refresh r1_0 where r1_0.refresh=?
select r1_0.id,r1_0.expiration,r1_0.refresh,r1_0.username from Refresh r1_0 where r1_0.refresh='eyJhbGciOiJIUzI1NiJ9.eyJjYXRlZ29yeSI6InJlZnJlc2giLCJ1c2VybmFtZSI6Imdvb2dsZSAxMTQ5NjIxNjE1NjkwMDU5NDc2NjgiLCJyb2xlIjoiUk9MRV9NRU5URUUiLCJpYXQiOjE3MjE3MTk2NjgsImV4cCI6MTcyMTgwNjA2OH0.CHD1ANh9ipqYxfb58VngM6qqgHBwnXz7qD397PxQCBU';
2024-07-23 16:34:56 [http-nio-8080-exec-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    delete 
    from
        Refresh 
    where
        id=?
2024-07-23 16:34:56 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721720096366 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
delete from Refresh where id=?
delete from Refresh where id=172;
2024-07-23 16:34:56 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721720096369 | took 1ms | commit | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 16:34:56 [http-nio-8080-exec-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    insert 
    into
        Refresh
        (expiration, refresh, username) 
    values
        (?, ?, ?)
2024-07-23 16:34:56 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721720096373 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
insert into Refresh (expiration,refresh,username) values (?,?,?)
insert into Refresh (expiration,refresh,username) values ('Wed Jul 24 16:34:56 KST 2024','eyJhbGciOiJIUzI1NiJ9.eyJjYXRlZ29yeSI6InJlZnJlc2giLCJ1c2VybmFtZSI6Imdvb2dsZSAxMTQ5NjIxNjE1NjkwMDU5NDc2NjgiLCJyb2xlIjoiUk9MRV9NRU5URUUiLCJpYXQiOjE3MjE3MjAwOTYsImV4cCI6MTcyMTgwNjQ5Nn0.kEAooV0PEJaEvDTbcTnEEyKOUN4BO77xrcx3EYfSXF8','google 114962161569005947668');
2024-07-23 16:34:56 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721720096376 | took 0ms | commit | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 16:35:08 [http-nio-8080-exec-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.user_mentee,
        m1_0.mentor_id,
        m1_0.birth,
        m1_0.field,
        m1_0.part,
        m1_0.phone_num,
        m1_0.picture,
        pd1_0.mentor_id,
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.startTime,
        u1_0.name,
        u1_0.phone,
        u1_0.picture,
        u1_0.role,
        u1_0.username 
    from
        User u1_0 
    join
        Mentor m1_0 
            on m1_0.mentor_id=u1_0.user_mentor 
    join
        PossibleDate pd1_0 
            on m1_0.mentor_id=pd1_0.mentor_id 
    where
        m1_0.mentor_id=?
2024-07-23 16:35:08 [http-nio-8080-exec-2] [transactionId=] [threadId=] INFO  p6spy - #1721720108540 | took 1ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select u1_0.user_id,u1_0.email,u1_0.user_mentee,m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture,pd1_0.mentor_id,pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.startTime,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=?
select u1_0.user_id,u1_0.email,u1_0.user_mentee,m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture,pd1_0.mentor_id,pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.startTime,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=1;
2024-07-23 16:35:08 [http-nio-8080-exec-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.user_mentee,
        u1_0.user_mentor,
        u1_0.name,
        u1_0.phone,
        u1_0.picture,
        u1_0.role,
        u1_0.username 
    from
        User u1_0 
    where
        u1_0.username=?
2024-07-23 16:35:08 [http-nio-8080-exec-2] [transactionId=] [threadId=] INFO  p6spy - #1721720108552 | took 1ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username=?
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username='google 114962161569005947668';
2024-07-23 16:35:08 [http-nio-8080-exec-2] [transactionId=] [threadId=] INFO  p6spy - #1721720108563 | took 0ms | rollback | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 16:35:08 [http-nio-8080-exec-2] [transactionId=] [threadId=] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.hibernate.QueryParameterException: No argument for named parameter ':date'] with root cause
org.hibernate.QueryParameterException: No argument for named parameter ':date'
	at org.hibernate.query.internal.QueryParameterBindingsImpl.lambda$validate$0(QueryParameterBindingsImpl.java:142)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1092)
	at org.hibernate.query.internal.ParameterMetadataImpl.visitParameters(ParameterMetadataImpl.java:191)
	at org.hibernate.query.spi.ParameterMetadataImplementor.visitRegistrations(ParameterMetadataImplementor.java:29)
	at org.hibernate.query.internal.QueryParameterBindingsImpl.validate(QueryParameterBindingsImpl.java:138)
	at org.hibernate.query.spi.AbstractSelectionQuery.beforeQuery(AbstractSelectionQuery.java:455)
	at org.hibernate.query.spi.AbstractSelectionQuery.beforeQueryHandlingFetchProfiles(AbstractSelectionQuery.java:446)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:424)
	at org.hibernate.query.Query.getResultList(Query.java:120)
	at com.soongsil.CoffeeChat.service.ApplicationService.createApplication(ApplicationService.java:81)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.soongsil.CoffeeChat.service.ApplicationService$$SpringCGLIB$$0.createApplication(<generated>)
	at com.soongsil.CoffeeChat.controller.ApplicationController.createApplication(ApplicationController.java:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:261)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:189)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter.doFilterInternal(DefaultLogoutPageGeneratingFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:189)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:175)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.soongsil.CoffeeChat.config.jwt.JWTFilter.doFilterInternal(JWTFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter.doFilter(CustomLogoutFilter.java:43)
	at com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter.doFilter(CustomLogoutFilter.java:32)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-07-23 16:35:58 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 16:35:58 [SpringApplicationShutdownHook] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6e161cea] for TypeConfiguration
2024-07-23 16:35:58 [SpringApplicationShutdownHook] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7506d35] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6e161cea]
2024-07-23 16:35:58 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-23 16:35:58 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-23 16:36:00 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Starting CoffeeChatApplication using Java 17.0.11 with PID 10324 (/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes started by kimkyohwee in /Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server)
2024-07-23 16:36:00 [main] [transactionId=] [threadId=] DEBUG c.s.CoffeeChat.CoffeeChatApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-07-23 16:36:00 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-23 16:36:00 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 16:36:00 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 67 ms. Found 6 JPA repository interfaces.
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 693 ms
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6591f8ea
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6591f8ea
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6591f8ea
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5273143e
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5273143e
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@279c4e3b
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@279c4e3b
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@334b392d
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@334b392d
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@59f7c106
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@59f7c106
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@59f7c106
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@136fece2
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@136fece2
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@136fece2
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5b3755f4
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5b3755f4
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@37d3aa8c
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@5dd747c1
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5dd747c1
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@1bdafb01
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7aa3857b
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@500ec769
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@500ec769
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@500ec769
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@37806be6
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@37806be6
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@37806be6
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7bce9ce4
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7bce9ce4
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7bce9ce4
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1d2046bb
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1d2046bb
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1d2046bb
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3b33fff9
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3b33fff9
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3b33fff9
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@fd87c22
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@fd87c22
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@fee881
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@fee881
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@1ff463bb
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@1ff463bb
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@1ff463bb
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3b9c9b8b
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@7769d9b6
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7769d9b6
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@248d3a
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3c71cf3e
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3c71cf3e
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3c71cf3e
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@636e4bf8
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@5af38a4a
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@7e1a9173
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@4ca0b9b1
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4ca0b9b1
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5d800a56
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5d800a56
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1be77a76
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@315cf170
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7878bbdb
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@25f7cc38
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@563263a
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@53e28097
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6e794f53
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6e794f53
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@75f4d8a8
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@75f4d8a8
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@69ba72da
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@69ba72da
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2e1ba142
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2e1ba142
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@abc7005
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@abc7005
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@595ec862
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@63c84d31
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@102af1bb
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@102af1bb
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@797f97e3
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@56cd5d76
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@77cd235b
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@302da330
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@302da330
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3568ea59
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@9f2376f
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@173b1af1
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@173b1af1
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@4a520f05
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4a520f05
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@389a1e34
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@389a1e34
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@389a1e34
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@204b0f07
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@204b0f07
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@204b0f07
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6f68756d
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@359865a2
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@5d9bb69b
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5d9bb69b
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@25d0b918
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@25d0b918
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@25d0b918
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@2d38db6f
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2d38db6f
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@37cf91d8
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@37cf91d8
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@571d0925
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@571d0925
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@3fef1e6b
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3fef1e6b
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@4387d2f4
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1dbff71c
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@93ce24d
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@d949bc4
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7079f8f0
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@121cf6f4
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7cdc4070
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@553fbe94
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6abe62bb
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7c0ff7a0
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6e66b498) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@54d35ed5)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6f7c9755) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45abbd24)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1e32037d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5059d398)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5b1420f9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@434ee422)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4de93edd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@53b2e1eb)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@29db008c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1d008e61)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@191b44ca) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5de243bb)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2c4cf7eb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@35260785)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@76d828ff) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39685204)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@195cbf5e
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4387d2f4`
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 16:36:01 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1293f8d7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@58e5fbe5]
2024-07-23 16:36:02 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-23 16:36:02 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1293f8d7] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5af47414]
2024-07-23 16:36:02 [main] [transactionId=] [threadId=] INFO  p6spy - #1721720162098 | took 1ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 16:36:02 [main] [transactionId=] [threadId=] INFO  p6spy - #1721720162100 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 16:36:02 [main] [transactionId=] [threadId=] INFO  p6spy - #1721720162109 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 16:36:02 [main] [transactionId=] [threadId=] INFO  p6spy - #1721720162117 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 16:36:02 [main] [transactionId=] [threadId=] INFO  p6spy - #1721720162125 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 16:36:02 [main] [transactionId=] [threadId=] INFO  p6spy - #1721720162126 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 16:36:02 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5af47414] for TypeConfiguration
2024-07-23 16:36:02 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 16:36:02 [main] [transactionId=] [threadId=] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-23 16:36:03 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7bfa2d74, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@467924d8, org.springframework.security.web.context.SecurityContextHolderFilter@1ff359b7, org.springframework.security.web.header.HeaderWriterFilter@38691f8d, org.springframework.web.filter.CorsFilter@20bc417f, com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter@614da024, org.springframework.security.web.authentication.logout.LogoutFilter@76c1ede3, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@2991524, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@6a225642, com.soongsil.CoffeeChat.config.jwt.JWTFilter@4b76a0f4, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@5bddb619, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@442612a6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@36d02719, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@46933c4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@65314e4, org.springframework.security.web.session.SessionManagementFilter@150a201b, org.springframework.security.web.access.ExceptionTranslationFilter@4ca3e806, org.springframework.security.web.access.intercept.AuthorizationFilter@7152ee36]
2024-07-23 16:36:03 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 16:36:03 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/v3/api-docs/**']
2024-07-23 16:36:03 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 16:36:03 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-ui/**']
2024-07-23 16:36:03 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 16:36:03 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-resources/**']
2024-07-23 16:36:03 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-07-23 16:36:03 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2024-07-23 16:36:03 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Started CoffeeChatApplication in 2.797 seconds (process running for 3.103)
2024-07-23 16:36:06 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-23 16:36:06 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-23 16:36:06 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-07-23 16:36:07 [http-nio-8080-exec-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.user_mentee,
        m1_0.mentor_id,
        m1_0.birth,
        m1_0.field,
        m1_0.part,
        m1_0.phone_num,
        m1_0.picture,
        pd1_0.mentor_id,
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.startTime,
        u1_0.name,
        u1_0.phone,
        u1_0.picture,
        u1_0.role,
        u1_0.username 
    from
        User u1_0 
    join
        Mentor m1_0 
            on m1_0.mentor_id=u1_0.user_mentor 
    join
        PossibleDate pd1_0 
            on m1_0.mentor_id=pd1_0.mentor_id 
    where
        m1_0.mentor_id=?
2024-07-23 16:36:07 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721720167278 | took 1ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select u1_0.user_id,u1_0.email,u1_0.user_mentee,m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture,pd1_0.mentor_id,pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.startTime,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=?
select u1_0.user_id,u1_0.email,u1_0.user_mentee,m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture,pd1_0.mentor_id,pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.startTime,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=1;
2024-07-23 16:36:07 [http-nio-8080-exec-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.user_mentee,
        u1_0.user_mentor,
        u1_0.name,
        u1_0.phone,
        u1_0.picture,
        u1_0.role,
        u1_0.username 
    from
        User u1_0 
    where
        u1_0.username=?
2024-07-23 16:36:07 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721720167304 | took 4ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username=?
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username='google 114962161569005947668';
2024-07-23 16:36:07 [http-nio-8080-exec-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    join
        Mentor m1_0 
            on m1_0.mentor_id=pd1_0.mentor_id 
    where
        m1_0.mentor_id=? 
        and pd1_0.startTime=? 
        and pd1_0.date=?
2024-07-23 16:36:07 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721720167317 | took 1ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 join Mentor m1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=? and pd1_0.startTime=? and pd1_0.date=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 join Mentor m1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=1 and pd1_0.startTime='1970-01-01T10:00:00.000+0900' and pd1_0.date='2024-07-04T00:00:00.000+0900';
2024-07-23 16:36:07 [http-nio-8080-exec-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    insert 
    into
        Application
        (date, endTime, mentee_id, mentor_id, startTime) 
    values
        (?, ?, ?, ?, ?)
2024-07-23 16:36:07 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721720167324 | took 1ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
insert into Application (date,endTime,mentee_id,mentor_id,startTime) values (?,?,?,?,?)
insert into Application (date,endTime,mentee_id,mentor_id,startTime) values ('2024-07-04T00:00:00.000+0900','1970-01-01T11:00:00.000+0900',4,1,'1970-01-01T10:00:00.000+0900');
2024-07-23 16:36:07 [http-nio-8080-exec-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    update
        PossibleDate 
    set
        date=?,
        endTime=?,
        isActive=?,
        mentor_id=?,
        startTime=? 
    where
        possible_date_id=?
2024-07-23 16:36:07 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721720167335 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
update PossibleDate set date=?,endTime=?,isActive=?,mentor_id=?,startTime=? where possible_date_id=?
update PossibleDate set date='2024-07-04T00:00:00.000+0900',endTime='1970-01-01T11:00:00.000+0900',isActive=false,mentor_id=1,startTime='1970-01-01T10:00:00.000+0900' where possible_date_id=1502;
2024-07-23 16:36:07 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721720167340 | took 3ms | commit | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 16:36:17 [http-nio-8080-exec-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.user_mentee,
        m1_0.mentor_id,
        m1_0.birth,
        m1_0.field,
        m1_0.part,
        m1_0.phone_num,
        m1_0.picture,
        pd1_0.mentor_id,
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.startTime,
        u1_0.name,
        u1_0.phone,
        u1_0.picture,
        u1_0.role,
        u1_0.username 
    from
        User u1_0 
    join
        Mentor m1_0 
            on m1_0.mentor_id=u1_0.user_mentor 
    join
        PossibleDate pd1_0 
            on m1_0.mentor_id=pd1_0.mentor_id 
    where
        m1_0.mentor_id=?
2024-07-23 16:36:17 [http-nio-8080-exec-2] [transactionId=] [threadId=] INFO  p6spy - #1721720177925 | took 0ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select u1_0.user_id,u1_0.email,u1_0.user_mentee,m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture,pd1_0.mentor_id,pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.startTime,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=?
select u1_0.user_id,u1_0.email,u1_0.user_mentee,m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture,pd1_0.mentor_id,pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.startTime,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=1;
2024-07-23 16:36:17 [http-nio-8080-exec-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.user_mentee,
        u1_0.user_mentor,
        u1_0.name,
        u1_0.phone,
        u1_0.picture,
        u1_0.role,
        u1_0.username 
    from
        User u1_0 
    where
        u1_0.username=?
2024-07-23 16:36:17 [http-nio-8080-exec-2] [transactionId=] [threadId=] INFO  p6spy - #1721720177936 | took 1ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username=?
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username='google 114962161569005947668';
2024-07-23 16:36:17 [http-nio-8080-exec-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    join
        Mentor m1_0 
            on m1_0.mentor_id=pd1_0.mentor_id 
    where
        m1_0.mentor_id=? 
        and pd1_0.startTime=? 
        and pd1_0.date=?
2024-07-23 16:36:17 [http-nio-8080-exec-2] [transactionId=] [threadId=] INFO  p6spy - #1721720177940 | took 1ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 join Mentor m1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=? and pd1_0.startTime=? and pd1_0.date=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 join Mentor m1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=1 and pd1_0.startTime='1970-01-01T10:00:00.000+0900' and pd1_0.date='2024-07-04T00:00:00.000+0900';
2024-07-23 16:36:17 [http-nio-8080-exec-2] [transactionId=] [threadId=] INFO  p6spy - #1721720177941 | took 0ms | rollback | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 16:36:17 [http-nio-8080-exec-2] [transactionId=] [threadId=] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalStateException: 이미 신청된 시간입니다.] with root cause
java.lang.IllegalStateException: 이미 신청된 시간입니다.
	at com.soongsil.CoffeeChat.service.ApplicationService.createApplication(ApplicationService.java:87)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.soongsil.CoffeeChat.service.ApplicationService$$SpringCGLIB$$0.createApplication(<generated>)
	at com.soongsil.CoffeeChat.controller.ApplicationController.createApplication(ApplicationController.java:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:261)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:189)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter.doFilterInternal(DefaultLogoutPageGeneratingFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:189)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:175)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.soongsil.CoffeeChat.config.jwt.JWTFilter.doFilterInternal(JWTFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter.doFilter(CustomLogoutFilter.java:43)
	at com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter.doFilter(CustomLogoutFilter.java:32)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-07-23 17:03:34 [main] [transactionId=] [threadId=] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest]: ConcurrencyTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-07-23 17:03:34 [main] [transactionId=] [threadId=] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.soongsil.CoffeeChat.CoffeeChatApplication for test class com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest
2024-07-23 17:03:34 [main] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - Starting ConcurrencyTest using Java 17.0.11 with PID 10474 (started by kimkyohwee in /Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server)
2024-07-23 17:03:34 [main] [transactionId=] [threadId=] DEBUG c.s.C.Concurrency.ConcurrencyTest - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-07-23 17:03:34 [main] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - No active profile set, falling back to 1 default profile: "default"
2024-07-23 17:03:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 17:03:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-23 17:03:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 74 ms. Found 6 JPA repository interfaces.
2024-07-23 17:03:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 17:03:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-23 17:03:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:03:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:03:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:03:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:03:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:03:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:03:34 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-07-23 17:03:34 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@16e07bae
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@16e07bae
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@16e07bae
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@598778cc
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@598778cc
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3386ed8
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3386ed8
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@727453a3
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@727453a3
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@67dc6b48
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@67dc6b48
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@67dc6b48
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@57f2e67
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@57f2e67
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@57f2e67
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@11cadb32
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@11cadb32
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@6d3ad37a
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@26f5e45d
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@26f5e45d
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@704c3bdf
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@37986daf
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@c82d925
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@c82d925
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@c82d925
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@55c03e4
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@55c03e4
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@55c03e4
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@14df5253
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@14df5253
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@14df5253
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@605eb072
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@605eb072
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@605eb072
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7a0f06ad
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7a0f06ad
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7a0f06ad
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1fa9692b
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1fa9692b
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@710afd47
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@710afd47
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@64420e34
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@64420e34
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@64420e34
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@667a467f
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@324e8baa
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@324e8baa
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1488a861
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@604f376a
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@604f376a
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@604f376a
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5432dca2
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@12670e55
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@43fd77d8
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5a90fcaa
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5a90fcaa
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1805ec96
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1805ec96
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@32ba5c65
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1ad1be5d
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@47797401
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@702f4124
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@10166230
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@7221539
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@b77b0a0
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@b77b0a0
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@15be68b
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@15be68b
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@22ff1372
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@22ff1372
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@356341c9
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@356341c9
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3a70575
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3a70575
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5d96d434
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7283877
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@286a4c52
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@286a4c52
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@13dd7887
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@780129bc
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3e2c4d4b
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@44de8e00
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@44de8e00
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3cbfdf5c
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4d825dbe
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@11180750
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@11180750
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@210635fd
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@210635fd
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@63814bbe
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@63814bbe
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@63814bbe
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3cb195dd
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3cb195dd
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3cb195dd
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6dc2279c
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7d7b4e04
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@144e36ae
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@144e36ae
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@24615687
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@24615687
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@24615687
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@58636b50
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7f4f1536
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@1ad1b737
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1ad1b737
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@342a1f84
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@342a1f84
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@342a1f84
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@77d0dbba
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@77d0dbba
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@70b196d3
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@70b196d3
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@67ceeffd
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@67ceeffd
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3fc1abf
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3fc1abf
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@72001c71
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@72001c71
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@e7b0bec
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1e5aacd9
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@17003497
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@17003497
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7856f41a
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5fbae40
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2c08c787
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@67f591c2
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@284c4f02
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@709d6de5
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1a43a88e
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@51f34185
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1b8d20e6
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-23 17:03:35 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:815)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:438)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:189)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at com.p6spy.engine.spy.P6DataSource.getConnection(P6DataSource.java:300)
	at org.springframework.jdbc.datasource.DelegatingDataSource.getConnection(DelegatingDataSource.java:101)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:428)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:276)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:107)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:129)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:223)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:170)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:104)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:149)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:165)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:88)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:935)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:805)
	... 128 common frames omitted
Caused by: java.net.UnknownHostException: ${DB_URL}: nodename nor servname provided, or not known
	at java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.InetAddress$PlatformNameService.lookupAllHostAddr(InetAddress.java:934)
	at java.base/java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1543)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(InetAddress.java:852)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1533)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1385)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:130)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:62)
	... 131 common frames omitted
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator - HHH000342: Could not obtain connection to query metadata
java.lang.NullPointerException: Cannot invoke "org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(java.sql.SQLException, String)" because the return value of "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.sqlExceptionHelper()" is null
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:116)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:276)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:107)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:129)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:223)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:170)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@28f8ce2e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2c0a3826)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4af0c50) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5ffd35dd)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@311a09b2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4cacccbf)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@301d84f6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6f80cf5)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@674ed201) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4dad2363)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@114b2414) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@57920d6c)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@465d1345) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@62cf86d6)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2a6c751f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6dd2e453)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@433b1597) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5d5cd210)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@43090195
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@7856f41a`
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@53e166ad] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@30c03473]
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@53e166ad] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@14b9817b]
2024-07-23 17:03:36 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-23 17:03:37 [main] [transactionId=] [threadId=] ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:815)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:438)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:189)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at com.p6spy.engine.spy.P6DataSource.getConnection(P6DataSource.java:300)
	at org.springframework.jdbc.datasource.DelegatingDataSource.getConnection(DelegatingDataSource.java:101)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:428)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:46)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:39)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:70)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processTableResultSet(InformationExtractorJdbcDatabaseMetaDataImpl.java:64)
	at org.hibernate.tool.schema.extract.internal.AbstractInformationExtractorImpl.getTables(AbstractInformationExtractorImpl.java:570)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:122)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:72)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:104)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:149)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:165)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:88)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:935)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:805)
	... 133 common frames omitted
Caused by: java.net.UnknownHostException: ${DB_URL}
	at java.base/java.net.InetAddress$CachedAddresses.get(InetAddress.java:801)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1533)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1385)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:130)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:62)
	... 136 common frames omitted
2024-07-23 17:03:37 [main] [transactionId=] [threadId=] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 0, SQLState: 08S01
2024-07-23 17:03:37 [main] [transactionId=] [threadId=] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
2024-07-23 17:03:37 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@14b9817b] for TypeConfiguration
2024-07-23 17:03:37 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@15ae31b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@14b9817b]
2024-07-23 17:03:37 [main] [transactionId=] [threadId=] ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution [Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.] [n/a]
2024-07-23 17:03:37 [main] [transactionId=] [threadId=] WARN  o.s.w.c.s.GenericWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution [Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.] [n/a]
2024-07-23 17:03:37 [main] [transactionId=] [threadId=] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-07-23 17:03:37 [main] [transactionId=] [threadId=] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution [Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.] [n/a]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1773)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: jakarta.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution [Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.] [n/a]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	... 93 common frames omitted
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution [Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.] [n/a]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:100)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:74)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:39)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:70)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processTableResultSet(InformationExtractorJdbcDatabaseMetaDataImpl.java:64)
	at org.hibernate.tool.schema.extract.internal.AbstractInformationExtractorImpl.getTables(AbstractInformationExtractorImpl.java:570)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:122)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:72)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	... 97 common frames omitted
Caused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:815)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:438)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:189)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at com.p6spy.engine.spy.P6DataSource.getConnection(P6DataSource.java:300)
	at org.springframework.jdbc.datasource.DelegatingDataSource.getConnection(DelegatingDataSource.java:101)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:428)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:46)
	... 118 common frames omitted
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:104)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:149)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:165)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:88)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:935)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:805)
	... 133 common frames omitted
Caused by: java.net.UnknownHostException: ${DB_URL}
	at java.base/java.net.InetAddress$CachedAddresses.get(InetAddress.java:801)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1533)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1385)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:130)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:62)
	... 136 common frames omitted
2024-07-23 17:03:37 [main] [transactionId=] [threadId=] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest@308e465b]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@4ac26092 testClass = com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest, locations = [], classes = [com.soongsil.CoffeeChat.CoffeeChatApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@345f69f3, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@71e9ebae, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@42530531, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@1b75c2e3, org.springframework.boot.test.context.SpringBootTestAnnotation@393d5387], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution [Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.] [n/a]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1773)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 72 common frames omitted
Caused by: jakarta.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution [Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.] [n/a]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	... 93 common frames omitted
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to open JDBC Connection for DDL execution [Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.] [n/a]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:100)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:74)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:39)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:70)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processTableResultSet(InformationExtractorJdbcDatabaseMetaDataImpl.java:64)
	at org.hibernate.tool.schema.extract.internal.AbstractInformationExtractorImpl.getTables(AbstractInformationExtractorImpl.java:570)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:122)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:72)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	... 97 common frames omitted
Caused by: com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:815)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:438)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:189)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at com.p6spy.engine.spy.P6DataSource.getConnection(P6DataSource.java:300)
	at org.springframework.jdbc.datasource.DelegatingDataSource.getConnection(DelegatingDataSource.java:101)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:428)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:46)
	... 118 common frames omitted
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:104)
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:149)
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:165)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:88)
	at com.mysql.cj.NativeSession.connect(NativeSession.java:120)
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:935)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:805)
	... 133 common frames omitted
Caused by: java.net.UnknownHostException: ${DB_URL}
	at java.base/java.net.InetAddress$CachedAddresses.get(InetAddress.java:801)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1533)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1385)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1306)
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:130)
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:62)
	... 136 common frames omitted
2024-07-23 17:04:08 [main] [transactionId=] [threadId=] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest]: ConcurrencyTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-07-23 17:04:08 [main] [transactionId=] [threadId=] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.soongsil.CoffeeChat.CoffeeChatApplication for test class com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - Starting ConcurrencyTest using Java 17.0.11 with PID 10481 (started by kimkyohwee in /Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server)
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG c.s.C.Concurrency.ConcurrencyTest - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - No active profile set, falling back to 1 default profile: "default"
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 75 ms. Found 6 JPA repository interfaces.
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6df2a206
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6df2a206
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6df2a206
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@61993d18
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@61993d18
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6f240187
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6f240187
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@46a388cc
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@46a388cc
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3e39f08c
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@3e39f08c
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@3e39f08c
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@16e07bae
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@16e07bae
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@16e07bae
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@727453a3
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@727453a3
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@67dc6b48
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@57f2e67
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@57f2e67
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4571cebe
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@154864f8
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@11cadb32
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@11cadb32
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@11cadb32
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@6d3ad37a
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@6d3ad37a
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@6d3ad37a
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@26f5e45d
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@26f5e45d
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@26f5e45d
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@704c3bdf
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@704c3bdf
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@704c3bdf
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@37986daf
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@37986daf
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@37986daf
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@c82d925
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@c82d925
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@55c03e4
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@55c03e4
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@14df5253
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@14df5253
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@14df5253
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@605eb072
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@7a0f06ad
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7a0f06ad
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1fa9692b
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@710afd47
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@710afd47
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@710afd47
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@64420e34
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@667a467f
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@324e8baa
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1488a861
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1488a861
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@604f376a
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@604f376a
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5432dca2
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@12670e55
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@43fd77d8
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5a90fcaa
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@1805ec96
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@32ba5c65
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1ad1be5d
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1ad1be5d
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@47797401
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@47797401
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@702f4124
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@702f4124
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@10166230
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@10166230
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@7221539
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@7221539
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@b77b0a0
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@15be68b
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@22ff1372
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@22ff1372
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@356341c9
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3a70575
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5d96d434
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7283877
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7283877
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@286a4c52
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@13dd7887
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@780129bc
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@780129bc
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@3e2c4d4b
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3e2c4d4b
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@44de8e00
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@44de8e00
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@44de8e00
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3cbfdf5c
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3cbfdf5c
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3cbfdf5c
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4d825dbe
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@11180750
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@210635fd
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@210635fd
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@63814bbe
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@63814bbe
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@63814bbe
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3cb195dd
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6dc2279c
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@7d7b4e04
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@7d7b4e04
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@144e36ae
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@144e36ae
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@144e36ae
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@24615687
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@24615687
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@58636b50
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@58636b50
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7f4f1536
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7f4f1536
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1ad1b737
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1ad1b737
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@342a1f84
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@342a1f84
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@77d0dbba
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@70b196d3
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@19647566
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@19647566
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@ff2266c
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@71b3ba5a
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@83ebdc5
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@a047bdb
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@14dbfdb1
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7856f41a
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5fbae40
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2c08c787
2024-07-23 17:04:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@67f591c2
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6ec98ccc
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@430106cf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@647af13d)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2aac6fa7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@29a1ec65)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@625db0e0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@511d568f)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1805ca5c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3e61cffd)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3134b261) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@aa633e6)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3cc74fc4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@c697186)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@185a7dd0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2358443e)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@25e796fe) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@62c53685)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@29ba63f0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4822ab4d)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@679f59f1
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@ff2266c`
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@18ff1520] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@36120a8b]
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@18ff1520] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4138af7]
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1721721850698 | took 1ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1721721850700 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1721721850710 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1721721850718 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1721721850726 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1721721850727 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4138af7] for TypeConfiguration
2024-07-23 17:04:10 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 17:04:11 [main] [transactionId=] [threadId=] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-23 17:04:12 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@522a9876, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@794ffe22, org.springframework.security.web.context.SecurityContextHolderFilter@52d04234, org.springframework.security.web.header.HeaderWriterFilter@4cf5db07, org.springframework.web.filter.CorsFilter@2da16d31, com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter@74a15f4, org.springframework.security.web.authentication.logout.LogoutFilter@66ade539, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@4d542218, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@b729651, com.soongsil.CoffeeChat.config.jwt.JWTFilter@125c443, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@705606ac, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@71d94ab, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3f7e72a7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@69bf351e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@21f3a99c, org.springframework.security.web.session.SessionManagementFilter@5cdf6bb1, org.springframework.security.web.access.ExceptionTranslationFilter@3e51beda, org.springframework.security.web.access.intercept.AuthorizationFilter@228ed68c]
2024-07-23 17:04:12 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Ant [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 17:04:12 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Ant [pattern='/v3/api-docs/**']
2024-07-23 17:04:12 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 17:04:12 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-ui/**']
2024-07-23 17:04:12 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 17:04:12 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-resources/**']
2024-07-23 17:04:12 [main] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - Started ConcurrencyTest in 3.502 seconds (process running for 4.112)
2024-07-23 17:04:12 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        m1_0.mentor_id,
        m1_0.birth,
        m1_0.field,
        m1_0.part,
        m1_0.phone_num,
        m1_0.picture 
    from
        Mentor m1_0 
    where
        m1_0.mentor_id=?
2024-07-23 17:04:12 [main] [transactionId=] [threadId=] INFO  p6spy - #1721721852729 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture from Mentor m1_0 where m1_0.mentor_id=?
select m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture from Mentor m1_0 where m1_0.mentor_id=1;
2024-07-23 17:04:12 [main] [transactionId=] [threadId=] INFO  p6spy - #1721721852737 | took 0ms | commit | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 17:04:12 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    where
        pd1_0.possible_date_id=?
2024-07-23 17:04:12 [main] [transactionId=] [threadId=] INFO  p6spy - #1721721852741 | took 0ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=2003;
2024-07-23 17:04:12 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    update
        PossibleDate 
    set
        date=?,
        endTime=?,
        isActive=?,
        mentor_id=?,
        startTime=? 
    where
        possible_date_id=?
2024-07-23 17:04:12 [main] [transactionId=] [threadId=] INFO  p6spy - #1721721852755 | took 2ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
update PossibleDate set date=?,endTime=?,isActive=?,mentor_id=?,startTime=? where possible_date_id=?
update PossibleDate set date='2000-06-25T00:00:00.000+0900',endTime='1970-01-01T11:00:00.000+0900',isActive=true,mentor_id=1,startTime='1970-01-01T10:00:00.000+0900' where possible_date_id=2003;
2024-07-23 17:04:12 [main] [transactionId=] [threadId=] INFO  p6spy - #1721721852757 | took 1ms | commit | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 17:04:12 [Thread-1] [transactionId=] [threadId=] INFO  p6spy - #1721721852943 | took 0ms | rollback | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 17:04:13 [Thread-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.user_mentee,
        m1_0.mentor_id,
        m1_0.birth,
        m1_0.field,
        m1_0.part,
        m1_0.phone_num,
        m1_0.picture,
        pd1_0.mentor_id,
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.startTime,
        u1_0.name,
        u1_0.phone,
        u1_0.picture,
        u1_0.role,
        u1_0.username 
    from
        User u1_0 
    join
        Mentor m1_0 
            on m1_0.mentor_id=u1_0.user_mentor 
    join
        PossibleDate pd1_0 
            on m1_0.mentor_id=pd1_0.mentor_id 
    where
        m1_0.mentor_id=?
2024-07-23 17:04:13 [Thread-2] [transactionId=] [threadId=] INFO  p6spy - #1721721853113 | took 11ms | statement | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select u1_0.user_id,u1_0.email,u1_0.user_mentee,m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture,pd1_0.mentor_id,pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.startTime,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=?
select u1_0.user_id,u1_0.email,u1_0.user_mentee,m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture,pd1_0.mentor_id,pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.startTime,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=1;
2024-07-23 17:04:13 [Thread-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.user_mentee,
        u1_0.user_mentor,
        u1_0.name,
        u1_0.phone,
        u1_0.picture,
        u1_0.role,
        u1_0.username 
    from
        User u1_0 
    where
        u1_0.username=?
2024-07-23 17:04:13 [Thread-2] [transactionId=] [threadId=] INFO  p6spy - #1721721853127 | took 0ms | statement | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username=?
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username='user0';
2024-07-23 17:04:13 [Thread-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    join
        Mentor m1_0 
            on m1_0.mentor_id=pd1_0.mentor_id 
    where
        m1_0.mentor_id=? 
        and pd1_0.startTime=? 
        and pd1_0.date=?
2024-07-23 17:04:13 [Thread-2] [transactionId=] [threadId=] INFO  p6spy - #1721721853140 | took 0ms | statement | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 join Mentor m1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=? and pd1_0.startTime=? and pd1_0.date=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 join Mentor m1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=1 and pd1_0.startTime='1970-01-01T10:00:00.000+0900' and pd1_0.date='2000-06-25T00:00:00.000+0900';
2024-07-23 17:04:13 [Thread-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    insert 
    into
        Application
        (date, endTime, mentor_id, startTime) 
    values
        (?, ?, ?, ?)
2024-07-23 17:04:13 [Thread-2] [transactionId=] [threadId=] INFO  p6spy - #1721721853144 | took 0ms | statement | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
insert into Application (date,endTime,mentor_id,startTime) values (?,?,?,?)
insert into Application (date,endTime,mentor_id,startTime) values ('2000-06-25T00:00:00.000+0900','1970-01-01T11:00:00.000+0900',1,'1970-01-01T10:00:00.000+0900');
2024-07-23 17:04:13 [Thread-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    update
        PossibleDate 
    set
        date=?,
        endTime=?,
        isActive=?,
        mentor_id=?,
        startTime=? 
    where
        possible_date_id=?
2024-07-23 17:04:13 [Thread-2] [transactionId=] [threadId=] INFO  p6spy - #1721721853157 | took 3ms | statement | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
update PossibleDate set date=?,endTime=?,isActive=?,mentor_id=?,startTime=? where possible_date_id=?
update PossibleDate set date='2000-06-25T00:00:00.000+0900',endTime='1970-01-01T11:00:00.000+0900',isActive=false,mentor_id=1,startTime='1970-01-01T10:00:00.000+0900' where possible_date_id=2003;
2024-07-23 17:04:13 [Thread-2] [transactionId=] [threadId=] INFO  p6spy - #1721721853158 | took 0ms | commit | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 17:04:13 [MailExecutor-1] [transactionId=] [threadId=] ERROR o.s.a.i.SimpleAsyncUncaughtExceptionHandler - Unexpected exception occurred invoking async method: public void com.soongsil.CoffeeChat.service.ApplicationService.sendApplicationMatchedEmailAsync(java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate,java.time.LocalTime,java.time.LocalTime) throws jakarta.mail.MessagingException
java.lang.NullPointerException: Cannot invoke "String.length()" because "s" is null
	at jakarta.mail.internet.InternetAddress.parse(InternetAddress.java:778)
	at jakarta.mail.internet.InternetAddress.parse(InternetAddress.java:737)
	at jakarta.mail.internet.InternetAddress.parse(InternetAddress.java:714)
	at jakarta.mail.internet.MimeMessage.addRecipients(MimeMessage.java:709)
	at com.soongsil.CoffeeChat.util.email.EmailUtil.sendMail(EmailUtil.java:25)
	at com.soongsil.CoffeeChat.util.email.EmailUtil.sendApplicationMatchedEmail(EmailUtil.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:713)
	at com.soongsil.CoffeeChat.util.email.EmailUtil$$SpringCGLIB$$0.sendApplicationMatchedEmail(<generated>)
	at com.soongsil.CoffeeChat.service.ApplicationService.sendApplicationMatchedEmailAsync(ApplicationService.java:111)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:113)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-07-23 17:04:13 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 17:04:13 [SpringApplicationShutdownHook] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@4138af7] for TypeConfiguration
2024-07-23 17:04:13 [SpringApplicationShutdownHook] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@45b6e133] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4138af7]
2024-07-23 17:04:13 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-23 17:04:13 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-23 17:27:31 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 17:27:31 [SpringApplicationShutdownHook] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5af47414] for TypeConfiguration
2024-07-23 17:27:31 [SpringApplicationShutdownHook] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1400fb96] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5af47414]
2024-07-23 17:27:31 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-23 17:27:31 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-23 17:27:36 [main] [transactionId=] [threadId=] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest]: ConcurrencyTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-07-23 17:27:36 [main] [transactionId=] [threadId=] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.soongsil.CoffeeChat.CoffeeChatApplication for test class com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest
2024-07-23 17:27:36 [main] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - Starting ConcurrencyTest using Java 17.0.11 with PID 10801 (started by kimkyohwee in /Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server)
2024-07-23 17:27:36 [main] [transactionId=] [threadId=] DEBUG c.s.C.Concurrency.ConcurrencyTest - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-07-23 17:27:36 [main] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - No active profile set, falling back to 1 default profile: "default"
2024-07-23 17:27:36 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 17:27:36 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-23 17:27:36 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 74 ms. Found 6 JPA repository interfaces.
2024-07-23 17:27:36 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 17:27:36 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-23 17:27:36 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:27:36 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:27:36 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:27:36 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:27:36 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:27:36 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:27:36 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5fc7255c
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5fc7255c
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5fc7255c
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@20a47036
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@20a47036
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@70c205bf
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@70c205bf
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@43ab9ae9
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@43ab9ae9
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2520aa05
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@2520aa05
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2520aa05
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@26865b57
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@26865b57
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@26865b57
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@79ba0285
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@79ba0285
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@6df2a206
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@61993d18
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@61993d18
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6f240187
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@46a388cc
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3e39f08c
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3e39f08c
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3e39f08c
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@16e07bae
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@16e07bae
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@16e07bae
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@598778cc
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@598778cc
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@598778cc
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3386ed8
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3386ed8
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3386ed8
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@727453a3
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@727453a3
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@727453a3
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@67dc6b48
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@67dc6b48
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@57f2e67
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@57f2e67
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@4571cebe
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@4571cebe
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4571cebe
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@154864f8
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@11cadb32
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@11cadb32
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@6d3ad37a
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@26f5e45d
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@26f5e45d
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@26f5e45d
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@704c3bdf
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@37986daf
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@c82d925
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@55c03e4
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@55c03e4
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@14df5253
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@14df5253
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@605eb072
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7a0f06ad
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@1fa9692b
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@710afd47
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@64420e34
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@667a467f
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@324e8baa
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@324e8baa
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1488a861
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1488a861
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@604f376a
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@604f376a
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5432dca2
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5432dca2
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@12670e55
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@12670e55
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@43fd77d8
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5a90fcaa
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@1805ec96
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@1805ec96
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@32ba5c65
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1ad1be5d
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@47797401
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@702f4124
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@702f4124
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@10166230
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7221539
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@b77b0a0
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@b77b0a0
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@15be68b
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@15be68b
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@22ff1372
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@22ff1372
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@22ff1372
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@356341c9
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@356341c9
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@356341c9
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3a70575
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5d96d434
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@7283877
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7283877
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@286a4c52
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@286a4c52
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@286a4c52
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@13dd7887
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@780129bc
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@3e2c4d4b
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3e2c4d4b
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@44de8e00
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@44de8e00
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@44de8e00
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@3cbfdf5c
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3cbfdf5c
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4d825dbe
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4d825dbe
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@11180750
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@11180750
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@210635fd
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@210635fd
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@63814bbe
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@63814bbe
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3cb195dd
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6dc2279c
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@ac417a2
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@ac417a2
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@527d48db
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@194037f9
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2335aef2
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@17003497
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2f038d3c
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@376498da
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@39a8e2fa
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2f9addd4
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1c43df76
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@68360fb9
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4040ccae) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@15bb8ed5)
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@18f8ebd4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7e1fb22c)
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@38fc34fd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7178d811)
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2e013ba1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2d8c729f)
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@740ee00f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@430106cf)
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@647af13d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aac6fa7)
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@29a1ec65) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@625db0e0)
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@511d568f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1805ca5c)
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e61cffd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3134b261)
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1b841e7d
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@527d48db`
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@58a7a58d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4d8522ff]
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@58a7a58d] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5de6c7d7]
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723257961 | took 1ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723257964 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723257975 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723257983 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723257991 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723257992 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5de6c7d7] for TypeConfiguration
2024-07-23 17:27:37 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 17:27:38 [main] [transactionId=] [threadId=] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-23 17:27:39 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@27af14bd, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@38f0de07, org.springframework.security.web.context.SecurityContextHolderFilter@70d3b49c, org.springframework.security.web.header.HeaderWriterFilter@16be2c40, org.springframework.web.filter.CorsFilter@21e5feb, com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter@33742179, org.springframework.security.web.authentication.logout.LogoutFilter@7080e8fc, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@7d800902, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@5bbda8aa, com.soongsil.CoffeeChat.config.jwt.JWTFilter@6ca1c156, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@52d04234, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@521f2a23, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@34e0d52e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4cf5db07, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@228ed68c, org.springframework.security.web.session.SessionManagementFilter@51bab787, org.springframework.security.web.access.ExceptionTranslationFilter@4d555b85, org.springframework.security.web.access.intercept.AuthorizationFilter@14c5d220]
2024-07-23 17:27:39 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Ant [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 17:27:39 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Ant [pattern='/v3/api-docs/**']
2024-07-23 17:27:39 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 17:27:39 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-ui/**']
2024-07-23 17:27:39 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 17:27:39 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-resources/**']
2024-07-23 17:27:39 [main] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - Started ConcurrencyTest in 3.445 seconds (process running for 4.062)
2024-07-23 17:27:40 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        m1_0.mentor_id,
        m1_0.birth,
        m1_0.field,
        m1_0.part,
        m1_0.phone_num,
        m1_0.picture 
    from
        Mentor m1_0 
    where
        m1_0.mentor_id=?
2024-07-23 17:27:40 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723260045 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture from Mentor m1_0 where m1_0.mentor_id=?
select m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture from Mentor m1_0 where m1_0.mentor_id=1;
2024-07-23 17:27:40 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723260052 | took 0ms | commit | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 17:27:40 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    where
        pd1_0.possible_date_id=?
2024-07-23 17:27:40 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723260056 | took 0ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=2003;
2024-07-23 17:27:40 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    update
        PossibleDate 
    set
        date=?,
        endTime=?,
        isActive=?,
        mentor_id=?,
        startTime=? 
    where
        possible_date_id=?
2024-07-23 17:27:40 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723260068 | took 2ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
update PossibleDate set date=?,endTime=?,isActive=?,mentor_id=?,startTime=? where possible_date_id=?
update PossibleDate set date='2000-06-25T00:00:00.000+0900',endTime='1970-01-01T11:00:00.000+0900',isActive=true,mentor_id=1,startTime='1970-01-01T10:00:00.000+0900' where possible_date_id=2003;
2024-07-23 17:27:40 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723260071 | took 2ms | commit | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 17:27:40 [Thread-2] [transactionId=] [threadId=] INFO  p6spy - #1721723260268 | took 0ms | rollback | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 17:27:40 [Thread-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.user_mentee,
        m1_0.mentor_id,
        m1_0.birth,
        m1_0.field,
        m1_0.part,
        m1_0.phone_num,
        m1_0.picture,
        pd1_0.mentor_id,
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.startTime,
        u1_0.name,
        u1_0.phone,
        u1_0.picture,
        u1_0.role,
        u1_0.username 
    from
        User u1_0 
    join
        Mentor m1_0 
            on m1_0.mentor_id=u1_0.user_mentor 
    join
        PossibleDate pd1_0 
            on m1_0.mentor_id=pd1_0.mentor_id 
    where
        m1_0.mentor_id=?
2024-07-23 17:27:40 [Thread-1] [transactionId=] [threadId=] INFO  p6spy - #1721723260424 | took 1ms | statement | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select u1_0.user_id,u1_0.email,u1_0.user_mentee,m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture,pd1_0.mentor_id,pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.startTime,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=?
select u1_0.user_id,u1_0.email,u1_0.user_mentee,m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture,pd1_0.mentor_id,pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.startTime,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=1;
2024-07-23 17:27:40 [Thread-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.user_mentee,
        u1_0.user_mentor,
        u1_0.name,
        u1_0.phone,
        u1_0.picture,
        u1_0.role,
        u1_0.username 
    from
        User u1_0 
    where
        u1_0.username=?
2024-07-23 17:27:40 [Thread-1] [transactionId=] [threadId=] INFO  p6spy - #1721723260438 | took 1ms | statement | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username=?
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username='user0';
2024-07-23 17:27:40 [Thread-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    join
        Mentor m1_0 
            on m1_0.mentor_id=pd1_0.mentor_id 
    where
        m1_0.mentor_id=? 
        and pd1_0.startTime=? 
        and pd1_0.date=?
2024-07-23 17:27:40 [Thread-1] [transactionId=] [threadId=] INFO  p6spy - #1721723260452 | took 0ms | statement | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 join Mentor m1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=? and pd1_0.startTime=? and pd1_0.date=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 join Mentor m1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=1 and pd1_0.startTime='1970-01-01T10:00:00.000+0900' and pd1_0.date='2000-06-25T00:00:00.000+0900';
2024-07-23 17:27:40 [Thread-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    insert 
    into
        Application
        (date, endTime, mentor_id, startTime) 
    values
        (?, ?, ?, ?)
2024-07-23 17:27:40 [Thread-1] [transactionId=] [threadId=] INFO  p6spy - #1721723260456 | took 0ms | statement | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
insert into Application (date,endTime,mentor_id,startTime) values (?,?,?,?)
insert into Application (date,endTime,mentor_id,startTime) values ('2000-06-25T00:00:00.000+0900','1970-01-01T11:00:00.000+0900',1,'1970-01-01T10:00:00.000+0900');
2024-07-23 17:27:40 [Thread-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    update
        PossibleDate 
    set
        date=?,
        endTime=?,
        isActive=?,
        mentor_id=?,
        startTime=? 
    where
        possible_date_id=?
2024-07-23 17:27:40 [Thread-1] [transactionId=] [threadId=] INFO  p6spy - #1721723260464 | took 0ms | statement | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
update PossibleDate set date=?,endTime=?,isActive=?,mentor_id=?,startTime=? where possible_date_id=?
update PossibleDate set date='2000-06-25T00:00:00.000+0900',endTime='1970-01-01T11:00:00.000+0900',isActive=false,mentor_id=1,startTime='1970-01-01T10:00:00.000+0900' where possible_date_id=2003;
2024-07-23 17:27:40 [Thread-1] [transactionId=] [threadId=] INFO  p6spy - #1721723260465 | took 0ms | commit | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 17:27:40 [MailExecutor-1] [transactionId=] [threadId=] ERROR o.s.a.i.SimpleAsyncUncaughtExceptionHandler - Unexpected exception occurred invoking async method: public void com.soongsil.CoffeeChat.service.ApplicationService.sendApplicationMatchedEmailAsync(java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate,java.time.LocalTime,java.time.LocalTime) throws jakarta.mail.MessagingException
java.lang.NullPointerException: Cannot invoke "String.length()" because "s" is null
	at jakarta.mail.internet.InternetAddress.parse(InternetAddress.java:778)
	at jakarta.mail.internet.InternetAddress.parse(InternetAddress.java:737)
	at jakarta.mail.internet.InternetAddress.parse(InternetAddress.java:714)
	at jakarta.mail.internet.MimeMessage.addRecipients(MimeMessage.java:709)
	at com.soongsil.CoffeeChat.util.email.EmailUtil.sendMail(EmailUtil.java:25)
	at com.soongsil.CoffeeChat.util.email.EmailUtil.sendApplicationMatchedEmail(EmailUtil.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:713)
	at com.soongsil.CoffeeChat.util.email.EmailUtil$$SpringCGLIB$$0.sendApplicationMatchedEmail(<generated>)
	at com.soongsil.CoffeeChat.service.ApplicationService.sendApplicationMatchedEmailAsync(ApplicationService.java:114)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:113)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-07-23 17:27:40 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 17:27:40 [SpringApplicationShutdownHook] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5de6c7d7] for TypeConfiguration
2024-07-23 17:27:40 [SpringApplicationShutdownHook] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4521a9d3] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5de6c7d7]
2024-07-23 17:27:40 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-23 17:27:40 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-23 17:32:19 [main] [transactionId=] [threadId=] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest]: ConcurrencyTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-07-23 17:32:19 [main] [transactionId=] [threadId=] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.soongsil.CoffeeChat.CoffeeChatApplication for test class com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest
2024-07-23 17:32:19 [main] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - Starting ConcurrencyTest using Java 17.0.11 with PID 10835 (started by kimkyohwee in /Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server)
2024-07-23 17:32:19 [main] [transactionId=] [threadId=] DEBUG c.s.C.Concurrency.ConcurrencyTest - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-07-23 17:32:19 [main] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - No active profile set, falling back to 1 default profile: "default"
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 75 ms. Found 6 JPA repository interfaces.
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@46894dc5
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@46894dc5
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@46894dc5
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@596afb2f
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@596afb2f
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@79ba0285
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@79ba0285
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6df2a206
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6df2a206
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@61993d18
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@61993d18
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@61993d18
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@6f240187
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@6f240187
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@6f240187
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@16e07bae
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@16e07bae
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@598778cc
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3386ed8
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3386ed8
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@727453a3
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@67dc6b48
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@57f2e67
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@57f2e67
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@57f2e67
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4571cebe
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@4571cebe
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4571cebe
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@154864f8
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@154864f8
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@154864f8
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@11cadb32
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@11cadb32
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@11cadb32
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6d3ad37a
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@6d3ad37a
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@6d3ad37a
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@26f5e45d
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@26f5e45d
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@704c3bdf
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@704c3bdf
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@37986daf
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@37986daf
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@37986daf
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@c82d925
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@55c03e4
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@55c03e4
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@14df5253
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@605eb072
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@605eb072
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@605eb072
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7a0f06ad
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@1fa9692b
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@710afd47
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@64420e34
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@64420e34
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@667a467f
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@667a467f
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@324e8baa
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@1488a861
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@604f376a
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5432dca2
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@12670e55
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@43fd77d8
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5a90fcaa
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5a90fcaa
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1805ec96
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1805ec96
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@32ba5c65
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@32ba5c65
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1ad1be5d
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1ad1be5d
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@47797401
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@47797401
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@702f4124
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@10166230
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7221539
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7221539
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@b77b0a0
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@15be68b
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@22ff1372
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@356341c9
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@356341c9
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3a70575
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5d96d434
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@7283877
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7283877
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@286a4c52
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@286a4c52
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@13dd7887
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@13dd7887
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@13dd7887
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@780129bc
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@780129bc
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@780129bc
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3e2c4d4b
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@44de8e00
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@3cbfdf5c
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@3cbfdf5c
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4d825dbe
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4d825dbe
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4d825dbe
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@11180750
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@210635fd
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@63814bbe
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@63814bbe
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@3cb195dd
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3cb195dd
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3cb195dd
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6dc2279c
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6dc2279c
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7d7b4e04
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7d7b4e04
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@144e36ae
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@144e36ae
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@24615687
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@24615687
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@58636b50
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@58636b50
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@7f4f1536
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1ad1b737
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@15cee630
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@15cee630
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@39a8e2fa
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2f9addd4
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@1c43df76
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@ff2266c
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@71b3ba5a
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@83ebdc5
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@a047bdb
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@14dbfdb1
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7856f41a
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3d02ff64
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2e013ba1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d8c729f)
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@740ee00f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@430106cf)
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@647af13d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2aac6fa7)
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@29a1ec65) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@625db0e0)
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@511d568f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1805ca5c)
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3e61cffd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3134b261)
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@aa633e6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3cc74fc4)
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@c697186) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@185a7dd0)
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2358443e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@25e796fe)
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@10f397d0
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@39a8e2fa`
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:32:20 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6e78177b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4ec37a42]
2024-07-23 17:32:21 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-23 17:32:21 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6e78177b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@363d29dd]
2024-07-23 17:32:21 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723541268 | took 1ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 17:32:21 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723541270 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:32:21 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723541283 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:32:21 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723541292 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:32:21 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723541300 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 17:32:21 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723541302 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:32:21 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@363d29dd] for TypeConfiguration
2024-07-23 17:32:21 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 17:32:22 [main] [transactionId=] [threadId=] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-23 17:32:22 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@228ed68c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@30e3544d, org.springframework.security.web.context.SecurityContextHolderFilter@6ea48ca1, org.springframework.security.web.header.HeaderWriterFilter@7451338e, org.springframework.web.filter.CorsFilter@522a9876, com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter@794ffe22, org.springframework.security.web.authentication.logout.LogoutFilter@171a6fd1, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@1e1c1634, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@4d7909bd, com.soongsil.CoffeeChat.config.jwt.JWTFilter@2da16d31, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@29e9d47b, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@74a15f4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@52d04234, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@75f5293c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@125c443, org.springframework.security.web.session.SessionManagementFilter@4cf5db07, org.springframework.security.web.access.ExceptionTranslationFilter@2ecb7f0c, org.springframework.security.web.access.intercept.AuthorizationFilter@6ca1c156]
2024-07-23 17:32:22 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Ant [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 17:32:22 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Ant [pattern='/v3/api-docs/**']
2024-07-23 17:32:22 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 17:32:22 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-ui/**']
2024-07-23 17:32:22 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 17:32:22 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-resources/**']
2024-07-23 17:32:22 [main] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - Started ConcurrencyTest in 3.436 seconds (process running for 4.116)
2024-07-23 17:32:23 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        m1_0.mentor_id,
        m1_0.birth,
        m1_0.field,
        m1_0.part,
        m1_0.phone_num,
        m1_0.picture 
    from
        Mentor m1_0 
    where
        m1_0.mentor_id=?
2024-07-23 17:32:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723543221 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture from Mentor m1_0 where m1_0.mentor_id=?
select m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture from Mentor m1_0 where m1_0.mentor_id=1;
2024-07-23 17:32:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723543228 | took 0ms | commit | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 17:32:23 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    where
        pd1_0.possible_date_id=?
2024-07-23 17:32:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723543232 | took 0ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=2003;
2024-07-23 17:32:23 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    update
        PossibleDate 
    set
        date=?,
        endTime=?,
        isActive=?,
        mentor_id=?,
        startTime=? 
    where
        possible_date_id=?
2024-07-23 17:32:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723543244 | took 1ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
update PossibleDate set date=?,endTime=?,isActive=?,mentor_id=?,startTime=? where possible_date_id=?
update PossibleDate set date='2000-06-25T00:00:00.000+0900',endTime='1970-01-01T11:00:00.000+0900',isActive=true,mentor_id=1,startTime='1970-01-01T10:00:00.000+0900' where possible_date_id=2003;
2024-07-23 17:32:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723543245 | took 0ms | commit | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 17:32:23 [Thread-2] [transactionId=] [threadId=] INFO  p6spy - #1721723543414 | took 0ms | rollback | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 17:32:23 [Thread-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.user_mentee,
        m1_0.mentor_id,
        m1_0.birth,
        m1_0.field,
        m1_0.part,
        m1_0.phone_num,
        m1_0.picture,
        pd1_0.mentor_id,
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.startTime,
        u1_0.name,
        u1_0.phone,
        u1_0.picture,
        u1_0.role,
        u1_0.username 
    from
        User u1_0 
    join
        Mentor m1_0 
            on m1_0.mentor_id=u1_0.user_mentor 
    join
        PossibleDate pd1_0 
            on m1_0.mentor_id=pd1_0.mentor_id 
    where
        m1_0.mentor_id=?
2024-07-23 17:32:23 [Thread-1] [transactionId=] [threadId=] INFO  p6spy - #1721723543566 | took 0ms | statement | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select u1_0.user_id,u1_0.email,u1_0.user_mentee,m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture,pd1_0.mentor_id,pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.startTime,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=?
select u1_0.user_id,u1_0.email,u1_0.user_mentee,m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture,pd1_0.mentor_id,pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.startTime,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=1;
2024-07-23 17:32:23 [Thread-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.user_mentee,
        u1_0.user_mentor,
        u1_0.name,
        u1_0.phone,
        u1_0.picture,
        u1_0.role,
        u1_0.username 
    from
        User u1_0 
    where
        u1_0.username=?
2024-07-23 17:32:23 [Thread-1] [transactionId=] [threadId=] INFO  p6spy - #1721723543580 | took 0ms | statement | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username=?
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username='user0';
2024-07-23 17:32:23 [Thread-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    join
        Mentor m1_0 
            on m1_0.mentor_id=pd1_0.mentor_id 
    where
        m1_0.mentor_id=? 
        and pd1_0.startTime=? 
        and pd1_0.date=?
2024-07-23 17:32:23 [Thread-1] [transactionId=] [threadId=] INFO  p6spy - #1721723543593 | took 0ms | statement | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 join Mentor m1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=? and pd1_0.startTime=? and pd1_0.date=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 join Mentor m1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=1 and pd1_0.startTime='1970-01-01T10:00:00.000+0900' and pd1_0.date='2000-06-25T00:00:00.000+0900';
2024-07-23 17:32:23 [Thread-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    insert 
    into
        Application
        (date, endTime, mentor_id, startTime) 
    values
        (?, ?, ?, ?)
2024-07-23 17:32:23 [Thread-1] [transactionId=] [threadId=] INFO  p6spy - #1721723543597 | took 0ms | statement | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
insert into Application (date,endTime,mentor_id,startTime) values (?,?,?,?)
insert into Application (date,endTime,mentor_id,startTime) values ('2000-06-25T00:00:00.000+0900','1970-01-01T11:00:00.000+0900',1,'1970-01-01T10:00:00.000+0900');
2024-07-23 17:32:23 [Thread-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    update
        PossibleDate 
    set
        date=?,
        endTime=?,
        isActive=?,
        mentor_id=?,
        startTime=? 
    where
        possible_date_id=?
2024-07-23 17:32:23 [Thread-1] [transactionId=] [threadId=] INFO  p6spy - #1721723543603 | took 0ms | statement | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
update PossibleDate set date=?,endTime=?,isActive=?,mentor_id=?,startTime=? where possible_date_id=?
update PossibleDate set date='2000-06-25T00:00:00.000+0900',endTime='1970-01-01T11:00:00.000+0900',isActive=false,mentor_id=1,startTime='1970-01-01T10:00:00.000+0900' where possible_date_id=2003;
2024-07-23 17:32:23 [Thread-1] [transactionId=] [threadId=] INFO  p6spy - #1721723543603 | took 0ms | commit | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 17:32:23 [MailExecutor-1] [transactionId=] [threadId=] ERROR o.s.a.i.SimpleAsyncUncaughtExceptionHandler - Unexpected exception occurred invoking async method: public void com.soongsil.CoffeeChat.service.ApplicationService.sendApplicationMatchedEmailAsync(java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate,java.time.LocalTime,java.time.LocalTime) throws jakarta.mail.MessagingException
java.lang.NullPointerException: Cannot invoke "String.length()" because "s" is null
	at jakarta.mail.internet.InternetAddress.parse(InternetAddress.java:778)
	at jakarta.mail.internet.InternetAddress.parse(InternetAddress.java:737)
	at jakarta.mail.internet.InternetAddress.parse(InternetAddress.java:714)
	at jakarta.mail.internet.MimeMessage.addRecipients(MimeMessage.java:709)
	at com.soongsil.CoffeeChat.util.email.EmailUtil.sendMail(EmailUtil.java:25)
	at com.soongsil.CoffeeChat.util.email.EmailUtil.sendApplicationMatchedEmail(EmailUtil.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:713)
	at com.soongsil.CoffeeChat.util.email.EmailUtil$$SpringCGLIB$$0.sendApplicationMatchedEmail(<generated>)
	at com.soongsil.CoffeeChat.service.ApplicationService.sendApplicationMatchedEmailAsync(ApplicationService.java:114)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:113)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-07-23 17:32:23 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 17:32:23 [SpringApplicationShutdownHook] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@363d29dd] for TypeConfiguration
2024-07-23 17:32:23 [SpringApplicationShutdownHook] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@8d04110] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@363d29dd]
2024-07-23 17:32:23 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-23 17:32:23 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-23 17:34:14 [main] [transactionId=] [threadId=] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest]: ConcurrencyTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-07-23 17:34:14 [main] [transactionId=] [threadId=] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.soongsil.CoffeeChat.CoffeeChatApplication for test class com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest
2024-07-23 17:34:14 [main] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - Starting ConcurrencyTest using Java 17.0.11 with PID 10848 (started by kimkyohwee in /Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server)
2024-07-23 17:34:14 [main] [transactionId=] [threadId=] DEBUG c.s.C.Concurrency.ConcurrencyTest - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-07-23 17:34:14 [main] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - No active profile set, falling back to 1 default profile: "default"
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 74 ms. Found 6 JPA repository interfaces.
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@26865b57
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@26865b57
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@26865b57
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@46894dc5
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@46894dc5
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@596afb2f
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@596afb2f
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@79ba0285
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@79ba0285
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6df2a206
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6df2a206
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6df2a206
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@61993d18
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@61993d18
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@61993d18
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@3e39f08c
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@3e39f08c
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@16e07bae
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@598778cc
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@598778cc
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3386ed8
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@727453a3
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@67dc6b48
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@67dc6b48
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@67dc6b48
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@57f2e67
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@57f2e67
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@57f2e67
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4571cebe
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@4571cebe
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4571cebe
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@154864f8
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@154864f8
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@154864f8
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@11cadb32
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@11cadb32
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@11cadb32
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6d3ad37a
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6d3ad37a
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@26f5e45d
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@26f5e45d
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@704c3bdf
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@704c3bdf
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@704c3bdf
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@37986daf
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@c82d925
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@c82d925
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@55c03e4
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@14df5253
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@14df5253
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@14df5253
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@605eb072
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@7a0f06ad
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1fa9692b
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@710afd47
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@710afd47
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@64420e34
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@64420e34
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@667a467f
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@324e8baa
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@1488a861
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@604f376a
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5432dca2
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@12670e55
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@43fd77d8
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@43fd77d8
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@5a90fcaa
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@5a90fcaa
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1805ec96
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1805ec96
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@32ba5c65
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@32ba5c65
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@1ad1be5d
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@1ad1be5d
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@47797401
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@702f4124
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@10166230
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@10166230
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@7221539
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@b77b0a0
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@15be68b
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@22ff1372
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@22ff1372
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@356341c9
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3a70575
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@5d96d434
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5d96d434
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@7283877
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7283877
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@286a4c52
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@286a4c52
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@286a4c52
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@13dd7887
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@13dd7887
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@13dd7887
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@780129bc
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3e2c4d4b
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@44de8e00
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@44de8e00
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3cbfdf5c
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3cbfdf5c
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3cbfdf5c
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d825dbe
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@11180750
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@210635fd
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@210635fd
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@63814bbe
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@63814bbe
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@63814bbe
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@3cb195dd
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3cb195dd
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6dc2279c
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6dc2279c
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7d7b4e04
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7d7b4e04
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@144e36ae
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@144e36ae
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@24615687
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@24615687
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@58636b50
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7f4f1536
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@3041beb3
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3041beb3
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@376498da
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@39a8e2fa
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2f9addd4
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1c43df76
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@ff2266c
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@71b3ba5a
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@83ebdc5
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@a047bdb
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@14dbfdb1
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@46fa2a7e
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7178d811) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2e013ba1)
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2d8c729f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@740ee00f)
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@430106cf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@647af13d)
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2aac6fa7) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@29a1ec65)
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@625db0e0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@511d568f)
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1805ca5c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3e61cffd)
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3134b261) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@aa633e6)
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3cc74fc4) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@c697186)
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@185a7dd0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2358443e)
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2a504ea7
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@376498da`
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:34:15 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@391b01c5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6e78177b]
2024-07-23 17:34:16 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-23 17:34:16 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@391b01c5] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@25fc2b8f]
2024-07-23 17:34:16 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723656468 | took 1ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 17:34:16 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723656471 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:34:16 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723656481 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:34:16 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723656490 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:34:16 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723656500 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 17:34:16 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723656501 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:34:16 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@25fc2b8f] for TypeConfiguration
2024-07-23 17:34:16 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 17:34:17 [main] [transactionId=] [threadId=] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-23 17:34:17 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@521f2a23, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@228ed68c, org.springframework.security.web.context.SecurityContextHolderFilter@5cdf6bb1, org.springframework.security.web.header.HeaderWriterFilter@70d3b49c, org.springframework.web.filter.CorsFilter@30e3544d, com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter@522a9876, org.springframework.security.web.authentication.logout.LogoutFilter@77d5c4c6, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@66e74d3, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@c3fd72, com.soongsil.CoffeeChat.config.jwt.JWTFilter@794ffe22, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@654e793f, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@2da16d31, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@ceb4f91, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@52d04234, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@74a15f4, org.springframework.security.web.session.SessionManagementFilter@34e0d52e, org.springframework.security.web.access.ExceptionTranslationFilter@4c94621d, org.springframework.security.web.access.intercept.AuthorizationFilter@33742179]
2024-07-23 17:34:17 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Ant [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 17:34:17 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Ant [pattern='/v3/api-docs/**']
2024-07-23 17:34:17 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 17:34:17 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-ui/**']
2024-07-23 17:34:17 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Ant [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 17:34:17 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Ant [pattern='/swagger-resources/**']
2024-07-23 17:34:18 [main] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - Started ConcurrencyTest in 3.398 seconds (process running for 4.099)
2024-07-23 17:34:18 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        m1_0.mentor_id,
        m1_0.birth,
        m1_0.field,
        m1_0.part,
        m1_0.phone_num,
        m1_0.picture 
    from
        Mentor m1_0 
    where
        m1_0.mentor_id=?
2024-07-23 17:34:18 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723658379 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture from Mentor m1_0 where m1_0.mentor_id=?
select m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture from Mentor m1_0 where m1_0.mentor_id=1;
2024-07-23 17:34:18 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723658387 | took 0ms | commit | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 17:34:18 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    where
        pd1_0.possible_date_id=?
2024-07-23 17:34:18 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723658393 | took 0ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 where pd1_0.possible_date_id=2003;
2024-07-23 17:34:18 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    update
        PossibleDate 
    set
        date=?,
        endTime=?,
        isActive=?,
        mentor_id=?,
        startTime=? 
    where
        possible_date_id=?
2024-07-23 17:34:18 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723658406 | took 2ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
update PossibleDate set date=?,endTime=?,isActive=?,mentor_id=?,startTime=? where possible_date_id=?
update PossibleDate set date='2000-06-25T00:00:00.000+0900',endTime='1970-01-01T11:00:00.000+0900',isActive=true,mentor_id=1,startTime='1970-01-01T10:00:00.000+0900' where possible_date_id=2003;
2024-07-23 17:34:18 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723658408 | took 1ms | commit | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 17:34:18 [Thread-1] [transactionId=] [threadId=] INFO  p6spy - #1721723658602 | took 0ms | rollback | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 17:34:18 [Thread-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.user_mentee,
        m1_0.mentor_id,
        m1_0.birth,
        m1_0.field,
        m1_0.part,
        m1_0.phone_num,
        m1_0.picture,
        pd1_0.mentor_id,
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.startTime,
        u1_0.name,
        u1_0.phone,
        u1_0.picture,
        u1_0.role,
        u1_0.username 
    from
        User u1_0 
    join
        Mentor m1_0 
            on m1_0.mentor_id=u1_0.user_mentor 
    join
        PossibleDate pd1_0 
            on m1_0.mentor_id=pd1_0.mentor_id 
    where
        m1_0.mentor_id=?
2024-07-23 17:34:18 [Thread-2] [transactionId=] [threadId=] INFO  p6spy - #1721723658767 | took 1ms | statement | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select u1_0.user_id,u1_0.email,u1_0.user_mentee,m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture,pd1_0.mentor_id,pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.startTime,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=?
select u1_0.user_id,u1_0.email,u1_0.user_mentee,m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture,pd1_0.mentor_id,pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.startTime,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=1;
2024-07-23 17:34:18 [Thread-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.user_mentee,
        u1_0.user_mentor,
        u1_0.name,
        u1_0.phone,
        u1_0.picture,
        u1_0.role,
        u1_0.username 
    from
        User u1_0 
    where
        u1_0.username=?
2024-07-23 17:34:18 [Thread-2] [transactionId=] [threadId=] INFO  p6spy - #1721723658782 | took 0ms | statement | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username=?
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username='user0';
2024-07-23 17:34:18 [Thread-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    join
        Mentor m1_0 
            on m1_0.mentor_id=pd1_0.mentor_id 
    where
        m1_0.mentor_id=? 
        and pd1_0.startTime=? 
        and pd1_0.date=?
2024-07-23 17:34:18 [Thread-2] [transactionId=] [threadId=] INFO  p6spy - #1721723658797 | took 0ms | statement | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 join Mentor m1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=? and pd1_0.startTime=? and pd1_0.date=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 join Mentor m1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=1 and pd1_0.startTime='1970-01-01T10:00:00.000+0900' and pd1_0.date='2000-06-25T00:00:00.000+0900';
2024-07-23 17:34:18 [Thread-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    insert 
    into
        Application
        (date, endTime, mentor_id, startTime) 
    values
        (?, ?, ?, ?)
2024-07-23 17:34:18 [Thread-2] [transactionId=] [threadId=] INFO  p6spy - #1721723658802 | took 0ms | statement | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
insert into Application (date,endTime,mentor_id,startTime) values (?,?,?,?)
insert into Application (date,endTime,mentor_id,startTime) values ('2000-06-25T00:00:00.000+0900','1970-01-01T11:00:00.000+0900',1,'1970-01-01T10:00:00.000+0900');
2024-07-23 17:34:18 [Thread-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    update
        PossibleDate 
    set
        date=?,
        endTime=?,
        isActive=?,
        mentor_id=?,
        startTime=? 
    where
        possible_date_id=?
2024-07-23 17:34:18 [Thread-2] [transactionId=] [threadId=] INFO  p6spy - #1721723658810 | took 0ms | statement | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
update PossibleDate set date=?,endTime=?,isActive=?,mentor_id=?,startTime=? where possible_date_id=?
update PossibleDate set date='2000-06-25T00:00:00.000+0900',endTime='1970-01-01T11:00:00.000+0900',isActive=false,mentor_id=1,startTime='1970-01-01T10:00:00.000+0900' where possible_date_id=2003;
2024-07-23 17:34:18 [Thread-2] [transactionId=] [threadId=] INFO  p6spy - #1721723658811 | took 0ms | commit | connection 5| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 17:34:18 [MailExecutor-1] [transactionId=] [threadId=] ERROR o.s.a.i.SimpleAsyncUncaughtExceptionHandler - Unexpected exception occurred invoking async method: public void com.soongsil.CoffeeChat.service.ApplicationService.sendApplicationMatchedEmailAsync(java.lang.String,java.lang.String,java.lang.String,java.time.LocalDate,java.time.LocalTime,java.time.LocalTime) throws jakarta.mail.MessagingException
java.lang.NullPointerException: Cannot invoke "String.length()" because "s" is null
	at jakarta.mail.internet.InternetAddress.parse(InternetAddress.java:778)
	at jakarta.mail.internet.InternetAddress.parse(InternetAddress.java:737)
	at jakarta.mail.internet.InternetAddress.parse(InternetAddress.java:714)
	at jakarta.mail.internet.MimeMessage.addRecipients(MimeMessage.java:709)
	at com.soongsil.CoffeeChat.util.email.EmailUtil.sendMail(EmailUtil.java:25)
	at com.soongsil.CoffeeChat.util.email.EmailUtil.sendApplicationMatchedEmail(EmailUtil.java:43)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:713)
	at com.soongsil.CoffeeChat.util.email.EmailUtil$$SpringCGLIB$$0.sendApplicationMatchedEmail(<generated>)
	at com.soongsil.CoffeeChat.service.ApplicationService.sendApplicationMatchedEmailAsync(ApplicationService.java:114)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:113)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-07-23 17:34:18 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 17:34:18 [SpringApplicationShutdownHook] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@25fc2b8f] for TypeConfiguration
2024-07-23 17:34:18 [SpringApplicationShutdownHook] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@621f3e26] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@25fc2b8f]
2024-07-23 17:34:18 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-23 17:34:18 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-23 17:34:54 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Starting CoffeeChatApplication using Java 17.0.11 with PID 10855 (/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes started by kimkyohwee in /Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server)
2024-07-23 17:34:54 [main] [transactionId=] [threadId=] DEBUG c.s.CoffeeChat.CoffeeChatApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-07-23 17:34:54 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-23 17:34:54 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 17:34:54 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-23 17:34:54 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 72 ms. Found 6 JPA repository interfaces.
2024-07-23 17:34:54 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 17:34:54 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-23 17:34:54 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:34:54 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:34:54 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:34:54 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:34:54 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:34:54 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:34:54 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-07-23 17:34:54 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-23 17:34:54 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-23 17:34:54 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-23 17:34:54 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 743 ms
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@225e09f0
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@225e09f0
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@225e09f0
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@bc8d68b
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@bc8d68b
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2fa212df
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2fa212df
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3cf8a235
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3cf8a235
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6e3b2dd3
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6e3b2dd3
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6e3b2dd3
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@238ad211
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@238ad211
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@238ad211
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@5273143e
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@5273143e
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@279c4e3b
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@334b392d
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@334b392d
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@59f7c106
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@136fece2
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@56478522
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@56478522
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@56478522
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@3caf5c96
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@3caf5c96
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3caf5c96
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5b3755f4
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5b3755f4
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5b3755f4
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@37d3aa8c
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@37d3aa8c
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@37d3aa8c
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@5dd747c1
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@5dd747c1
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5dd747c1
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1bdafb01
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1bdafb01
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7aa3857b
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7aa3857b
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@500ec769
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@500ec769
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@500ec769
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@37806be6
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@7bce9ce4
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7bce9ce4
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1d2046bb
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3b33fff9
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3b33fff9
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3b33fff9
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@fd87c22
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@fee881
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1ff463bb
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@3b9c9b8b
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@3b9c9b8b
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7769d9b6
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7769d9b6
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@248d3a
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3c71cf3e
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@636e4bf8
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@5af38a4a
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7e1a9173
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@4ca0b9b1
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5d800a56
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5d800a56
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1be77a76
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1be77a76
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@315cf170
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@315cf170
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@7878bbdb
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@7878bbdb
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@25f7cc38
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@25f7cc38
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@563263a
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@53e28097
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6e794f53
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6e794f53
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@75f4d8a8
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@69ba72da
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2e1ba142
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@abc7005
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@abc7005
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@595ec862
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@63c84d31
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@102af1bb
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@102af1bb
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@797f97e3
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@797f97e3
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@56cd5d76
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@56cd5d76
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@56cd5d76
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@77cd235b
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@77cd235b
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@77cd235b
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@302da330
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3568ea59
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@9f2376f
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@9f2376f
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@173b1af1
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@173b1af1
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@173b1af1
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4a520f05
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@389a1e34
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@204b0f07
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@204b0f07
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6f68756d
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6f68756d
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6f68756d
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@359865a2
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@359865a2
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5d9bb69b
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5d9bb69b
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@25d0b918
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@25d0b918
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@97b5e6a
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@97b5e6a
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7d8f2eec
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@e886caf
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@1d585fb
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1884e671
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@1c7843c3
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5158a9f7
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7c8f047a
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4387d2f4
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1dbff71c
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5d22ed6c
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@77b22b05) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4fef5792)
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@57ed02e6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@39004e4f)
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5f0ca069) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6a6a2fdd)
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@552ffa44) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6e66b498)
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@54d35ed5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6f7c9755)
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45abbd24) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1e32037d)
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5059d398) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5b1420f9)
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@434ee422) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4de93edd)
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@53b2e1eb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@29db008c)
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@61becbcf
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@7d8f2eec`
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@af04f09] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@758d4aa9]
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@af04f09] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@72155315]
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723695799 | took 1ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723695801 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723695812 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723695820 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723695827 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723695828 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@72155315] for TypeConfiguration
2024-07-23 17:34:55 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 17:34:56 [main] [transactionId=] [threadId=] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-23 17:34:56 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7152ee36, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@21dc1d99, org.springframework.security.web.context.SecurityContextHolderFilter@79228440, org.springframework.security.web.header.HeaderWriterFilter@4ca3e806, org.springframework.web.filter.CorsFilter@7bfa2d74, com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter@467924d8, org.springframework.security.web.authentication.logout.LogoutFilter@71d94ab, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@1a9ce44, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@39a6c7a6, com.soongsil.CoffeeChat.config.jwt.JWTFilter@20bc417f, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@c3fd72, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@614da024, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1ff359b7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5bbda8aa, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4b76a0f4, org.springframework.security.web.session.SessionManagementFilter@38691f8d, org.springframework.security.web.access.ExceptionTranslationFilter@66e74d3, org.springframework.security.web.access.intercept.AuthorizationFilter@1fb8b89e]
2024-07-23 17:34:56 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 17:34:56 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/v3/api-docs/**']
2024-07-23 17:34:56 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 17:34:56 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-ui/**']
2024-07-23 17:34:56 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 17:34:56 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-resources/**']
2024-07-23 17:34:56 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-07-23 17:34:56 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2024-07-23 17:34:56 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Started CoffeeChatApplication in 2.894 seconds (process running for 3.312)
2024-07-23 17:35:05 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-23 17:35:05 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-23 17:35:05 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-07-23 17:35:05 [http-nio-8080-exec-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        r1_0.id 
    from
        Refresh r1_0 
    where
        r1_0.refresh=? 
    limit
        ?
2024-07-23 17:35:05 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721723705512 | took 1ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select r1_0.id from Refresh r1_0 where r1_0.refresh=? limit ?
select r1_0.id from Refresh r1_0 where r1_0.refresh='eyJhbGciOiJIUzI1NiJ9.eyJjYXRlZ29yeSI6InJlZnJlc2giLCJ1c2VybmFtZSI6Imdvb2dsZSAxMTQ5NjIxNjE1NjkwMDU5NDc2NjgiLCJyb2xlIjoiUk9MRV9NRU5URUUiLCJpYXQiOjE3MjE3MjAwOTYsImV4cCI6MTcyMTgwNjQ5Nn0.kEAooV0PEJaEvDTbcTnEEyKOUN4BO77xrcx3EYfSXF8' limit 1;
2024-07-23 17:35:05 [http-nio-8080-exec-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.expiration,
        r1_0.refresh,
        r1_0.username 
    from
        Refresh r1_0 
    where
        r1_0.refresh=?
2024-07-23 17:35:05 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721723705535 | took 1ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select r1_0.id,r1_0.expiration,r1_0.refresh,r1_0.username from Refresh r1_0 where r1_0.refresh=?
select r1_0.id,r1_0.expiration,r1_0.refresh,r1_0.username from Refresh r1_0 where r1_0.refresh='eyJhbGciOiJIUzI1NiJ9.eyJjYXRlZ29yeSI6InJlZnJlc2giLCJ1c2VybmFtZSI6Imdvb2dsZSAxMTQ5NjIxNjE1NjkwMDU5NDc2NjgiLCJyb2xlIjoiUk9MRV9NRU5URUUiLCJpYXQiOjE3MjE3MjAwOTYsImV4cCI6MTcyMTgwNjQ5Nn0.kEAooV0PEJaEvDTbcTnEEyKOUN4BO77xrcx3EYfSXF8';
2024-07-23 17:35:05 [http-nio-8080-exec-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    delete 
    from
        Refresh 
    where
        id=?
2024-07-23 17:35:05 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721723705546 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
delete from Refresh where id=?
delete from Refresh where id=173;
2024-07-23 17:35:05 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721723705547 | took 1ms | commit | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 17:35:05 [http-nio-8080-exec-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    insert 
    into
        Refresh
        (expiration, refresh, username) 
    values
        (?, ?, ?)
2024-07-23 17:35:05 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721723705552 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
insert into Refresh (expiration,refresh,username) values (?,?,?)
insert into Refresh (expiration,refresh,username) values ('Wed Jul 24 17:35:05 KST 2024','eyJhbGciOiJIUzI1NiJ9.eyJjYXRlZ29yeSI6InJlZnJlc2giLCJ1c2VybmFtZSI6Imdvb2dsZSAxMTQ5NjIxNjE1NjkwMDU5NDc2NjgiLCJyb2xlIjoiUk9MRV9NRU5URUUiLCJpYXQiOjE3MjE3MjM3MDUsImV4cCI6MTcyMTgxMDEwNX0.YeXdygGIPwanmFerQ_KifQAQnOQ_xxWvseLGvYm3D6A','google 114962161569005947668');
2024-07-23 17:35:05 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721723705556 | took 0ms | commit | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 17:35:34 [http-nio-8080-exec-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        pd1_0.date,
        pd1_0.startTime,
        pd1_0.endTime,
        pd1_0.possible_date_id 
    from
        User u1_0 
    join
        Mentor m1_0 
            on m1_0.mentor_id=u1_0.user_mentor 
    join
        PossibleDate pd1_0 
            on m1_0.mentor_id=pd1_0.mentor_id 
    where
        u1_0.username=? 
        and pd1_0.isActive=?
2024-07-23 17:35:34 [http-nio-8080-exec-2] [transactionId=] [threadId=] INFO  p6spy - #1721723734859 | took 1ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.date,pd1_0.startTime,pd1_0.endTime,pd1_0.possible_date_id from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where u1_0.username=? and pd1_0.isActive=?
select pd1_0.date,pd1_0.startTime,pd1_0.endTime,pd1_0.possible_date_id from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where u1_0.username='user0' and pd1_0.isActive=true;
2024-07-23 17:38:15 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 17:38:15 [SpringApplicationShutdownHook] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@72155315] for TypeConfiguration
2024-07-23 17:38:15 [SpringApplicationShutdownHook] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@75bcd77f] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@72155315]
2024-07-23 17:38:15 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-23 17:38:15 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-23 17:38:17 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Starting CoffeeChatApplication using Java 17.0.11 with PID 10883 (/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes started by kimkyohwee in /Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server)
2024-07-23 17:38:17 [main] [transactionId=] [threadId=] DEBUG c.s.CoffeeChat.CoffeeChatApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-07-23 17:38:17 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 69 ms. Found 6 JPA repository interfaces.
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 720 ms
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@238ad211
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@238ad211
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@238ad211
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1c011855
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1c011855
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6591f8ea
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6591f8ea
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@5273143e
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@5273143e
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@279c4e3b
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@279c4e3b
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@279c4e3b
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@334b392d
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@334b392d
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@334b392d
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@56478522
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@56478522
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@3caf5c96
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@5b3755f4
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5b3755f4
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@37d3aa8c
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@5dd747c1
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1bdafb01
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1bdafb01
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1bdafb01
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@7aa3857b
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@7aa3857b
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7aa3857b
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@500ec769
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@500ec769
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@500ec769
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@37806be6
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@37806be6
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@37806be6
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7bce9ce4
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7bce9ce4
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7bce9ce4
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1d2046bb
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1d2046bb
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@3b33fff9
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@3b33fff9
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@fd87c22
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@fd87c22
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@fd87c22
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@fee881
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1ff463bb
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1ff463bb
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3b9c9b8b
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7769d9b6
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7769d9b6
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7769d9b6
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@248d3a
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3c71cf3e
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@636e4bf8
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5af38a4a
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5af38a4a
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7e1a9173
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7e1a9173
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4ca0b9b1
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@5d800a56
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@1be77a76
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@315cf170
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@7878bbdb
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@25f7cc38
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@563263a
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@563263a
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@53e28097
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@53e28097
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6e794f53
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6e794f53
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@75f4d8a8
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@75f4d8a8
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@69ba72da
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@69ba72da
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2e1ba142
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@abc7005
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@595ec862
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@595ec862
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@63c84d31
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@102af1bb
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@797f97e3
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@56cd5d76
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@56cd5d76
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@77cd235b
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@302da330
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@3568ea59
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3568ea59
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@9f2376f
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@9f2376f
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@173b1af1
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@173b1af1
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@173b1af1
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4a520f05
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4a520f05
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4a520f05
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@389a1e34
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@204b0f07
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@6f68756d
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@6f68756d
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@359865a2
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@359865a2
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@359865a2
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5d9bb69b
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@25d0b918
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2d38db6f
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2d38db6f
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@37cf91d8
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@37cf91d8
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@571d0925
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@571d0925
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@2df71be0
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2df71be0
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@5158a9f7
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@7c8f047a
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4387d2f4
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1dbff71c
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@93ce24d
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@d949bc4
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7079f8f0
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@121cf6f4
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7cdc4070
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7614378d
2024-07-23 17:38:18 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6a6a2fdd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@552ffa44)
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6e66b498) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@54d35ed5)
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6f7c9755) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45abbd24)
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1e32037d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5059d398)
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5b1420f9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@434ee422)
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4de93edd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@53b2e1eb)
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@29db008c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1d008e61)
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@191b44ca) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5de243bb)
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2c4cf7eb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@35260785)
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@726ef6aa
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@5158a9f7`
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@67d180e4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@54e18a46]
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@67d180e4] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2e9f5499]
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723899462 | took 1ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723899464 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723899472 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723899480 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723899487 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723899488 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2e9f5499] for TypeConfiguration
2024-07-23 17:38:19 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 17:38:20 [main] [transactionId=] [threadId=] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-23 17:38:20 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@614da024, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4b76a0f4, org.springframework.security.web.context.SecurityContextHolderFilter@46933c4, org.springframework.security.web.header.HeaderWriterFilter@79228440, org.springframework.web.filter.CorsFilter@442612a6, com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter@65314e4, org.springframework.security.web.authentication.logout.LogoutFilter@eb9b76c, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@2290186e, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@1cd97ebe, com.soongsil.CoffeeChat.config.jwt.JWTFilter@a93c88a, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@11f415e4, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@741cb82c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@379cfc77, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@c3fd72, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@db372b, org.springframework.security.web.session.SessionManagementFilter@1ff359b7, org.springframework.security.web.access.ExceptionTranslationFilter@463a0302, org.springframework.security.web.access.intercept.AuthorizationFilter@467924d8]
2024-07-23 17:38:20 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 17:38:20 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/v3/api-docs/**']
2024-07-23 17:38:20 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 17:38:20 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-ui/**']
2024-07-23 17:38:20 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 17:38:20 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-resources/**']
2024-07-23 17:38:20 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-07-23 17:38:20 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2024-07-23 17:38:20 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Started CoffeeChatApplication in 2.891 seconds (process running for 3.217)
2024-07-23 17:38:24 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-23 17:38:24 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-23 17:38:24 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-07-23 17:38:28 [http-nio-8080-exec-3] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        r1_0.id 
    from
        Refresh r1_0 
    where
        r1_0.refresh=? 
    limit
        ?
2024-07-23 17:38:28 [http-nio-8080-exec-3] [transactionId=] [threadId=] INFO  p6spy - #1721723908825 | took 1ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select r1_0.id from Refresh r1_0 where r1_0.refresh=? limit ?
select r1_0.id from Refresh r1_0 where r1_0.refresh='eyJhbGciOiJIUzI1NiJ9.eyJjYXRlZ29yeSI6InJlZnJlc2giLCJ1c2VybmFtZSI6Imdvb2dsZSAxMTQ5NjIxNjE1NjkwMDU5NDc2NjgiLCJyb2xlIjoiUk9MRV9NRU5URUUiLCJpYXQiOjE3MjE3MjM3MDUsImV4cCI6MTcyMTgxMDEwNX0.YeXdygGIPwanmFerQ_KifQAQnOQ_xxWvseLGvYm3D6A' limit 1;
2024-07-23 17:38:28 [http-nio-8080-exec-3] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.expiration,
        r1_0.refresh,
        r1_0.username 
    from
        Refresh r1_0 
    where
        r1_0.refresh=?
2024-07-23 17:38:28 [http-nio-8080-exec-3] [transactionId=] [threadId=] INFO  p6spy - #1721723908847 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select r1_0.id,r1_0.expiration,r1_0.refresh,r1_0.username from Refresh r1_0 where r1_0.refresh=?
select r1_0.id,r1_0.expiration,r1_0.refresh,r1_0.username from Refresh r1_0 where r1_0.refresh='eyJhbGciOiJIUzI1NiJ9.eyJjYXRlZ29yeSI6InJlZnJlc2giLCJ1c2VybmFtZSI6Imdvb2dsZSAxMTQ5NjIxNjE1NjkwMDU5NDc2NjgiLCJyb2xlIjoiUk9MRV9NRU5URUUiLCJpYXQiOjE3MjE3MjM3MDUsImV4cCI6MTcyMTgxMDEwNX0.YeXdygGIPwanmFerQ_KifQAQnOQ_xxWvseLGvYm3D6A';
2024-07-23 17:38:28 [http-nio-8080-exec-3] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    delete 
    from
        Refresh 
    where
        id=?
2024-07-23 17:38:28 [http-nio-8080-exec-3] [transactionId=] [threadId=] INFO  p6spy - #1721723908858 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
delete from Refresh where id=?
delete from Refresh where id=174;
2024-07-23 17:38:28 [http-nio-8080-exec-3] [transactionId=] [threadId=] INFO  p6spy - #1721723908859 | took 0ms | commit | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 17:38:28 [http-nio-8080-exec-3] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    insert 
    into
        Refresh
        (expiration, refresh, username) 
    values
        (?, ?, ?)
2024-07-23 17:38:28 [http-nio-8080-exec-3] [transactionId=] [threadId=] INFO  p6spy - #1721723908864 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
insert into Refresh (expiration,refresh,username) values (?,?,?)
insert into Refresh (expiration,refresh,username) values ('Wed Jul 24 17:38:28 KST 2024','eyJhbGciOiJIUzI1NiJ9.eyJjYXRlZ29yeSI6InJlZnJlc2giLCJ1c2VybmFtZSI6Imdvb2dsZSAxMTQ5NjIxNjE1NjkwMDU5NDc2NjgiLCJyb2xlIjoiUk9MRV9NRU5URUUiLCJpYXQiOjE3MjE3MjM5MDgsImV4cCI6MTcyMTgxMDMwOH0.b7Hw6ZOC2-kBAPDO3dMzsRkVexyi0iOAGUgxpi_OJjA','google 114962161569005947668');
2024-07-23 17:38:28 [http-nio-8080-exec-3] [transactionId=] [threadId=] INFO  p6spy - #1721723908868 | took 0ms | commit | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 17:39:34 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 17:39:34 [SpringApplicationShutdownHook] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2e9f5499] for TypeConfiguration
2024-07-23 17:39:34 [SpringApplicationShutdownHook] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4f60161] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2e9f5499]
2024-07-23 17:39:34 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-23 17:39:34 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-23 17:39:36 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Starting CoffeeChatApplication using Java 17.0.11 with PID 10896 (/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes started by kimkyohwee in /Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server)
2024-07-23 17:39:36 [main] [transactionId=] [threadId=] DEBUG c.s.CoffeeChat.CoffeeChatApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-07-23 17:39:36 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-23 17:39:36 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 17:39:36 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-23 17:39:36 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 68 ms. Found 6 JPA repository interfaces.
2024-07-23 17:39:36 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 17:39:36 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-23 17:39:36 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:39:36 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:39:36 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:39:36 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:39:36 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:39:36 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:39:36 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-07-23 17:39:36 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-23 17:39:36 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-23 17:39:36 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-23 17:39:36 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-07-23 17:39:36 [main] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-23 17:39:36 [main] [transactionId=] [threadId=] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 712 ms
2024-07-23 17:39:36 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-23 17:39:36 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-07-23 17:39:36 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5273143e
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5273143e
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5273143e
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@279c4e3b
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@279c4e3b
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@334b392d
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@334b392d
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@59f7c106
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@59f7c106
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@136fece2
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@136fece2
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@136fece2
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@56478522
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@56478522
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@56478522
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@37d3aa8c
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@37d3aa8c
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@5dd747c1
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@1bdafb01
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1bdafb01
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7aa3857b
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@500ec769
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@37806be6
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@37806be6
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@37806be6
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@7bce9ce4
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@7bce9ce4
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7bce9ce4
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1d2046bb
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@1d2046bb
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1d2046bb
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3b33fff9
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3b33fff9
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3b33fff9
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@fd87c22
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@fd87c22
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@fd87c22
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@fee881
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@fee881
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1ff463bb
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1ff463bb
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@3b9c9b8b
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@3b9c9b8b
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3b9c9b8b
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7769d9b6
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@248d3a
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@248d3a
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3c71cf3e
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@636e4bf8
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@636e4bf8
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@636e4bf8
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5af38a4a
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@7e1a9173
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4ca0b9b1
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5d800a56
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5d800a56
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1be77a76
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1be77a76
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@315cf170
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7878bbdb
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@25f7cc38
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@563263a
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@53e28097
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6e794f53
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@75f4d8a8
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@75f4d8a8
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@69ba72da
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@69ba72da
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2e1ba142
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2e1ba142
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@abc7005
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@abc7005
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@595ec862
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@595ec862
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@63c84d31
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@102af1bb
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@797f97e3
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@797f97e3
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@56cd5d76
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@77cd235b
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@302da330
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3568ea59
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3568ea59
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@9f2376f
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@173b1af1
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@4a520f05
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4a520f05
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@389a1e34
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@389a1e34
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@204b0f07
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@204b0f07
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@204b0f07
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6f68756d
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6f68756d
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6f68756d
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@359865a2
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5d9bb69b
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@25d0b918
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@25d0b918
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@2d38db6f
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@2d38db6f
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@2d38db6f
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@37cf91d8
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@37cf91d8
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@571d0925
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@571d0925
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@18811c42
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@4fee14b
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4fee14b
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1dbff71c
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@93ce24d
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@d949bc4
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7079f8f0
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@121cf6f4
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7cdc4070
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@553fbe94
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6abe62bb
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1f60824e
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@24c84e65
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@54d35ed5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6f7c9755)
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45abbd24) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1e32037d)
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5059d398) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5b1420f9)
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@434ee422) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4de93edd)
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@53b2e1eb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@29db008c)
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1d008e61) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@191b44ca)
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5de243bb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2c4cf7eb)
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@35260785) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@76d828ff)
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@39685204) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@72d0196d)
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@4cb82b09
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1dbff71c`
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@58e5fbe5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@335896bd]
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@58e5fbe5] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@43e9a8a2]
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723977641 | took 1ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723977647 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723977659 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723977669 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723977677 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] INFO  p6spy - #1721723977678 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@43e9a8a2] for TypeConfiguration
2024-07-23 17:39:37 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 17:39:38 [main] [transactionId=] [threadId=] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-23 17:39:38 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@a93c88a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@741cb82c, org.springframework.security.web.context.SecurityContextHolderFilter@4d7909bd, org.springframework.security.web.header.HeaderWriterFilter@36d02719, org.springframework.web.filter.CorsFilter@db372b, com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter@1e31e7e0, org.springframework.security.web.authentication.logout.LogoutFilter@4476ac12, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@2400673b, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@1fb8b89e, com.soongsil.CoffeeChat.config.jwt.JWTFilter@a72bb34, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@33742179, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@1bbebf8e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@b729651, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@14c5d220, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4285b1bd, org.springframework.security.web.session.SessionManagementFilter@1d2ec1f, org.springframework.security.web.access.ExceptionTranslationFilter@1ff359b7, org.springframework.security.web.access.intercept.AuthorizationFilter@442612a6]
2024-07-23 17:39:38 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 17:39:38 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/v3/api-docs/**']
2024-07-23 17:39:38 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 17:39:38 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-ui/**']
2024-07-23 17:39:38 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 17:39:38 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-resources/**']
2024-07-23 17:39:38 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-07-23 17:39:38 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2024-07-23 17:39:38 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Started CoffeeChatApplication in 2.895 seconds (process running for 3.192)
2024-07-23 17:39:42 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-23 17:39:42 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-23 17:39:42 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-07-23 17:39:42 [http-nio-8080-exec-1] [transactionId=] [threadId=] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class com.soongsil.CoffeeChat.dto.ApplicationCreateRequest]] with root cause
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: Cannot construct instance of `com.soongsil.CoffeeChat.dto.ApplicationCreateRequest` (no Creators, like default constructor, exist): cannot deserialize from Object value (no delegate- or property-based Creator)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 2, column: 1]
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadDefinition(DeserializationContext.java:1915)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1360)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1424)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:352)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:2105)
	at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1481)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:395)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:354)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:184)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:159)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:134)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:225)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter.doFilterInternal(DefaultLogoutPageGeneratingFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:189)
	at org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter.doFilter(DefaultLoginPageGeneratingFilter.java:175)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.soongsil.CoffeeChat.config.jwt.JWTFilter.doFilterInternal(JWTFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter.doFilterInternal(OAuth2AuthorizationRequestRedirectFilter.java:181)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter.doFilter(CustomLogoutFilter.java:43)
	at com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter.doFilter(CustomLogoutFilter.java:32)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:840)
2024-07-23 17:40:42 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 17:40:42 [SpringApplicationShutdownHook] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@43e9a8a2] for TypeConfiguration
2024-07-23 17:40:42 [SpringApplicationShutdownHook] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@17c8168] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@43e9a8a2]
2024-07-23 17:40:42 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-23 17:40:42 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-23 17:40:43 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Starting CoffeeChatApplication using Java 17.0.11 with PID 10925 (/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes started by kimkyohwee in /Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server)
2024-07-23 17:40:43 [main] [transactionId=] [threadId=] DEBUG c.s.CoffeeChat.CoffeeChatApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-07-23 17:40:43 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 71 ms. Found 6 JPA repository interfaces.
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 757 ms
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5b3755f4
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5b3755f4
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5b3755f4
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@37d3aa8c
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@37d3aa8c
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5dd747c1
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5dd747c1
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1bdafb01
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1bdafb01
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7aa3857b
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7aa3857b
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7aa3857b
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@500ec769
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@500ec769
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@500ec769
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1d2046bb
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1d2046bb
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@3b33fff9
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@fd87c22
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@fd87c22
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@fee881
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1ff463bb
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3b9c9b8b
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3b9c9b8b
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3b9c9b8b
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@7769d9b6
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@7769d9b6
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7769d9b6
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@248d3a
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@248d3a
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@248d3a
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3c71cf3e
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3c71cf3e
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3c71cf3e
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@636e4bf8
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@636e4bf8
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@636e4bf8
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5af38a4a
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5af38a4a
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7e1a9173
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7e1a9173
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@4ca0b9b1
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@4ca0b9b1
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4ca0b9b1
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5d800a56
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1be77a76
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1be77a76
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@315cf170
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7878bbdb
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7878bbdb
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7878bbdb
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@25f7cc38
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@563263a
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@53e28097
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@6e794f53
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6e794f53
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@75f4d8a8
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@75f4d8a8
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@69ba72da
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2e1ba142
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@abc7005
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@595ec862
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@63c84d31
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@102af1bb
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@797f97e3
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@797f97e3
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@56cd5d76
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@56cd5d76
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@77cd235b
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@77cd235b
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@302da330
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@302da330
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3568ea59
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3568ea59
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@9f2376f
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@173b1af1
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4a520f05
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4a520f05
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@389a1e34
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@204b0f07
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6f68756d
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@359865a2
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@359865a2
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5d9bb69b
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@25d0b918
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2d38db6f
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@37cf91d8
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@571d0925
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@571d0925
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@18811c42
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@18811c42
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@18811c42
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@627acb38
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@627acb38
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@32b95de
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@32b95de
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@629cbb1
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@629cbb1
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@165aa43a
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@165aa43a
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@7d977a20
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@35ab4260
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@1c7843c3
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1c7843c3
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6abe62bb
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1f60824e
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@1218e12
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@29c25bbc
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@30704f85
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2b99c937
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@26c59348
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1de12397
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2f5f5bc9
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-23 17:40:44 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@642c5bb3
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4de93edd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@53b2e1eb)
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@29db008c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1d008e61)
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@191b44ca) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5de243bb)
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2c4cf7eb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@35260785)
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@76d828ff) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39685204)
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@72d0196d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@77cf329d)
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4067634b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b64f131)
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@490d9c41) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@47d81427)
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3c5e4aac) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@20afd96f)
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2a0c244e
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@6abe62bb`
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2b6ee447] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@9cb927e]
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2b6ee447] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@48e3017a]
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] INFO  p6spy - #1721724045555 | took 1ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] INFO  p6spy - #1721724045558 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] INFO  p6spy - #1721724045569 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] INFO  p6spy - #1721724045577 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] INFO  p6spy - #1721724045584 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] INFO  p6spy - #1721724045585 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@48e3017a] for TypeConfiguration
2024-07-23 17:40:45 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 17:40:46 [main] [transactionId=] [threadId=] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-23 17:40:46 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@539a50ea, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4caeeab6, org.springframework.security.web.context.SecurityContextHolderFilter@21e5feb, org.springframework.security.web.header.HeaderWriterFilter@b729651, org.springframework.web.filter.CorsFilter@22027e62, com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter@4d652bc6, org.springframework.security.web.authentication.logout.LogoutFilter@22e733f5, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@418f5f63, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@614da024, com.soongsil.CoffeeChat.config.jwt.JWTFilter@4cf93f80, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@2da16d31, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@77b987f3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6ca1c156, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@521f2a23, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@46791608, org.springframework.security.web.session.SessionManagementFilter@11f415e4, org.springframework.security.web.access.ExceptionTranslationFilter@4d7909bd, org.springframework.security.web.access.intercept.AuthorizationFilter@1bbebf8e]
2024-07-23 17:40:46 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 17:40:46 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/v3/api-docs/**']
2024-07-23 17:40:46 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 17:40:46 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-ui/**']
2024-07-23 17:40:46 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 17:40:46 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-resources/**']
2024-07-23 17:40:46 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-07-23 17:40:46 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2024-07-23 17:40:46 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Started CoffeeChatApplication in 3.105 seconds (process running for 3.416)
2024-07-23 17:40:52 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-23 17:40:52 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-23 17:40:52 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-07-23 17:40:52 [http-nio-8080-exec-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        r1_0.id 
    from
        Refresh r1_0 
    where
        r1_0.refresh=? 
    limit
        ?
2024-07-23 17:40:52 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721724052698 | took 1ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select r1_0.id from Refresh r1_0 where r1_0.refresh=? limit ?
select r1_0.id from Refresh r1_0 where r1_0.refresh='eyJhbGciOiJIUzI1NiJ9.eyJjYXRlZ29yeSI6InJlZnJlc2giLCJ1c2VybmFtZSI6Imdvb2dsZSAxMTQ5NjIxNjE1NjkwMDU5NDc2NjgiLCJyb2xlIjoiUk9MRV9NRU5URUUiLCJpYXQiOjE3MjE3MjM5MDgsImV4cCI6MTcyMTgxMDMwOH0.b7Hw6ZOC2-kBAPDO3dMzsRkVexyi0iOAGUgxpi_OJjA' limit 1;
2024-07-23 17:40:52 [http-nio-8080-exec-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.expiration,
        r1_0.refresh,
        r1_0.username 
    from
        Refresh r1_0 
    where
        r1_0.refresh=?
2024-07-23 17:40:52 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721724052723 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select r1_0.id,r1_0.expiration,r1_0.refresh,r1_0.username from Refresh r1_0 where r1_0.refresh=?
select r1_0.id,r1_0.expiration,r1_0.refresh,r1_0.username from Refresh r1_0 where r1_0.refresh='eyJhbGciOiJIUzI1NiJ9.eyJjYXRlZ29yeSI6InJlZnJlc2giLCJ1c2VybmFtZSI6Imdvb2dsZSAxMTQ5NjIxNjE1NjkwMDU5NDc2NjgiLCJyb2xlIjoiUk9MRV9NRU5URUUiLCJpYXQiOjE3MjE3MjM5MDgsImV4cCI6MTcyMTgxMDMwOH0.b7Hw6ZOC2-kBAPDO3dMzsRkVexyi0iOAGUgxpi_OJjA';
2024-07-23 17:40:52 [http-nio-8080-exec-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    delete 
    from
        Refresh 
    where
        id=?
2024-07-23 17:40:52 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721724052735 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
delete from Refresh where id=?
delete from Refresh where id=175;
2024-07-23 17:40:52 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721724052736 | took 0ms | commit | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 17:40:52 [http-nio-8080-exec-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    insert 
    into
        Refresh
        (expiration, refresh, username) 
    values
        (?, ?, ?)
2024-07-23 17:40:52 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721724052741 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
insert into Refresh (expiration,refresh,username) values (?,?,?)
insert into Refresh (expiration,refresh,username) values ('Wed Jul 24 17:40:52 KST 2024','eyJhbGciOiJIUzI1NiJ9.eyJjYXRlZ29yeSI6InJlZnJlc2giLCJ1c2VybmFtZSI6Imdvb2dsZSAxMTQ5NjIxNjE1NjkwMDU5NDc2NjgiLCJyb2xlIjoiUk9MRV9NRU5URUUiLCJpYXQiOjE3MjE3MjQwNTIsImV4cCI6MTcyMTgxMDQ1Mn0.8tZEhSoGuEPZHYYXbQtBTazNmbmdCp__LU96qX6582g','google 114962161569005947668');
2024-07-23 17:40:52 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721724052746 | took 0ms | commit | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 17:41:05 [http-nio-8080-exec-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.user_mentee,
        m1_0.mentor_id,
        m1_0.birth,
        m1_0.field,
        m1_0.part,
        m1_0.phone_num,
        m1_0.picture,
        pd1_0.mentor_id,
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.startTime,
        u1_0.name,
        u1_0.phone,
        u1_0.picture,
        u1_0.role,
        u1_0.username 
    from
        User u1_0 
    join
        Mentor m1_0 
            on m1_0.mentor_id=u1_0.user_mentor 
    join
        PossibleDate pd1_0 
            on m1_0.mentor_id=pd1_0.mentor_id 
    where
        m1_0.mentor_id=?
2024-07-23 17:41:05 [http-nio-8080-exec-2] [transactionId=] [threadId=] INFO  p6spy - #1721724065196 | took 1ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select u1_0.user_id,u1_0.email,u1_0.user_mentee,m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture,pd1_0.mentor_id,pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.startTime,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=?
select u1_0.user_id,u1_0.email,u1_0.user_mentee,m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture,pd1_0.mentor_id,pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.startTime,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=1;
2024-07-23 17:41:05 [http-nio-8080-exec-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.user_mentee,
        u1_0.user_mentor,
        u1_0.name,
        u1_0.phone,
        u1_0.picture,
        u1_0.role,
        u1_0.username 
    from
        User u1_0 
    where
        u1_0.username=?
2024-07-23 17:41:05 [http-nio-8080-exec-2] [transactionId=] [threadId=] INFO  p6spy - #1721724065213 | took 0ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username=?
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username='google 114962161569005947668';
2024-07-23 17:41:05 [http-nio-8080-exec-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    join
        Mentor m1_0 
            on m1_0.mentor_id=pd1_0.mentor_id 
    where
        m1_0.mentor_id=? 
        and pd1_0.startTime=? 
        and pd1_0.date=?
2024-07-23 17:41:05 [http-nio-8080-exec-2] [transactionId=] [threadId=] INFO  p6spy - #1721724065235 | took 2ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 join Mentor m1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=? and pd1_0.startTime=? and pd1_0.date=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 join Mentor m1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=1 and pd1_0.startTime='1970-01-01T11:00:00.000+0900' and pd1_0.date='2024-07-05T00:00:00.000+0900';
2024-07-23 17:41:05 [http-nio-8080-exec-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    insert 
    into
        Application
        (date, endTime, mentee_id, mentor_id, startTime) 
    values
        (?, ?, ?, ?, ?)
2024-07-23 17:41:05 [http-nio-8080-exec-2] [transactionId=] [threadId=] INFO  p6spy - #1721724065239 | took 0ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
insert into Application (date,endTime,mentee_id,mentor_id,startTime) values (?,?,?,?,?)
insert into Application (date,endTime,mentee_id,mentor_id,startTime) values ('2024-07-05T00:00:00.000+0900','1970-01-01T12:00:00.000+0900',4,1,'1970-01-01T11:00:00.000+0900');
2024-07-23 17:41:05 [http-nio-8080-exec-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    update
        PossibleDate 
    set
        date=?,
        endTime=?,
        isActive=?,
        mentor_id=?,
        startTime=? 
    where
        possible_date_id=?
2024-07-23 17:41:05 [http-nio-8080-exec-2] [transactionId=] [threadId=] INFO  p6spy - #1721724065249 | took 1ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
update PossibleDate set date=?,endTime=?,isActive=?,mentor_id=?,startTime=? where possible_date_id=?
update PossibleDate set date='2024-07-05T00:00:00.000+0900',endTime='1970-01-01T12:00:00.000+0900',isActive=false,mentor_id=1,startTime='1970-01-01T11:00:00.000+0900' where possible_date_id=1503;
2024-07-23 17:41:05 [http-nio-8080-exec-2] [transactionId=] [threadId=] INFO  p6spy - #1721724065251 | took 1ms | commit | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 17:41:34 [http-nio-8080-exec-3] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.user_mentee,
        m1_0.mentor_id,
        m1_0.birth,
        m1_0.field,
        m1_0.part,
        m1_0.phone_num,
        m1_0.picture,
        pd1_0.mentor_id,
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.startTime,
        u1_0.name,
        u1_0.phone,
        u1_0.picture,
        u1_0.role,
        u1_0.username 
    from
        User u1_0 
    join
        Mentor m1_0 
            on m1_0.mentor_id=u1_0.user_mentor 
    join
        PossibleDate pd1_0 
            on m1_0.mentor_id=pd1_0.mentor_id 
    where
        m1_0.mentor_id=?
2024-07-23 17:41:34 [http-nio-8080-exec-3] [transactionId=] [threadId=] INFO  p6spy - #1721724094705 | took 11ms | statement | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select u1_0.user_id,u1_0.email,u1_0.user_mentee,m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture,pd1_0.mentor_id,pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.startTime,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=?
select u1_0.user_id,u1_0.email,u1_0.user_mentee,m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture,pd1_0.mentor_id,pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.startTime,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=1;
2024-07-23 17:41:34 [http-nio-8080-exec-3] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.user_mentee,
        u1_0.user_mentor,
        u1_0.name,
        u1_0.phone,
        u1_0.picture,
        u1_0.role,
        u1_0.username 
    from
        User u1_0 
    where
        u1_0.username=?
2024-07-23 17:41:34 [http-nio-8080-exec-3] [transactionId=] [threadId=] INFO  p6spy - #1721724094716 | took 1ms | statement | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username=?
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username='google 114962161569005947668';
2024-07-23 17:41:34 [http-nio-8080-exec-3] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    join
        Mentor m1_0 
            on m1_0.mentor_id=pd1_0.mentor_id 
    where
        m1_0.mentor_id=? 
        and pd1_0.startTime=? 
        and pd1_0.date=?
2024-07-23 17:41:34 [http-nio-8080-exec-3] [transactionId=] [threadId=] INFO  p6spy - #1721724094719 | took 0ms | statement | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 join Mentor m1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=? and pd1_0.startTime=? and pd1_0.date=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 join Mentor m1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=1 and pd1_0.startTime='1970-01-01T11:00:00.000+0900' and pd1_0.date='2024-07-05T00:00:00.000+0900';
2024-07-23 17:41:34 [http-nio-8080-exec-3] [transactionId=] [threadId=] INFO  p6spy - #1721724094722 | took 0ms | rollback | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 17:46:41 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 17:46:41 [SpringApplicationShutdownHook] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@48e3017a] for TypeConfiguration
2024-07-23 17:46:41 [SpringApplicationShutdownHook] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@68825df4] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@48e3017a]
2024-07-23 17:46:41 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-23 17:46:41 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-23 17:46:43 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Starting CoffeeChatApplication using Java 17.0.11 with PID 10982 (/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes started by kimkyohwee in /Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server)
2024-07-23 17:46:43 [main] [transactionId=] [threadId=] DEBUG c.s.CoffeeChat.CoffeeChatApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-07-23 17:46:43 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-23 17:46:43 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 17:46:43 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-23 17:46:43 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 69 ms. Found 6 JPA repository interfaces.
2024-07-23 17:46:43 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 17:46:43 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-23 17:46:43 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:46:43 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:46:43 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:46:43 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:46:43 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:46:43 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:46:43 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 735 ms
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@56478522
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@56478522
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@56478522
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3caf5c96
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3caf5c96
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5b3755f4
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5b3755f4
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@37d3aa8c
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@37d3aa8c
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5dd747c1
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5dd747c1
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5dd747c1
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1bdafb01
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1bdafb01
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1bdafb01
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@37806be6
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@37806be6
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@7bce9ce4
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@1d2046bb
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1d2046bb
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3b33fff9
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@fd87c22
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@fee881
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@fee881
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@fee881
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@1ff463bb
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@1ff463bb
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1ff463bb
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@3b9c9b8b
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@3b9c9b8b
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3b9c9b8b
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7769d9b6
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7769d9b6
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7769d9b6
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@248d3a
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@248d3a
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@248d3a
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3c71cf3e
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3c71cf3e
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@636e4bf8
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@636e4bf8
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@5af38a4a
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@5af38a4a
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@5af38a4a
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7e1a9173
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@4ca0b9b1
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4ca0b9b1
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5d800a56
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@1be77a76
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@1be77a76
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@1be77a76
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@315cf170
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@7878bbdb
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@25f7cc38
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@563263a
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@563263a
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@53e28097
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@53e28097
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6e794f53
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@75f4d8a8
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@69ba72da
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@2e1ba142
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@abc7005
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@595ec862
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@63c84d31
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@63c84d31
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@102af1bb
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@102af1bb
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@797f97e3
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@797f97e3
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@56cd5d76
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@56cd5d76
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@77cd235b
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@77cd235b
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@302da330
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3568ea59
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@9f2376f
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@9f2376f
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@173b1af1
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4a520f05
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@389a1e34
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@204b0f07
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@204b0f07
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6f68756d
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@359865a2
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@5d9bb69b
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5d9bb69b
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@25d0b918
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@25d0b918
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2d38db6f
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2d38db6f
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@37cf91d8
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@37cf91d8
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@37cf91d8
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@571d0925
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@18811c42
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@18811c42
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@627acb38
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@627acb38
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@32b95de
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@32b95de
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@629cbb1
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@629cbb1
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@165aa43a
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@1d585fb
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1d585fb
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7cdc4070
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@553fbe94
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6abe62bb
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1f60824e
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@1218e12
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@29c25bbc
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@30704f85
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2b99c937
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@26c59348
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6df87ffd
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5b1420f9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@434ee422)
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4de93edd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@53b2e1eb)
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@29db008c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1d008e61)
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@191b44ca) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5de243bb)
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2c4cf7eb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@35260785)
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@76d828ff) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39685204)
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@72d0196d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@77cf329d)
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4067634b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b64f131)
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@490d9c41) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@47d81427)
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@13ebccd
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@7cdc4070`
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@663cf5d7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@11b14ae3]
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@663cf5d7] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5d50e7f6]
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] INFO  p6spy - #1721724404921 | took 1ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] INFO  p6spy - #1721724404923 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] INFO  p6spy - #1721724404934 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] INFO  p6spy - #1721724404943 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] INFO  p6spy - #1721724404951 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] INFO  p6spy - #1721724404952 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5d50e7f6] for TypeConfiguration
2024-07-23 17:46:44 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 17:46:45 [main] [transactionId=] [threadId=] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-23 17:46:45 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@a72bb34, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1bbebf8e, org.springframework.security.web.context.SecurityContextHolderFilter@11f415e4, org.springframework.security.web.header.HeaderWriterFilter@c3fd72, org.springframework.web.filter.CorsFilter@4285b1bd, com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter@539a50ea, org.springframework.security.web.authentication.logout.LogoutFilter@784fb189, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@5a7e2f07, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@7bfa2d74, com.soongsil.CoffeeChat.config.jwt.JWTFilter@4caeeab6, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@30e3544d, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@22027e62, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@38f0de07, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@21e5feb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4d652bc6, org.springframework.security.web.session.SessionManagementFilter@5bddb619, org.springframework.security.web.access.ExceptionTranslationFilter@1d2ec1f, org.springframework.security.web.access.intercept.AuthorizationFilter@db372b]
2024-07-23 17:46:45 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 17:46:45 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/v3/api-docs/**']
2024-07-23 17:46:45 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 17:46:45 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-ui/**']
2024-07-23 17:46:45 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 17:46:45 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-resources/**']
2024-07-23 17:46:46 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-07-23 17:46:46 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2024-07-23 17:46:46 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Started CoffeeChatApplication in 2.949 seconds (process running for 3.249)
2024-07-23 17:46:50 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-23 17:46:50 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-23 17:46:50 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-07-23 17:46:50 [http-nio-8080-exec-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        r1_0.id 
    from
        Refresh r1_0 
    where
        r1_0.refresh=? 
    limit
        ?
2024-07-23 17:46:50 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721724410363 | took 1ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select r1_0.id from Refresh r1_0 where r1_0.refresh=? limit ?
select r1_0.id from Refresh r1_0 where r1_0.refresh='eyJhbGciOiJIUzI1NiJ9.eyJjYXRlZ29yeSI6InJlZnJlc2giLCJ1c2VybmFtZSI6Imdvb2dsZSAxMTQ5NjIxNjE1NjkwMDU5NDc2NjgiLCJyb2xlIjoiUk9MRV9NRU5URUUiLCJpYXQiOjE3MjE3MjQwNTIsImV4cCI6MTcyMTgxMDQ1Mn0.8tZEhSoGuEPZHYYXbQtBTazNmbmdCp__LU96qX6582g' limit 1;
2024-07-23 17:46:50 [http-nio-8080-exec-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.expiration,
        r1_0.refresh,
        r1_0.username 
    from
        Refresh r1_0 
    where
        r1_0.refresh=?
2024-07-23 17:46:50 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721724410384 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select r1_0.id,r1_0.expiration,r1_0.refresh,r1_0.username from Refresh r1_0 where r1_0.refresh=?
select r1_0.id,r1_0.expiration,r1_0.refresh,r1_0.username from Refresh r1_0 where r1_0.refresh='eyJhbGciOiJIUzI1NiJ9.eyJjYXRlZ29yeSI6InJlZnJlc2giLCJ1c2VybmFtZSI6Imdvb2dsZSAxMTQ5NjIxNjE1NjkwMDU5NDc2NjgiLCJyb2xlIjoiUk9MRV9NRU5URUUiLCJpYXQiOjE3MjE3MjQwNTIsImV4cCI6MTcyMTgxMDQ1Mn0.8tZEhSoGuEPZHYYXbQtBTazNmbmdCp__LU96qX6582g';
2024-07-23 17:46:50 [http-nio-8080-exec-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    delete 
    from
        Refresh 
    where
        id=?
2024-07-23 17:46:50 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721724410394 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
delete from Refresh where id=?
delete from Refresh where id=176;
2024-07-23 17:46:50 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721724410396 | took 1ms | commit | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 17:46:50 [http-nio-8080-exec-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    insert 
    into
        Refresh
        (expiration, refresh, username) 
    values
        (?, ?, ?)
2024-07-23 17:46:50 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721724410401 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
insert into Refresh (expiration,refresh,username) values (?,?,?)
insert into Refresh (expiration,refresh,username) values ('Wed Jul 24 17:46:50 KST 2024','eyJhbGciOiJIUzI1NiJ9.eyJjYXRlZ29yeSI6InJlZnJlc2giLCJ1c2VybmFtZSI6Imdvb2dsZSAxMTQ5NjIxNjE1NjkwMDU5NDc2NjgiLCJyb2xlIjoiUk9MRV9NRU5URUUiLCJpYXQiOjE3MjE3MjQ0MTAsImV4cCI6MTcyMTgxMDgxMH0.6CpfBCaCsGeqKbYWjKNhv-8CunqD24AYy_0rIhqhyH0','google 114962161569005947668');
2024-07-23 17:46:50 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721724410405 | took 0ms | commit | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 17:47:16 [http-nio-8080-exec-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.user_mentee,
        m1_0.mentor_id,
        m1_0.birth,
        m1_0.field,
        m1_0.part,
        m1_0.phone_num,
        m1_0.picture,
        pd1_0.mentor_id,
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.startTime,
        u1_0.name,
        u1_0.phone,
        u1_0.picture,
        u1_0.role,
        u1_0.username 
    from
        User u1_0 
    join
        Mentor m1_0 
            on m1_0.mentor_id=u1_0.user_mentor 
    join
        PossibleDate pd1_0 
            on m1_0.mentor_id=pd1_0.mentor_id 
    where
        m1_0.mentor_id=?
2024-07-23 17:47:16 [http-nio-8080-exec-2] [transactionId=] [threadId=] INFO  p6spy - #1721724436711 | took 12ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select u1_0.user_id,u1_0.email,u1_0.user_mentee,m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture,pd1_0.mentor_id,pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.startTime,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=?
select u1_0.user_id,u1_0.email,u1_0.user_mentee,m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture,pd1_0.mentor_id,pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.startTime,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=1;
2024-07-23 17:47:16 [http-nio-8080-exec-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.user_mentee,
        u1_0.user_mentor,
        u1_0.name,
        u1_0.phone,
        u1_0.picture,
        u1_0.role,
        u1_0.username 
    from
        User u1_0 
    where
        u1_0.username=?
2024-07-23 17:47:16 [http-nio-8080-exec-2] [transactionId=] [threadId=] INFO  p6spy - #1721724436722 | took 1ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username=?
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username='google 114962161569005947668';
2024-07-23 17:47:16 [http-nio-8080-exec-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    join
        Mentor m1_0 
            on m1_0.mentor_id=pd1_0.mentor_id 
    where
        m1_0.mentor_id=? 
        and pd1_0.startTime=? 
        and pd1_0.date=?
2024-07-23 17:47:16 [http-nio-8080-exec-2] [transactionId=] [threadId=] INFO  p6spy - #1721724436735 | took 1ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 join Mentor m1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=? and pd1_0.startTime=? and pd1_0.date=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 join Mentor m1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=1 and pd1_0.startTime='1970-01-01T11:00:00.000+0900' and pd1_0.date='2024-07-05T00:00:00.000+0900';
2024-07-23 17:47:16 [http-nio-8080-exec-2] [transactionId=] [threadId=] INFO  p6spy - #1721724436736 | took 0ms | rollback | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 17:47:37 [http-nio-8080-exec-3] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.user_mentee,
        m1_0.mentor_id,
        m1_0.birth,
        m1_0.field,
        m1_0.part,
        m1_0.phone_num,
        m1_0.picture,
        pd1_0.mentor_id,
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.startTime,
        u1_0.name,
        u1_0.phone,
        u1_0.picture,
        u1_0.role,
        u1_0.username 
    from
        User u1_0 
    join
        Mentor m1_0 
            on m1_0.mentor_id=u1_0.user_mentor 
    join
        PossibleDate pd1_0 
            on m1_0.mentor_id=pd1_0.mentor_id 
    where
        m1_0.mentor_id=?
2024-07-23 17:47:37 [http-nio-8080-exec-3] [transactionId=] [threadId=] INFO  p6spy - #1721724457446 | took 0ms | statement | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select u1_0.user_id,u1_0.email,u1_0.user_mentee,m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture,pd1_0.mentor_id,pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.startTime,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=?
select u1_0.user_id,u1_0.email,u1_0.user_mentee,m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture,pd1_0.mentor_id,pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.startTime,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=1;
2024-07-23 17:47:37 [http-nio-8080-exec-3] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.user_mentee,
        u1_0.user_mentor,
        u1_0.name,
        u1_0.phone,
        u1_0.picture,
        u1_0.role,
        u1_0.username 
    from
        User u1_0 
    where
        u1_0.username=?
2024-07-23 17:47:37 [http-nio-8080-exec-3] [transactionId=] [threadId=] INFO  p6spy - #1721724457455 | took 1ms | statement | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username=?
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username='google 114962161569005947668';
2024-07-23 17:47:37 [http-nio-8080-exec-3] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    join
        Mentor m1_0 
            on m1_0.mentor_id=pd1_0.mentor_id 
    where
        m1_0.mentor_id=? 
        and pd1_0.startTime=? 
        and pd1_0.date=?
2024-07-23 17:47:37 [http-nio-8080-exec-3] [transactionId=] [threadId=] INFO  p6spy - #1721724457459 | took 0ms | statement | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 join Mentor m1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=? and pd1_0.startTime=? and pd1_0.date=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 join Mentor m1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=1 and pd1_0.startTime='1970-01-01T11:00:00.000+0900' and pd1_0.date='2024-07-05T00:00:00.000+0900';
2024-07-23 17:47:37 [http-nio-8080-exec-3] [transactionId=] [threadId=] INFO  p6spy - #1721724457459 | took 0ms | rollback | connection 4| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 17:49:37 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 17:49:37 [SpringApplicationShutdownHook] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5d50e7f6] for TypeConfiguration
2024-07-23 17:49:37 [SpringApplicationShutdownHook] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@172d61] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5d50e7f6]
2024-07-23 17:49:37 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-23 17:49:37 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Starting CoffeeChatApplication using Java 17.0.11 with PID 11020 (/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes started by kimkyohwee in /Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server)
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG c.s.CoffeeChat.CoffeeChatApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 65 ms. Found 6 JPA repository interfaces.
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces.
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 697 ms
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@bc8d68b
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@bc8d68b
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@bc8d68b
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@2fa212df
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@2fa212df
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3cf8a235
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3cf8a235
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6e3b2dd3
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6e3b2dd3
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@238ad211
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@238ad211
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@238ad211
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@1c011855
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1c011855
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@1c011855
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@279c4e3b
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@279c4e3b
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@334b392d
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@59f7c106
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@59f7c106
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@136fece2
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@56478522
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3caf5c96
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3caf5c96
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3caf5c96
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@5b3755f4
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@5b3755f4
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@5b3755f4
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@37d3aa8c
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@37d3aa8c
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@37d3aa8c
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5dd747c1
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@5dd747c1
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5dd747c1
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1bdafb01
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1bdafb01
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@1bdafb01
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7aa3857b
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7aa3857b
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@500ec769
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@500ec769
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@37806be6
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@37806be6
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@37806be6
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7bce9ce4
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1d2046bb
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1d2046bb
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@3b33fff9
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@fd87c22
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@fd87c22
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@fd87c22
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@fee881
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@1ff463bb
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3b9c9b8b
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@7769d9b6
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7769d9b6
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@248d3a
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@248d3a
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@3c71cf3e
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@636e4bf8
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5af38a4a
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7e1a9173
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4ca0b9b1
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5d800a56
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@1be77a76
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@1be77a76
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@315cf170
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@315cf170
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7878bbdb
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7878bbdb
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@25f7cc38
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@25f7cc38
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@563263a
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@563263a
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@53e28097
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6e794f53
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@75f4d8a8
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@75f4d8a8
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@69ba72da
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2e1ba142
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@abc7005
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@595ec862
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@595ec862
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@63c84d31
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@102af1bb
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@797f97e3
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@797f97e3
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@56cd5d76
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@56cd5d76
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@77cd235b
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@77cd235b
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@77cd235b
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@302da330
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@302da330
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@302da330
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3568ea59
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@9f2376f
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@173b1af1
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@173b1af1
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4a520f05
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4a520f05
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4a520f05
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@389a1e34
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@204b0f07
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@6f68756d
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6f68756d
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@359865a2
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@359865a2
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@359865a2
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@5d9bb69b
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5d9bb69b
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@25d0b918
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@25d0b918
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@2d38db6f
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@29f95272
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@29f95272
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@e886caf
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1d585fb
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@1884e671
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@1c7843c3
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5158a9f7
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7c8f047a
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4387d2f4
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1dbff71c
2024-07-23 17:49:39 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@93ce24d
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@37c37d67
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4fef5792) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@57ed02e6)
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@39004e4f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5f0ca069)
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6a6a2fdd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@552ffa44)
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6e66b498) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@54d35ed5)
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6f7c9755) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45abbd24)
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1e32037d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5059d398)
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5b1420f9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@434ee422)
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4de93edd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@53b2e1eb)
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@29db008c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1d008e61)
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@20171cdc
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@e886caf`
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@758d4aa9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@78e97d4d]
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@758d4aa9] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2cbae0f1]
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] INFO  p6spy - #1721724580561 | took 2ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] INFO  p6spy - #1721724580563 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] INFO  p6spy - #1721724580573 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] INFO  p6spy - #1721724580580 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] INFO  p6spy - #1721724580587 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentee` where 1=0
select * from `cogo-local`.`Mentee` where 1=0;
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] INFO  p6spy - #1721724580588 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select * from `cogo-local`.`Mentor` where 1=0
select * from `cogo-local`.`Mentor` where 1=0;
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2cbae0f1] for TypeConfiguration
2024-07-23 17:49:40 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 17:49:41 [main] [transactionId=] [threadId=] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-23 17:49:41 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@21dc1d99, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7bfa2d74, org.springframework.security.web.context.SecurityContextHolderFilter@9c7699e, org.springframework.security.web.header.HeaderWriterFilter@4d542218, org.springframework.web.filter.CorsFilter@467924d8, com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter@20bc417f, org.springframework.security.web.authentication.logout.LogoutFilter@21f3a99c, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@2220780d, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@418f5f63, com.soongsil.CoffeeChat.config.jwt.JWTFilter@614da024, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@4d7909bd, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@4b76a0f4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5bbda8aa, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@36d02719, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@442612a6, org.springframework.security.web.session.SessionManagementFilter@463a0302, org.springframework.security.web.access.ExceptionTranslationFilter@1e1c1634, org.springframework.security.web.access.intercept.AuthorizationFilter@763960eb]
2024-07-23 17:49:41 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 17:49:41 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/v3/api-docs/**']
2024-07-23 17:49:41 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 17:49:41 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-ui/**']
2024-07-23 17:49:41 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-07-23 17:49:41 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-resources/**']
2024-07-23 17:49:41 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-07-23 17:49:41 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2024-07-23 17:49:41 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Started CoffeeChatApplication in 2.814 seconds (process running for 3.126)
2024-07-23 17:49:48 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-23 17:49:48 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-23 17:49:48 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2024-07-23 17:49:48 [http-nio-8080-exec-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        r1_0.id 
    from
        Refresh r1_0 
    where
        r1_0.refresh=? 
    limit
        ?
2024-07-23 17:49:48 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721724588772 | took 1ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select r1_0.id from Refresh r1_0 where r1_0.refresh=? limit ?
select r1_0.id from Refresh r1_0 where r1_0.refresh='eyJhbGciOiJIUzI1NiJ9.eyJjYXRlZ29yeSI6InJlZnJlc2giLCJ1c2VybmFtZSI6Imdvb2dsZSAxMTQ5NjIxNjE1NjkwMDU5NDc2NjgiLCJyb2xlIjoiUk9MRV9NRU5URUUiLCJpYXQiOjE3MjE3MjQ0MTAsImV4cCI6MTcyMTgxMDgxMH0.6CpfBCaCsGeqKbYWjKNhv-8CunqD24AYy_0rIhqhyH0' limit 1;
2024-07-23 17:49:48 [http-nio-8080-exec-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.expiration,
        r1_0.refresh,
        r1_0.username 
    from
        Refresh r1_0 
    where
        r1_0.refresh=?
2024-07-23 17:49:48 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721724588794 | took 1ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select r1_0.id,r1_0.expiration,r1_0.refresh,r1_0.username from Refresh r1_0 where r1_0.refresh=?
select r1_0.id,r1_0.expiration,r1_0.refresh,r1_0.username from Refresh r1_0 where r1_0.refresh='eyJhbGciOiJIUzI1NiJ9.eyJjYXRlZ29yeSI6InJlZnJlc2giLCJ1c2VybmFtZSI6Imdvb2dsZSAxMTQ5NjIxNjE1NjkwMDU5NDc2NjgiLCJyb2xlIjoiUk9MRV9NRU5URUUiLCJpYXQiOjE3MjE3MjQ0MTAsImV4cCI6MTcyMTgxMDgxMH0.6CpfBCaCsGeqKbYWjKNhv-8CunqD24AYy_0rIhqhyH0';
2024-07-23 17:49:48 [http-nio-8080-exec-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    delete 
    from
        Refresh 
    where
        id=?
2024-07-23 17:49:48 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721724588805 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
delete from Refresh where id=?
delete from Refresh where id=177;
2024-07-23 17:49:48 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721724588807 | took 1ms | commit | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 17:49:48 [http-nio-8080-exec-1] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    insert 
    into
        Refresh
        (expiration, refresh, username) 
    values
        (?, ?, ?)
2024-07-23 17:49:48 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721724588811 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
insert into Refresh (expiration,refresh,username) values (?,?,?)
insert into Refresh (expiration,refresh,username) values ('Wed Jul 24 17:49:48 KST 2024','eyJhbGciOiJIUzI1NiJ9.eyJjYXRlZ29yeSI6InJlZnJlc2giLCJ1c2VybmFtZSI6Imdvb2dsZSAxMTQ5NjIxNjE1NjkwMDU5NDc2NjgiLCJyb2xlIjoiUk9MRV9NRU5URUUiLCJpYXQiOjE3MjE3MjQ1ODgsImV4cCI6MTcyMTgxMDk4OH0.N1l4UlTw_e7x7HZhqsUovV_iAp9u9skiKnnZ-gMcvVE','google 114962161569005947668');
2024-07-23 17:49:48 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  p6spy - #1721724588815 | took 0ms | commit | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 17:50:10 [http-nio-8080-exec-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.user_mentee,
        m1_0.mentor_id,
        m1_0.birth,
        m1_0.field,
        m1_0.part,
        m1_0.phone_num,
        m1_0.picture,
        pd1_0.mentor_id,
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.startTime,
        u1_0.name,
        u1_0.phone,
        u1_0.picture,
        u1_0.role,
        u1_0.username 
    from
        User u1_0 
    join
        Mentor m1_0 
            on m1_0.mentor_id=u1_0.user_mentor 
    join
        PossibleDate pd1_0 
            on m1_0.mentor_id=pd1_0.mentor_id 
    where
        m1_0.mentor_id=?
2024-07-23 17:50:10 [http-nio-8080-exec-2] [transactionId=] [threadId=] INFO  p6spy - #1721724610688 | took 1ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select u1_0.user_id,u1_0.email,u1_0.user_mentee,m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture,pd1_0.mentor_id,pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.startTime,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=?
select u1_0.user_id,u1_0.email,u1_0.user_mentee,m1_0.mentor_id,m1_0.birth,m1_0.field,m1_0.part,m1_0.phone_num,m1_0.picture,pd1_0.mentor_id,pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.startTime,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 join Mentor m1_0 on m1_0.mentor_id=u1_0.user_mentor join PossibleDate pd1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=1;
2024-07-23 17:50:10 [http-nio-8080-exec-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.email,
        u1_0.user_mentee,
        u1_0.user_mentor,
        u1_0.name,
        u1_0.phone,
        u1_0.picture,
        u1_0.role,
        u1_0.username 
    from
        User u1_0 
    where
        u1_0.username=?
2024-07-23 17:50:10 [http-nio-8080-exec-2] [transactionId=] [threadId=] INFO  p6spy - #1721724610699 | took 0ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username=?
select u1_0.user_id,u1_0.email,u1_0.user_mentee,u1_0.user_mentor,u1_0.name,u1_0.phone,u1_0.picture,u1_0.role,u1_0.username from User u1_0 where u1_0.username='google 114962161569005947668';
2024-07-23 17:50:10 [http-nio-8080-exec-2] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    select
        pd1_0.possible_date_id,
        pd1_0.date,
        pd1_0.endTime,
        pd1_0.isActive,
        pd1_0.mentor_id,
        pd1_0.startTime 
    from
        PossibleDate pd1_0 
    join
        Mentor m1_0 
            on m1_0.mentor_id=pd1_0.mentor_id 
    where
        m1_0.mentor_id=? 
        and pd1_0.startTime=? 
        and pd1_0.date=?
2024-07-23 17:50:10 [http-nio-8080-exec-2] [transactionId=] [threadId=] INFO  p6spy - #1721724610713 | took 1ms | statement | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 join Mentor m1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=? and pd1_0.startTime=? and pd1_0.date=?
select pd1_0.possible_date_id,pd1_0.date,pd1_0.endTime,pd1_0.isActive,pd1_0.mentor_id,pd1_0.startTime from PossibleDate pd1_0 join Mentor m1_0 on m1_0.mentor_id=pd1_0.mentor_id where m1_0.mentor_id=1 and pd1_0.startTime='1970-01-01T11:00:00.000+0900' and pd1_0.date='2024-07-05T00:00:00.000+0900';
2024-07-23 17:50:10 [http-nio-8080-exec-2] [transactionId=] [threadId=] INFO  p6spy - #1721724610715 | took 0ms | rollback | connection 3| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

;
2024-07-23 17:56:42 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-23 17:56:42 [SpringApplicationShutdownHook] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2cbae0f1] for TypeConfiguration
2024-07-23 17:56:42 [SpringApplicationShutdownHook] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@23af7c91] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2cbae0f1]
2024-07-23 17:56:42 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-07-23 17:56:42 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-08 15:20:19 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Starting CoffeeChatApplication using Java 17.0.9 with PID 2314 (/Users/oxdjww/Desktop/Repo/COGO-DEV-server/build/classes/java/main started by oxdjww in /Users/oxdjww/Desktop/Repo/COGO-DEV-server)
2024-08-08 15:20:19 [main] [transactionId=] [threadId=] DEBUG c.s.CoffeeChat.CoffeeChatApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-08-08 15:20:19 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-08 15:20:19 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-08 15:20:19 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-08 15:20:19 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 112 ms. Found 6 JPA repository interfaces.
2024-08-08 15:20:19 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-08 15:20:19 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1244 ms
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6e3b2dd3
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6e3b2dd3
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6e3b2dd3
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@238ad211
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@238ad211
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@1c011855
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@1c011855
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@6591f8ea
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@6591f8ea
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5273143e
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5273143e
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5273143e
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@279c4e3b
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@279c4e3b
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@279c4e3b
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@136fece2
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@136fece2
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@56478522
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@3caf5c96
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@3caf5c96
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5b3755f4
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@37d3aa8c
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5dd747c1
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@5dd747c1
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@5dd747c1
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@1bdafb01
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@1bdafb01
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1bdafb01
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7aa3857b
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7aa3857b
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7aa3857b
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@500ec769
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@500ec769
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@500ec769
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@37806be6
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@37806be6
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@37806be6
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7bce9ce4
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7bce9ce4
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1d2046bb
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1d2046bb
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@3b33fff9
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@3b33fff9
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3b33fff9
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@fd87c22
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@fee881
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@fee881
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1ff463bb
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3b9c9b8b
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3b9c9b8b
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3b9c9b8b
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7769d9b6
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@248d3a
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3c71cf3e
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@636e4bf8
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@636e4bf8
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5af38a4a
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5af38a4a
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@7e1a9173
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4ca0b9b1
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5d800a56
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1be77a76
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@315cf170
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@7878bbdb
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@25f7cc38
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@25f7cc38
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@563263a
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@563263a
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@53e28097
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@53e28097
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6e794f53
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6e794f53
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@75f4d8a8
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@75f4d8a8
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@69ba72da
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2e1ba142
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@abc7005
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@abc7005
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@595ec862
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@63c84d31
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@102af1bb
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@797f97e3
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@797f97e3
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@56cd5d76
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@77cd235b
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@302da330
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@302da330
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@3568ea59
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3568ea59
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@9f2376f
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@9f2376f
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@9f2376f
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@173b1af1
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@173b1af1
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@173b1af1
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4a520f05
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@389a1e34
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@204b0f07
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@204b0f07
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6f68756d
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6f68756d
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6f68756d
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@359865a2
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@5d9bb69b
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@25d0b918
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@25d0b918
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2d38db6f
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2d38db6f
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@37cf91d8
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@37cf91d8
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@571d0925
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@4e7eba9f
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4e7eba9f
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@1c7843c3
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5158a9f7
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7c8f047a
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4387d2f4
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@1dbff71c
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@93ce24d
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@d949bc4
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7079f8f0
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@121cf6f4
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-08 15:20:20 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-08 15:20:22 [main] [transactionId=] [threadId=] ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
java.sql.SQLSyntaxErrorException: Unknown database 'cogo_local'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:815)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:438)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:189)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at com.p6spy.engine.spy.P6DataSource.getConnection(P6DataSource.java:300)
	at org.springframework.jdbc.datasource.DelegatingDataSource.getConnection(DelegatingDataSource.java:101)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:428)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:276)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:107)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:129)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:223)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:170)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
2024-08-08 15:20:22 [main] [transactionId=] [threadId=] WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator - HHH000342: Could not obtain connection to query metadata
java.lang.NullPointerException: Cannot invoke "org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(java.sql.SQLException, String)" because the return value of "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.sqlExceptionHelper()" is null
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:116)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:276)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:107)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:129)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:223)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:170)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
2024-08-08 15:20:22 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-08 15:20:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@58068b40) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@999cd18)
2024-08-08 15:20:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@dd060be) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@df432ec)
2024-08-08 15:20:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6144e499) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@26f204a4)
2024-08-08 15:20:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@28295554) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e671ef)
2024-08-08 15:20:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@42403dc6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74a1d60e)
2024-08-08 15:20:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@16c0be3b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@219edc05)
2024-08-08 15:20:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@62f37bfd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1818d00b)
2024-08-08 15:20:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@b3a8455) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5c930fc3)
2024-08-08 15:20:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@25c6ab3f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7b80af04)
2024-08-08 15:20:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-08 15:20:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-08 15:20:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-08 15:20:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-08 15:20:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-08 15:20:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@62c53685
2024-08-08 15:20:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@1c7843c3`
2024-08-08 15:20:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-08-08 15:20:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-08-08 15:20:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-08-08 15:20:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-08 15:20:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-08 15:20:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-08 15:20:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-08 15:20:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-08 15:20:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-08 15:20:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-08 15:20:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-08 15:20:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-08 15:20:22 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@177068db] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@60f3239f]
2024-08-08 15:20:23 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-08 15:20:23 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@177068db] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@a1689e8]
2024-08-08 15:20:23 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-08 15:20:24 [main] [transactionId=] [threadId=] ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
java.sql.SQLSyntaxErrorException: Unknown database 'cogo_local'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:815)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:438)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:189)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at com.p6spy.engine.spy.P6DataSource.getConnection(P6DataSource.java:300)
	at org.springframework.jdbc.datasource.DelegatingDataSource.getConnection(DelegatingDataSource.java:101)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:428)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:46)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:39)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:70)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processTableResultSet(InformationExtractorJdbcDatabaseMetaDataImpl.java:64)
	at org.hibernate.tool.schema.extract.internal.AbstractInformationExtractorImpl.getTables(AbstractInformationExtractorImpl.java:570)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:122)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:72)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
2024-08-08 15:20:24 [main] [transactionId=] [threadId=] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 1049, SQLState: 42000
2024-08-08 15:20:24 [main] [transactionId=] [threadId=] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - Unknown database 'cogo_local'
2024-08-08 15:20:24 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@a1689e8] for TypeConfiguration
2024-08-08 15:20:24 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3857c5d5] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@a1689e8]
2024-08-08 15:20:24 [main] [transactionId=] [threadId=] ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.SQLGrammarException: Unable to open JDBC Connection for DDL execution [Unknown database 'cogo_local'] [n/a]
2024-08-08 15:20:24 [main] [transactionId=] [threadId=] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.SQLGrammarException: Unable to open JDBC Connection for DDL execution [Unknown database 'cogo_local'] [n/a]
2024-08-08 15:20:24 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2024-08-08 15:20:24 [main] [transactionId=] [threadId=] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-08-08 15:20:24 [main] [transactionId=] [threadId=] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.SQLGrammarException: Unable to open JDBC Connection for DDL execution [Unknown database 'cogo_local'] [n/a]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1773)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: jakarta.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.SQLGrammarException: Unable to open JDBC Connection for DDL execution [Unknown database 'cogo_local'] [n/a]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	... 16 common frames omitted
Caused by: org.hibernate.exception.SQLGrammarException: Unable to open JDBC Connection for DDL execution [Unknown database 'cogo_local'] [n/a]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:66)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:74)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:39)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:70)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processTableResultSet(InformationExtractorJdbcDatabaseMetaDataImpl.java:64)
	at org.hibernate.tool.schema.extract.internal.AbstractInformationExtractorImpl.getTables(AbstractInformationExtractorImpl.java:570)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:122)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:72)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	... 20 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Unknown database 'cogo_local'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:815)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:438)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:189)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at com.p6spy.engine.spy.P6DataSource.getConnection(P6DataSource.java:300)
	at org.springframework.jdbc.datasource.DelegatingDataSource.getConnection(DelegatingDataSource.java:101)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:428)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:46)
	... 41 common frames omitted
2024-08-08 15:20:30 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Starting CoffeeChatApplication using Java 17.0.9 with PID 2323 (/Users/oxdjww/Desktop/Repo/COGO-DEV-server/build/classes/java/main started by oxdjww in /Users/oxdjww/Desktop/Repo/COGO-DEV-server)
2024-08-08 15:20:30 [main] [transactionId=] [threadId=] DEBUG c.s.CoffeeChat.CoffeeChatApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-08-08 15:20:30 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-08 15:20:30 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-08 15:20:30 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-08 15:20:30 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 106 ms. Found 6 JPA repository interfaces.
2024-08-08 15:20:30 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-08 15:20:30 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-08 15:20:30 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-08 15:20:30 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-08 15:20:30 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-08 15:20:30 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-08 15:20:30 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-08 15:20:30 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-08 15:20:30 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1195 ms
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5b3755f4
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5b3755f4
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5b3755f4
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@37d3aa8c
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@37d3aa8c
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5dd747c1
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5dd747c1
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1bdafb01
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1bdafb01
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7aa3857b
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7aa3857b
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7aa3857b
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@500ec769
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@500ec769
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@500ec769
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1d2046bb
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1d2046bb
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@3b33fff9
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@fd87c22
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@fd87c22
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@fee881
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1ff463bb
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3b9c9b8b
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3b9c9b8b
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3b9c9b8b
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@7769d9b6
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@7769d9b6
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7769d9b6
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@248d3a
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@248d3a
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@248d3a
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3c71cf3e
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3c71cf3e
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3c71cf3e
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@636e4bf8
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@636e4bf8
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@636e4bf8
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5af38a4a
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5af38a4a
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7e1a9173
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7e1a9173
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@4ca0b9b1
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@4ca0b9b1
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4ca0b9b1
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5d800a56
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1be77a76
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1be77a76
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@315cf170
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7878bbdb
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7878bbdb
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7878bbdb
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@25f7cc38
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@563263a
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@53e28097
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@6e794f53
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6e794f53
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@75f4d8a8
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@75f4d8a8
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@69ba72da
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2e1ba142
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@abc7005
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@595ec862
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@63c84d31
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@102af1bb
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@797f97e3
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@797f97e3
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@56cd5d76
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@56cd5d76
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@77cd235b
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@77cd235b
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@302da330
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@302da330
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3568ea59
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3568ea59
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@9f2376f
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@173b1af1
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4a520f05
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4a520f05
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@389a1e34
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@204b0f07
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6f68756d
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@359865a2
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@359865a2
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5d9bb69b
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@25d0b918
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2d38db6f
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@37cf91d8
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@571d0925
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@571d0925
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@18811c42
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@18811c42
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@18811c42
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@627acb38
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@627acb38
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@32b95de
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@32b95de
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@629cbb1
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@629cbb1
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@165aa43a
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@165aa43a
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@7d977a20
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@35ab4260
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@1c7843c3
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1c7843c3
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6abe62bb
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1f60824e
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@1218e12
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@29c25bbc
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@30704f85
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2b99c937
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@26c59348
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1de12397
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2f5f5bc9
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-08 15:20:31 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-08 15:20:32 [main] [transactionId=] [threadId=] ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
java.sql.SQLSyntaxErrorException: Unknown database 'cogo_local'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:815)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:438)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:189)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at com.p6spy.engine.spy.P6DataSource.getConnection(P6DataSource.java:300)
	at org.springframework.jdbc.datasource.DelegatingDataSource.getConnection(DelegatingDataSource.java:101)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:428)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:276)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:107)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:129)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:223)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:170)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
2024-08-08 15:20:32 [main] [transactionId=] [threadId=] WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator - HHH000342: Could not obtain connection to query metadata
java.lang.NullPointerException: Cannot invoke "org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(java.sql.SQLException, String)" because the return value of "org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.sqlExceptionHelper()" is null
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:116)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:276)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:107)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:129)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:223)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:191)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:170)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1432)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1503)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
2024-08-08 15:20:32 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-08 15:20:32 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@539dd2d0) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3428420d)
2024-08-08 15:20:32 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@523ade68) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@b529d7e)
2024-08-08 15:20:32 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3664c596) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@40aad17d)
2024-08-08 15:20:32 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@44e79e9e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5bc14211)
2024-08-08 15:20:32 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4b99648a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5d2e65bd)
2024-08-08 15:20:32 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@254513e8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@74450c9b)
2024-08-08 15:20:32 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@74f89bad) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5ad50b02)
2024-08-08 15:20:32 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@570299e3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@bff764c)
2024-08-08 15:20:32 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3beaa16d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@49153009)
2024-08-08 15:20:32 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-08 15:20:32 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-08 15:20:32 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-08 15:20:32 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-08 15:20:32 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-08 15:20:32 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2bf0c70d
2024-08-08 15:20:32 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@6abe62bb`
2024-08-08 15:20:32 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-08-08 15:20:32 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-08-08 15:20:32 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-08-08 15:20:32 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-08 15:20:32 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-08 15:20:32 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-08 15:20:32 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-08 15:20:32 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-08 15:20:32 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-08 15:20:32 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-08 15:20:32 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-08 15:20:32 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-08 15:20:32 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@c697186] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@185a7dd0]
2024-08-08 15:20:33 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-08 15:20:33 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@c697186] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2bf2523f]
2024-08-08 15:20:33 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-08 15:20:34 [main] [transactionId=] [threadId=] ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
java.sql.SQLSyntaxErrorException: Unknown database 'cogo_local'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:815)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:438)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:189)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at com.p6spy.engine.spy.P6DataSource.getConnection(P6DataSource.java:300)
	at org.springframework.jdbc.datasource.DelegatingDataSource.getConnection(DelegatingDataSource.java:101)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:428)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:46)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:39)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:70)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processTableResultSet(InformationExtractorJdbcDatabaseMetaDataImpl.java:64)
	at org.hibernate.tool.schema.extract.internal.AbstractInformationExtractorImpl.getTables(AbstractInformationExtractorImpl.java:570)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:122)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:72)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
2024-08-08 15:20:34 [main] [transactionId=] [threadId=] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 1049, SQLState: 42000
2024-08-08 15:20:34 [main] [transactionId=] [threadId=] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - Unknown database 'cogo_local'
2024-08-08 15:20:34 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2bf2523f] for TypeConfiguration
2024-08-08 15:20:34 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1a18e68a] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2bf2523f]
2024-08-08 15:20:34 [main] [transactionId=] [threadId=] ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.SQLGrammarException: Unable to open JDBC Connection for DDL execution [Unknown database 'cogo_local'] [n/a]
2024-08-08 15:20:34 [main] [transactionId=] [threadId=] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.SQLGrammarException: Unable to open JDBC Connection for DDL execution [Unknown database 'cogo_local'] [n/a]
2024-08-08 15:20:34 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2024-08-08 15:20:34 [main] [transactionId=] [threadId=] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-08-08 15:20:34 [main] [transactionId=] [threadId=] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.SQLGrammarException: Unable to open JDBC Connection for DDL execution [Unknown database 'cogo_local'] [n/a]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1773)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: jakarta.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory; nested exception is org.hibernate.exception.SQLGrammarException: Unable to open JDBC Connection for DDL execution [Unknown database 'cogo_local'] [n/a]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:421)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	... 16 common frames omitted
Caused by: org.hibernate.exception.SQLGrammarException: Unable to open JDBC Connection for DDL execution [Unknown database 'cogo_local'] [n/a]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:66)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:74)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:39)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcConnection(ImprovedExtractionContextImpl.java:63)
	at org.hibernate.tool.schema.internal.exec.ImprovedExtractionContextImpl.getJdbcDatabaseMetaData(ImprovedExtractionContextImpl.java:70)
	at org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl.processTableResultSet(InformationExtractorJdbcDatabaseMetaDataImpl.java:64)
	at org.hibernate.tool.schema.extract.internal.AbstractInformationExtractorImpl.getTables(AbstractInformationExtractorImpl.java:570)
	at org.hibernate.tool.schema.extract.internal.DatabaseInformationImpl.getTablesInformation(DatabaseInformationImpl.java:122)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:72)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	... 20 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Unknown database 'cogo_local'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:815)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:438)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:189)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at com.p6spy.engine.spy.P6DataSource.getConnection(P6DataSource.java:300)
	at org.springframework.jdbc.datasource.DelegatingDataSource.getConnection(DelegatingDataSource.java:101)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:428)
	at org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:46)
	... 41 common frames omitted
2024-08-08 15:21:00 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Starting CoffeeChatApplication using Java 17.0.9 with PID 2352 (/Users/oxdjww/Desktop/Repo/COGO-DEV-server/build/classes/java/main started by oxdjww in /Users/oxdjww/Desktop/Repo/COGO-DEV-server)
2024-08-08 15:21:00 [main] [transactionId=] [threadId=] DEBUG c.s.CoffeeChat.CoffeeChatApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-08-08 15:21:00 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-08 15:21:01 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-08 15:21:01 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-08 15:21:01 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 153 ms. Found 6 JPA repository interfaces.
2024-08-08 15:21:01 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-08 15:21:01 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-08 15:21:01 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-08 15:21:01 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-08 15:21:01 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-08 15:21:01 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-08 15:21:01 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-08 15:21:01 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-08 15:21:01 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-08-08 15:21:01 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-08 15:21:01 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-08 15:21:01 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-08 15:21:01 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-08-08 15:21:01 [main] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-08 15:21:01 [main] [transactionId=] [threadId=] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1411 ms
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5b3755f4
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@5b3755f4
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@5b3755f4
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@37d3aa8c
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@37d3aa8c
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5dd747c1
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5dd747c1
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1bdafb01
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1bdafb01
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7aa3857b
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7aa3857b
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7aa3857b
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@500ec769
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@500ec769
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@500ec769
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1d2046bb
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1d2046bb
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@3b33fff9
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@fd87c22
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@fd87c22
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@fee881
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@1ff463bb
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3b9c9b8b
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@3b9c9b8b
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3b9c9b8b
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@7769d9b6
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@7769d9b6
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7769d9b6
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@248d3a
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@248d3a
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@248d3a
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3c71cf3e
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3c71cf3e
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3c71cf3e
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@636e4bf8
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@636e4bf8
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@636e4bf8
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5af38a4a
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5af38a4a
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7e1a9173
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7e1a9173
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@4ca0b9b1
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@4ca0b9b1
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4ca0b9b1
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5d800a56
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1be77a76
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1be77a76
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@315cf170
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7878bbdb
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7878bbdb
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7878bbdb
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@25f7cc38
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@563263a
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@53e28097
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@6e794f53
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6e794f53
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@75f4d8a8
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@75f4d8a8
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@69ba72da
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2e1ba142
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@abc7005
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@595ec862
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@63c84d31
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@102af1bb
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@797f97e3
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@797f97e3
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@56cd5d76
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@56cd5d76
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@77cd235b
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@77cd235b
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@302da330
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@302da330
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3568ea59
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3568ea59
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@9f2376f
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@173b1af1
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4a520f05
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4a520f05
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@389a1e34
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@204b0f07
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6f68756d
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@359865a2
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@359865a2
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5d9bb69b
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@25d0b918
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@2d38db6f
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@37cf91d8
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@571d0925
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@571d0925
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@18811c42
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@18811c42
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@18811c42
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@627acb38
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@627acb38
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@32b95de
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@32b95de
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@629cbb1
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@629cbb1
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@165aa43a
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@165aa43a
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@7d977a20
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@35ab4260
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@1c7843c3
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@1c7843c3
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6abe62bb
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1f60824e
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@1218e12
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@29c25bbc
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@30704f85
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2b99c937
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@26c59348
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1de12397
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2f5f5bc9
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@642c5bb3
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4de93edd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@53b2e1eb)
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@29db008c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1d008e61)
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@191b44ca) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5de243bb)
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2c4cf7eb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@35260785)
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@76d828ff) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@39685204)
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@72d0196d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@77cf329d)
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4067634b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b64f131)
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@490d9c41) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@47d81427)
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3c5e4aac) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@20afd96f)
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2a0c244e
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@6abe62bb`
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-08 15:21:02 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2b6ee447] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@9cb927e]
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2b6ee447] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@73502d5e]
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Application (
        application_id bigint not null auto_increment,
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        memo varchar(255),
        mentee_id bigint,
        mentor_id bigint,
        primary key (application_id)
    ) engine=InnoDB
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723098063159 | took 23ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Application (
        application_id bigint not null auto_increment,
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        memo varchar(255),
        mentee_id bigint,
        mentor_id bigint,
        primary key (application_id)
    ) engine=InnoDB

    create table Application (
        application_id bigint not null auto_increment,
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        memo varchar(255),
        mentee_id bigint,
        mentor_id bigint,
        primary key (application_id)
    ) engine=InnoDB;
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723098063178 | took 18ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB

    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB;
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Mentee (
        mentee_id bigint not null auto_increment,
        birth varchar(255),
        grade integer,
        memo varchar(255),
        nickname varchar(255),
        part varchar(255),
        phone_num varchar(255),
        picture varchar(255),
        primary key (mentee_id)
    ) engine=InnoDB
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723098063186 | took 8ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Mentee (
        mentee_id bigint not null auto_increment,
        birth varchar(255),
        grade integer,
        memo varchar(255),
        nickname varchar(255),
        part varchar(255),
        phone_num varchar(255),
        picture varchar(255),
        primary key (mentee_id)
    ) engine=InnoDB

    create table Mentee (
        mentee_id bigint not null auto_increment,
        birth varchar(255),
        grade integer,
        memo varchar(255),
        nickname varchar(255),
        part varchar(255),
        phone_num varchar(255),
        picture varchar(255),
        primary key (mentee_id)
    ) engine=InnoDB;
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Mentor (
        mentor_id bigint not null auto_increment,
        club integer,
        part integer,
        mentor_introduction bigint,
        primary key (mentor_id)
    ) engine=InnoDB
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723098063195 | took 7ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Mentor (
        mentor_id bigint not null auto_increment,
        club integer,
        part integer,
        mentor_introduction bigint,
        primary key (mentor_id)
    ) engine=InnoDB

    create table Mentor (
        mentor_id bigint not null auto_increment,
        club integer,
        part integer,
        mentor_introduction bigint,
        primary key (mentor_id)
    ) engine=InnoDB;
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table PossibleDate (
        possible_date_id bigint not null auto_increment,
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        primary key (possible_date_id)
    ) engine=InnoDB
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723098063203 | took 7ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table PossibleDate (
        possible_date_id bigint not null auto_increment,
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        primary key (possible_date_id)
    ) engine=InnoDB

    create table PossibleDate (
        possible_date_id bigint not null auto_increment,
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        primary key (possible_date_id)
    ) engine=InnoDB;
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723098063210 | took 6ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB

    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB;
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table User (
        user_id bigint not null auto_increment,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        user_mentee bigint,
        user_mentor bigint,
        primary key (user_id)
    ) engine=InnoDB
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723098063218 | took 7ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table User (
        user_id bigint not null auto_increment,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        user_mentee bigint,
        user_mentor bigint,
        primary key (user_id)
    ) engine=InnoDB

    create table User (
        user_id bigint not null auto_increment,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        user_mentee bigint,
        user_mentor bigint,
        primary key (user_id)
    ) engine=InnoDB;
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       drop index UK_q1bnlwuhs82q8yg9sugcv9i2t
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723098063232 | took 13ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       drop index UK_q1bnlwuhs82q8yg9sugcv9i2t

    alter table Mentor 
       drop index UK_q1bnlwuhs82q8yg9sugcv9i2t;
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723098063248 | took 16ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)

    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction);
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       drop index UK_lc9moypm41adanqklg8nenmal
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723098063250 | took 1ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       drop index UK_lc9moypm41adanqklg8nenmal

    alter table User 
       drop index UK_lc9moypm41adanqklg8nenmal;
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee)
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723098063259 | took 8ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee)

    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee);
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       drop index UK_3tggmai9ph5bnfjy0wat5ltb5
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723098063259 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       drop index UK_3tggmai9ph5bnfjy0wat5ltb5

    alter table User 
       drop index UK_3tggmai9ph5bnfjy0wat5ltb5;
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor)
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723098063269 | took 9ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor)

    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor);
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id)
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723098063291 | took 20ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id)

    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id);
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id)
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723098063310 | took 18ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id)

    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id);
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723098063328 | took 18ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)

    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id);
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id)
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723098063344 | took 15ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id)

    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id);
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id)
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723098063358 | took 13ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id)

    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id);
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id)
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723098063373 | took 15ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id)

    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id);
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@73502d5e] for TypeConfiguration
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'applicationController' defined in file [/Users/oxdjww/Desktop/Repo/COGO-DEV-server/build/classes/java/main/com/soongsil/CoffeeChat/controller/ApplicationController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'applicationService' defined in file [/Users/oxdjww/Desktop/Repo/COGO-DEV-server/build/classes/java/main/com/soongsil/CoffeeChat/service/ApplicationService.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'mentorRepository' defined in com.soongsil.CoffeeChat.repository.Mentor.MentorRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.soongsil.CoffeeChat.repository.Mentor.MentorRepository.findAllByPart(java.lang.String); Reason: Failed to create query for method public abstract java.util.List com.soongsil.CoffeeChat.repository.Mentor.MentorRepository.findAllByPart(java.lang.String); Cannot compare left expression of type 'java.lang.Integer' with right expression of type 'java.lang.String'
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@73502d5e] for TypeConfiguration
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@e417628] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@73502d5e]
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-08-08 15:21:03 [main] [transactionId=] [threadId=] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'applicationController' defined in file [/Users/oxdjww/Desktop/Repo/COGO-DEV-server/build/classes/java/main/com/soongsil/CoffeeChat/controller/ApplicationController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'applicationService' defined in file [/Users/oxdjww/Desktop/Repo/COGO-DEV-server/build/classes/java/main/com/soongsil/CoffeeChat/service/ApplicationService.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'mentorRepository' defined in com.soongsil.CoffeeChat.repository.Mentor.MentorRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.soongsil.CoffeeChat.repository.Mentor.MentorRepository.findAllByPart(java.lang.String); Reason: Failed to create query for method public abstract java.util.List com.soongsil.CoffeeChat.repository.Mentor.MentorRepository.findAllByPart(java.lang.String); Cannot compare left expression of type 'java.lang.Integer' with right expression of type 'java.lang.String'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:798)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:959)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'applicationService' defined in file [/Users/oxdjww/Desktop/Repo/COGO-DEV-server/build/classes/java/main/com/soongsil/CoffeeChat/service/ApplicationService.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'mentorRepository' defined in com.soongsil.CoffeeChat.repository.Mentor.MentorRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.soongsil.CoffeeChat.repository.Mentor.MentorRepository.findAllByPart(java.lang.String); Reason: Failed to create query for method public abstract java.util.List com.soongsil.CoffeeChat.repository.Mentor.MentorRepository.findAllByPart(java.lang.String); Cannot compare left expression of type 'java.lang.Integer' with right expression of type 'java.lang.String'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:798)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mentorRepository' defined in com.soongsil.CoffeeChat.repository.Mentor.MentorRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.soongsil.CoffeeChat.repository.Mentor.MentorRepository.findAllByPart(java.lang.String); Reason: Failed to create query for method public abstract java.util.List com.soongsil.CoffeeChat.repository.Mentor.MentorRepository.findAllByPart(java.lang.String); Cannot compare left expression of type 'java.lang.Integer' with right expression of type 'java.lang.String'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1773)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	... 33 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.soongsil.CoffeeChat.repository.Mentor.MentorRepository.findAllByPart(java.lang.String); Reason: Failed to create query for method public abstract java.util.List com.soongsil.CoffeeChat.repository.Mentor.MentorRepository.findAllByPart(java.lang.String); Cannot compare left expression of type 'java.lang.Integer' with right expression of type 'java.lang.String'
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.soongsil.CoffeeChat.repository.Mentor.MentorRepository.findAllByPart(java.lang.String); Cannot compare left expression of type 'java.lang.Integer' with right expression of type 'java.lang.String'
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:106)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:124)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:258)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	... 56 common frames omitted
Caused by: org.hibernate.query.SemanticException: Cannot compare left expression of type 'java.lang.Integer' with right expression of type 'java.lang.String'
	at org.hibernate.query.sqm.internal.TypecheckUtil.assertComparable(TypecheckUtil.java:358)
	at org.hibernate.query.sqm.tree.predicate.SqmComparisonPredicate.<init>(SqmComparisonPredicate.java:48)
	at org.hibernate.query.sqm.tree.predicate.SqmComparisonPredicate.<init>(SqmComparisonPredicate.java:34)
	at org.hibernate.query.sqm.internal.SqmCriteriaNodeBuilder.equal(SqmCriteriaNodeBuilder.java:2121)
	at org.hibernate.query.sqm.internal.SqmCriteriaNodeBuilder.equal(SqmCriteriaNodeBuilder.java:192)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator$PredicateBuilder.build(JpaQueryCreator.java:312)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.toPredicate(JpaQueryCreator.java:210)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:121)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:1)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createCriteria(AbstractQueryCreator.java:119)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:95)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:81)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$QueryPreparer.<init>(PartTreeJpaQuery.java:218)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$CountQueryPreparer.<init>(PartTreeJpaQuery.java:361)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:102)
	... 60 common frames omitted
2024-08-12 19:25:22 [Test worker] [transactionId=] [threadId=] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest]: ConcurrencyTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-08-12 19:25:22 [Test worker] [transactionId=] [threadId=] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.soongsil.CoffeeChat.CoffeeChatApplication for test class com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - Starting ConcurrencyTest using Java 17.0.11 with PID 2636 (started by kimkyohwee in /Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server)
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG c.s.C.Concurrency.ConcurrencyTest - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - No active profile set, falling back to 1 default profile: "default"
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 66 ms. Found 6 JPA repository interfaces.
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@98722ef
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@98722ef
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@98722ef
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@459e120b
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@459e120b
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@fd69983
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@fd69983
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@22429a11
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@22429a11
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@126254ec
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@126254ec
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@126254ec
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@275902e1
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@275902e1
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@275902e1
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2a99fa07
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2a99fa07
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@45b8bbbf
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@1df06ecd
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1df06ecd
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@57927bc9
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@323efafe
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@32dbca45
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@32dbca45
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@32dbca45
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@2cc34cd5
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@2cc34cd5
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@2cc34cd5
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@684b26b7
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@684b26b7
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@684b26b7
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2de7c84a
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2de7c84a
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2de7c84a
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4182a651
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@4182a651
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4182a651
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7791ff50
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7791ff50
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@46de118b
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@46de118b
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@55682482
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@55682482
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@55682482
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@10cb050
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@799fb45e
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@799fb45e
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4f7ba0af
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@5b23c1f6
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5b23c1f6
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@5b23c1f6
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@3f4964f2
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3bf01a01
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@299cab08
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@6c75e3bc
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6c75e3bc
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@186f7434
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@186f7434
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2374452a
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6ffc6ea7
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2c5708e7
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4ffa078d
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4e26564d
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@42238078
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5627b8eb
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5627b8eb
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@49fe0bcd
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@49fe0bcd
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3516b881
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3516b881
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6be8ce1b
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6be8ce1b
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@e3c36d
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@e3c36d
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@397a10df
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@39a865c1
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@141dfcf9
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@141dfcf9
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@a7bbdbc
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@63eea8c4
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@19924f15
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@621392ea
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@621392ea
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@35524549
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@23ec63af
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@280d6a20
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@280d6a20
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@56f72909
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@56f72909
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71285693
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71285693
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71285693
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3199a202
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3199a202
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3199a202
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7286827b
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@1dd64243
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2ef913a4
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2ef913a4
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@520c3dcb
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@520c3dcb
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@520c3dcb
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@145fe8ab
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3b347439
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@5d3634c8
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5d3634c8
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@6e67a8c0
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@6e67a8c0
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@6e67a8c0
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@5960f17
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5960f17
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1d1b3620
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1d1b3620
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@71e7c13f
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@71e7c13f
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@2295566b
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@2295566b
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@174e1b99
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@174e1b99
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@53a09566
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1c815814
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@7eefaca0
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7eefaca0
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@2c154508
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@395eb363
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@1e194966
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@160546b1
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@103e7c7c
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5c3710b3
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@8b1202a
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@34bddf43
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@57839834
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-12 19:25:23 [Test worker] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2c224096
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@10ec4721) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7bdf94f2)
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6b92a0d1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4b9ed99d)
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@39b95a80) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3ec62141)
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@402c9a60) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7d43f1c9)
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@eddc9bb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@11e3d08)
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@25c548d1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@476a2819)
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@279ab15e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@571c2ed8)
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5810772a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4eacb6d1)
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3ccefe1b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@a926db4)
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@11ca8f71
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@2c154508`
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@126d8659] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@28654aff]
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@126d8659] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5f662dd]
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723458324618 | took 55ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07

    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07;
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723458324625 | took 6ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8

    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8;
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723458324630 | took 4ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv

    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv;
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv" via JDBC [Can't DROP 'FKohjibsdevd7mwn5kssk0lf1fv'; check that column/key exists]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv" via JDBC [Can't DROP 'FKohjibsdevd7mwn5kssk0lf1fv'; check that column/key exists]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:470)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:242)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:244)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: java.sql.SQLSyntaxErrorException: Can't DROP 'FKohjibsdevd7mwn5kssk0lf1fv'; check that column/key exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 131 common frames omitted
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723458324636 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f

    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f;
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f" via JDBC [Can't DROP 'FKhthvsdqwyr3p97g7ek094r90f'; check that column/key exists]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f" via JDBC [Can't DROP 'FKhthvsdqwyr3p97g7ek094r90f'; check that column/key exists]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:470)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:242)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:244)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: java.sql.SQLSyntaxErrorException: Can't DROP 'FKhthvsdqwyr3p97g7ek094r90f'; check that column/key exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 131 common frames omitted
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723458324647 | took 8ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389

    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389;
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723458324655 | took 7ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1

    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1;
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723458324661 | took 6ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y

    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y;
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Application
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723458324677 | took 15ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Application

    drop table if exists Application;
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Introduction
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723458324678 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Introduction

    drop table if exists Introduction;
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Mentee
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723458324683 | took 4ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Mentee

    drop table if exists Mentee;
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Mentor
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723458324685 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Mentor

    drop table if exists Mentor;
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    drop table if exists Mentor" via JDBC [Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    drop table if exists Mentor" via JDBC [Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropTables(SchemaDropperImpl.java:377)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:253)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:244)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: java.sql.SQLException: Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 131 common frames omitted
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists PossibleDate
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723458324693 | took 7ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists PossibleDate

    drop table if exists PossibleDate;
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Refresh
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723458324698 | took 4ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Refresh

    drop table if exists Refresh;
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists User
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723458324706 | took 7ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists User

    drop table if exists User;
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723458324723 | took 14ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB

    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB;
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723458324729 | took 5ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB

    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB;
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723458324733 | took 3ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB

    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB;
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723458324734 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB

    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB;
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB" via JDBC [Table 'mentor' already exists]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB" via JDBC [Table 'mentor' already exists]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTables(SchemaCreatorImpl.java:420)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:340)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: java.sql.SQLSyntaxErrorException: Table 'mentor' already exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 131 common frames omitted
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723458324739 | took 4ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB

    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB;
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723458324747 | took 5ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB

    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB;
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723458324754 | took 6ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB

    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB;
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id)
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723458324774 | took 20ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id)

    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id);
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723458324775 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)

    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction);
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)" via JDBC [Key column 'mentor_introduction' doesn't exist in table]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)" via JDBC [Key column 'mentor_introduction' doesn't exist in table]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTableConstraints(SchemaCreatorImpl.java:393)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:351)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: java.sql.SQLSyntaxErrorException: Key column 'mentor_introduction' doesn't exist in table
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 131 common frames omitted
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee)
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723458324788 | took 11ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee)

    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee);
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor)
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723458324794 | took 6ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor)

    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor);
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id)
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723458324809 | took 15ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id)

    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id);
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id)
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723458324840 | took 29ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id)

    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id);
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id)
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723458324849 | took 9ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id)

    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id);
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723458324850 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)

    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id);
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)" via JDBC [Key column 'mentor_introduction' doesn't exist in table]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)" via JDBC [Key column 'mentor_introduction' doesn't exist in table]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createForeignKeys(SchemaCreatorImpl.java:303)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:250)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: java.sql.SQLSyntaxErrorException: Key column 'mentor_introduction' doesn't exist in table
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 130 common frames omitted
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id)
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723458324861 | took 10ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id)

    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id);
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id)
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723458324877 | took 15ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id)

    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id);
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id)
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723458324891 | took 13ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id)

    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id);
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5f662dd] for TypeConfiguration
2024-08-12 19:25:24 [Test worker] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-12 19:25:25 [Test worker] [transactionId=] [threadId=] WARN  o.s.w.c.s.GenericWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConfig': Injection of autowired dependencies failed
2024-08-12 19:25:25 [Test worker] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-12 19:25:25 [Test worker] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5f662dd] for TypeConfiguration
2024-08-12 19:25:25 [Test worker] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@68e8bbab] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5f662dd]
2024-08-12 19:25:25 [Test worker] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-12 19:25:25 [Test worker] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-12 19:25:25 [Test worker] [transactionId=] [threadId=] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-08-12 19:25:25 [Test worker] [transactionId=] [threadId=] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConfig': Injection of autowired dependencies failed
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:514)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1418)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:959)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'REDIS_HOST' in value "${REDIS_HOST}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:180)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.core.env.AbstractPropertyResolver.resolveNestedPlaceholders(AbstractPropertyResolver.java:230)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:79)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:60)
	at org.springframework.core.env.AbstractEnvironment.getProperty(AbstractEnvironment.java:552)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$1.getProperty(PropertySourcesPlaceholderConfigurer.java:153)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$1.getProperty(PropertySourcesPlaceholderConfigurer.java:149)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:85)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getPropertyAsRawString(PropertySourcesPropertyResolver.java:74)
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:153)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:921)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1374)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	... 108 common frames omitted
2024-08-12 19:25:25 [Test worker] [transactionId=] [threadId=] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest@1b87f7cd]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@45c73e09 testClass = com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest, locations = [], classes = [com.soongsil.CoffeeChat.CoffeeChatApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@592e843a, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@25ddbbbb, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@44c79f32, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@3d08f3f5, org.springframework.boot.test.context.SpringBootTestAnnotation@e7d183c8], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConfig': Injection of autowired dependencies failed
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:514)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1418)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:959)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 86 common frames omitted
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'REDIS_HOST' in value "${REDIS_HOST}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:180)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.core.env.AbstractPropertyResolver.resolveNestedPlaceholders(AbstractPropertyResolver.java:230)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:79)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:60)
	at org.springframework.core.env.AbstractEnvironment.getProperty(AbstractEnvironment.java:552)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$1.getProperty(PropertySourcesPlaceholderConfigurer.java:153)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$1.getProperty(PropertySourcesPlaceholderConfigurer.java:149)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:85)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getPropertyAsRawString(PropertySourcesPropertyResolver.java:74)
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:153)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:921)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1374)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	... 108 common frames omitted
2024-08-12 21:14:51 [Test worker] [transactionId=] [threadId=] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest]: ConcurrencyTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-08-12 21:14:51 [Test worker] [transactionId=] [threadId=] INFO  o.s.b.t.c.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.soongsil.CoffeeChat.CoffeeChatApplication for test class com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest
2024-08-12 21:14:51 [Test worker] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - Starting ConcurrencyTest using Java 17.0.11 with PID 25804 (started by kimkyohwee in /Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server)
2024-08-12 21:14:51 [Test worker] [transactionId=] [threadId=] DEBUG c.s.C.Concurrency.ConcurrencyTest - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-08-12 21:14:51 [Test worker] [transactionId=] [threadId=] INFO  c.s.C.Concurrency.ConcurrencyTest - No active profile set, falling back to 1 default profile: "default"
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 75 ms. Found 6 JPA repository interfaces.
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2833c093
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@2833c093
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@2833c093
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7598d675
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7598d675
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4946485c
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4946485c
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4ae958b0
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4ae958b0
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c682e26
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7c682e26
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7c682e26
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@4ff074a0
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@4ff074a0
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@4ff074a0
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@98722ef
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@98722ef
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@459e120b
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@fd69983
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@fd69983
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@22429a11
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@126254ec
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@275902e1
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@275902e1
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@275902e1
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@1c788d08
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@1c788d08
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1c788d08
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2adc1e84
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2adc1e84
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@2adc1e84
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2a99fa07
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2a99fa07
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2a99fa07
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@45b8bbbf
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@45b8bbbf
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@45b8bbbf
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@1df06ecd
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@1df06ecd
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@57927bc9
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@57927bc9
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@323efafe
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@323efafe
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@323efafe
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@32dbca45
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@2cc34cd5
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2cc34cd5
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@684b26b7
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@2de7c84a
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@2de7c84a
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@2de7c84a
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@4182a651
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@7791ff50
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@46de118b
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@55682482
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@55682482
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@10cb050
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@10cb050
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@799fb45e
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4f7ba0af
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5b23c1f6
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3f4964f2
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@3bf01a01
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@299cab08
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6c75e3bc
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6c75e3bc
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@186f7434
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@186f7434
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2374452a
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2374452a
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6ffc6ea7
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6ffc6ea7
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2c5708e7
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2c5708e7
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4ffa078d
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4e26564d
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@42238078
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@42238078
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5627b8eb
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@49fe0bcd
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3516b881
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6be8ce1b
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6be8ce1b
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@e3c36d
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@397a10df
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@39a865c1
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@39a865c1
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@141dfcf9
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@141dfcf9
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@a7bbdbc
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@a7bbdbc
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@a7bbdbc
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@63eea8c4
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@63eea8c4
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@63eea8c4
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@19924f15
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@621392ea
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@35524549
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@35524549
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@23ec63af
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@23ec63af
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@23ec63af
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@280d6a20
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@56f72909
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@71285693
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@71285693
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@3199a202
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3199a202
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3199a202
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7286827b
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7286827b
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1dd64243
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1dd64243
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2ef913a4
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2ef913a4
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@520c3dcb
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@520c3dcb
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@145fe8ab
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@145fe8ab
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@3b347439
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5d3634c8
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@2a6dbb7c
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@2a6dbb7c
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@34bf66af
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@37364634
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@3dec79f8
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5bf7f15f
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@14b26e90
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@11309dd4
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4f4d05b3
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2bd4780c
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2c154508
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@727f36dd
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7df5549e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@cbdc0f4)
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@11174bf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4f0c1409)
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@188ae8d2) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7a522157)
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@706c062e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5feff876)
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@10ec4721) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7bdf94f2)
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6b92a0d1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4b9ed99d)
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@39b95a80) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3ec62141)
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@402c9a60) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7d43f1c9)
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@eddc9bb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@11e3d08)
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@79c849c7
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@34bf66af`
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-12 21:14:52 [Test worker] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@348bd063] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3d73cd78]
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@348bd063] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@37f60cd4]
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723464893377 | took 42ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07

    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07;
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723464893382 | took 4ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8

    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8;
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723464893388 | took 5ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv

    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv;
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723464893393 | took 4ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f

    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f;
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f" via JDBC [Can't DROP 'FKhthvsdqwyr3p97g7ek094r90f'; check that column/key exists]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f" via JDBC [Can't DROP 'FKhthvsdqwyr3p97g7ek094r90f'; check that column/key exists]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:470)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:242)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:244)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: java.sql.SQLSyntaxErrorException: Can't DROP 'FKhthvsdqwyr3p97g7ek094r90f'; check that column/key exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 131 common frames omitted
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723464893401 | took 6ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389

    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389;
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723464893408 | took 6ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1

    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1;
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723464893423 | took 15ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y

    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y;
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Application
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723464893431 | took 7ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Application

    drop table if exists Application;
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Introduction
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723464893435 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Introduction

    drop table if exists Introduction;
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Mentee
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723464893439 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Mentee

    drop table if exists Mentee;
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Mentor
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723464893440 | took 1ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Mentor

    drop table if exists Mentor;
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    drop table if exists Mentor" via JDBC [Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    drop table if exists Mentor" via JDBC [Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropTables(SchemaDropperImpl.java:377)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:253)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:244)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: java.sql.SQLException: Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 131 common frames omitted
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists PossibleDate
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723464893444 | took 2ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists PossibleDate

    drop table if exists PossibleDate;
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Refresh
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723464893447 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Refresh

    drop table if exists Refresh;
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists User
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723464893452 | took 4ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists User

    drop table if exists User;
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723464893463 | took 7ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB

    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB;
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723464893469 | took 5ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB

    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB;
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723464893475 | took 6ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB

    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB;
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723464893476 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB

    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB;
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB" via JDBC [Table 'mentor' already exists]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB" via JDBC [Table 'mentor' already exists]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTables(SchemaCreatorImpl.java:420)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:340)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: java.sql.SQLSyntaxErrorException: Table 'mentor' already exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 131 common frames omitted
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723464893484 | took 6ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB

    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB;
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723464893489 | took 5ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB

    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB;
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723464893493 | took 3ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB

    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB;
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id)
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723464893505 | took 11ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id)

    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id);
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723464893506 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)

    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction);
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)" via JDBC [Key column 'mentor_introduction' doesn't exist in table]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)" via JDBC [Key column 'mentor_introduction' doesn't exist in table]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTableConstraints(SchemaCreatorImpl.java:393)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:351)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: java.sql.SQLSyntaxErrorException: Key column 'mentor_introduction' doesn't exist in table
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 131 common frames omitted
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee)
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723464893526 | took 18ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee)

    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee);
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor)
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723464893530 | took 4ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor)

    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor);
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id)
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723464893539 | took 8ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id)

    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id);
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id)
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723464893553 | took 13ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id)

    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id);
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id)
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723464893567 | took 13ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id)

    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id);
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723464893567 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)

    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id);
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)" via JDBC [Key column 'mentor_introduction' doesn't exist in table]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)" via JDBC [Key column 'mentor_introduction' doesn't exist in table]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createForeignKeys(SchemaCreatorImpl.java:303)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:250)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: java.sql.SQLSyntaxErrorException: Key column 'mentor_introduction' doesn't exist in table
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 130 common frames omitted
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id)
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723464893665 | took 97ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id)

    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id);
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id)
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723464893693 | took 27ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id)

    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id);
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id)
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] INFO  p6spy - #1723464893711 | took 18ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id)

    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id);
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@37f60cd4] for TypeConfiguration
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] WARN  o.s.w.c.s.GenericWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConfig': Injection of autowired dependencies failed
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@37f60cd4] for TypeConfiguration
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4dfe5727] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@37f60cd4]
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConfig': Injection of autowired dependencies failed
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:514)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1418)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:959)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'REDIS_HOST' in value "${REDIS_HOST}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:180)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.core.env.AbstractPropertyResolver.resolveNestedPlaceholders(AbstractPropertyResolver.java:230)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:79)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:60)
	at org.springframework.core.env.AbstractEnvironment.getProperty(AbstractEnvironment.java:552)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$1.getProperty(PropertySourcesPlaceholderConfigurer.java:153)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$1.getProperty(PropertySourcesPlaceholderConfigurer.java:149)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:85)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getPropertyAsRawString(PropertySourcesPropertyResolver.java:74)
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:153)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:921)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1374)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	... 108 common frames omitted
2024-08-12 21:14:53 [Test worker] [transactionId=] [threadId=] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest@54c2cfc9]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@1150b923 testClass = com.soongsil.CoffeeChat.Concurrency.ConcurrencyTest, locations = [], classes = [com.soongsil.CoffeeChat.CoffeeChatApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@592e843a, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@25ddbbbb, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@44c79f32, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@3d08f3f5, org.springframework.boot.test.context.SpringBootTestAnnotation@b9910831], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$10(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:106)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:105)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:119)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:94)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:89)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConfig': Injection of autowired dependencies failed
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:514)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1418)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:959)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1454)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:552)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 86 common frames omitted
Caused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'REDIS_HOST' in value "${REDIS_HOST}"
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:180)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.core.env.AbstractPropertyResolver.resolveNestedPlaceholders(AbstractPropertyResolver.java:230)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:79)
	at org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertyResolver.getProperty(ConfigurationPropertySourcesPropertyResolver.java:60)
	at org.springframework.core.env.AbstractEnvironment.getProperty(AbstractEnvironment.java:552)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$1.getProperty(PropertySourcesPlaceholderConfigurer.java:153)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer$1.getProperty(PropertySourcesPlaceholderConfigurer.java:149)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:85)
	at org.springframework.core.env.PropertySourcesPropertyResolver.getPropertyAsRawString(PropertySourcesPropertyResolver.java:74)
	at org.springframework.util.PropertyPlaceholderHelper.parseStringValue(PropertyPlaceholderHelper.java:153)
	at org.springframework.util.PropertyPlaceholderHelper.replacePlaceholders(PropertyPlaceholderHelper.java:126)
	at org.springframework.core.env.AbstractPropertyResolver.doResolvePlaceholders(AbstractPropertyResolver.java:239)
	at org.springframework.core.env.AbstractPropertyResolver.resolveRequiredPlaceholders(AbstractPropertyResolver.java:210)
	at org.springframework.context.support.PropertySourcesPlaceholderConfigurer.lambda$processProperties$0(PropertySourcesPlaceholderConfigurer.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveEmbeddedValue(AbstractBeanFactory.java:921)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1374)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	... 108 common frames omitted
2024-08-12 21:16:02 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Starting CoffeeChatApplication using Java 17.0.11 with PID 26108 (/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes started by kimkyohwee in /Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server)
2024-08-12 21:16:02 [main] [transactionId=] [threadId=] DEBUG c.s.CoffeeChat.CoffeeChatApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-08-12 21:16:02 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-12 21:16:02 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-12 21:16:02 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-12 21:16:02 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 72 ms. Found 6 JPA repository interfaces.
2024-08-12 21:16:02 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-12 21:16:02 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-12 21:16:02 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 21:16:02 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 21:16:02 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 21:16:02 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 21:16:02 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 21:16:02 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 21:16:02 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-08-12 21:16:02 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-12 21:16:02 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-12 21:16:02 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-12 21:16:02 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-08-12 21:16:02 [main] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-12 21:16:02 [main] [transactionId=] [threadId=] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 736 ms
2024-08-12 21:16:02 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-12 21:16:02 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-08-12 21:16:02 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@18811c42
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@18811c42
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@627acb38
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@627acb38
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@32b95de
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@32b95de
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@32b95de
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@629cbb1
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@629cbb1
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@629cbb1
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7d977a20
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7d977a20
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@35ab4260
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@76134b9b
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@76134b9b
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@38667005
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7ee64b53
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1131aead
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1131aead
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1131aead
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@7d126083
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@7d126083
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7d126083
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@76ffc17c
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@76ffc17c
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@76ffc17c
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3a8fb023
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3a8fb023
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3a8fb023
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@26d73519
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@26d73519
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@26d73519
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@48af5f38
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@48af5f38
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@40538370
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@40538370
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@71a2df1
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@71a2df1
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@71a2df1
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@18faaff6
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@2a9e754e
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2a9e754e
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@760a2b6e
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@20a9f5fb
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@20a9f5fb
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@20a9f5fb
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6d617b07
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@340c57e0
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@137a4b54
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@7c9372ed
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7c9372ed
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1acc873b
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1acc873b
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4ca970d5
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@dc8b2ff
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6a2badb1
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@14201a90
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@1308ef19
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5b1ff8cd
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6cee903a
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6cee903a
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@780ee3ad
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@780ee3ad
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2c2aab92
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2c2aab92
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@857f74a
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@857f74a
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@10a0d93a
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@10a0d93a
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1f3c5308
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@66b31d46
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@51e94b7d
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@51e94b7d
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@47162173
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3a4f8e8a
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4468fda8
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5fc1e4fb
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5fc1e4fb
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@29aa4bc9
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6fd7aba8
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@6c519e47
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6c519e47
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@3ce7490a
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3ce7490a
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4768b95c
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4768b95c
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4768b95c
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1530d0f2
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1530d0f2
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1530d0f2
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7573c7b5
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@73da7f08
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@717a8a76
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@717a8a76
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@62de73eb
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@62de73eb
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@62de73eb
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@97b5e6a
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@29f95272
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@c754401
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@c754401
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@1da53f4f
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1da53f4f
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1da53f4f
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4e7eba9f
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4e7eba9f
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2df71be0
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2df71be0
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@b841713
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@b841713
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3fef1e6b
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3fef1e6b
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@4fee14b
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4fee14b
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@11c3d22f
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3a54638b
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@6533629
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6533629
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@223cbf0d
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4a4ff5ed
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5ddb302
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4b7ab7ab
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@cf9bd1e
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@39acd1f1
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@51813065
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4f581211
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@e0847a9
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4cd90c36
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7305cfb1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@582c1f8d)
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@71687d8f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@443253a6)
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@191774d6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@21ffc00e)
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@134955bb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45b08b17)
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6723e6b3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3883b5e9)
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@61becbcf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@20171cdc)
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@58f97013) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7d70ba18)
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6a07e6ca) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@726ef6aa)
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6104691c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@195cbf5e)
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@5fd4e67f
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@223cbf0d`
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4eb48298] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2d3bb944]
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4eb48298] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@178617da]
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723464963670 | took 28ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07

    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07;
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723464963679 | took 8ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8

    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8;
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723464963684 | took 5ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv

    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv;
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723464963691 | took 6ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f

    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f;
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f" via JDBC [Can't DROP 'FKhthvsdqwyr3p97g7ek094r90f'; check that column/key exists]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f" via JDBC [Can't DROP 'FKhthvsdqwyr3p97g7ek094r90f'; check that column/key exists]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:470)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:242)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:244)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Can't DROP 'FKhthvsdqwyr3p97g7ek094r90f'; check that column/key exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723464963698 | took 6ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389

    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389;
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723464963704 | took 5ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1

    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1;
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723464963709 | took 4ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y

    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y;
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Application
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723464963713 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Application

    drop table if exists Application;
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Introduction
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723464963716 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Introduction

    drop table if exists Introduction;
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Mentee
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723464963719 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Mentee

    drop table if exists Mentee;
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Mentor
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723464963720 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Mentor

    drop table if exists Mentor;
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    drop table if exists Mentor" via JDBC [Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    drop table if exists Mentor" via JDBC [Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropTables(SchemaDropperImpl.java:377)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:253)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:244)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLException: Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists PossibleDate
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723464963723 | took 2ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists PossibleDate

    drop table if exists PossibleDate;
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Refresh
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723464963725 | took 2ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Refresh

    drop table if exists Refresh;
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists User
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723464963732 | took 6ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists User

    drop table if exists User;
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723464963739 | took 2ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB

    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB;
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723464963741 | took 2ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB

    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB;
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723464963744 | took 2ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB

    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB;
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723464963744 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB

    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB;
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB" via JDBC [Table 'mentor' already exists]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB" via JDBC [Table 'mentor' already exists]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTables(SchemaCreatorImpl.java:420)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:340)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Table 'mentor' already exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723464963747 | took 2ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB

    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB;
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723464963749 | took 1ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB

    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB;
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723464963752 | took 2ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB

    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB;
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id)
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723464963756 | took 3ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id)

    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id);
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723464963757 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)

    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction);
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)" via JDBC [Key column 'mentor_introduction' doesn't exist in table]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)" via JDBC [Key column 'mentor_introduction' doesn't exist in table]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTableConstraints(SchemaCreatorImpl.java:393)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:351)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Key column 'mentor_introduction' doesn't exist in table
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee)
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723464963760 | took 3ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee)

    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee);
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor)
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723464963763 | took 2ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor)

    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor);
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id)
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723464963771 | took 7ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id)

    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id);
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id)
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723464963779 | took 8ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id)

    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id);
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id)
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723464963789 | took 10ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id)

    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id);
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723464963790 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)

    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id);
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)" via JDBC [Key column 'mentor_introduction' doesn't exist in table]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)" via JDBC [Key column 'mentor_introduction' doesn't exist in table]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createForeignKeys(SchemaCreatorImpl.java:303)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:250)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Key column 'mentor_introduction' doesn't exist in table
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 39 common frames omitted
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id)
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723464963803 | took 12ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id)

    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id);
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id)
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723464963814 | took 10ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id)

    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id);
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id)
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] INFO  p6spy - #1723464963827 | took 13ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id)

    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id);
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@178617da] for TypeConfiguration
2024-08-12 21:16:03 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-12 21:16:04 [main] [transactionId=] [threadId=] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'applicationController' defined in file [/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes/com/soongsil/CoffeeChat/controller/ApplicationController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'applicationService' defined in file [/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes/com/soongsil/CoffeeChat/service/ApplicationService.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'applicationRepository' defined in com.soongsil.CoffeeChat.repository.ApplicationRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.soongsil.CoffeeChat.repository.ApplicationRepository.findApplicationsByMentorId(java.lang.Long); Reason: Failed to create query for method public abstract java.util.List com.soongsil.CoffeeChat.repository.ApplicationRepository.findApplicationsByMentorId(java.lang.Long); Source must not be null or empty
2024-08-12 21:16:04 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-12 21:16:04 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@178617da] for TypeConfiguration
2024-08-12 21:16:04 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6e43c01f] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@178617da]
2024-08-12 21:16:04 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-12 21:16:04 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-12 21:16:04 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2024-08-12 21:16:04 [main] [transactionId=] [threadId=] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-08-12 21:16:04 [main] [transactionId=] [threadId=] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'applicationController' defined in file [/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes/com/soongsil/CoffeeChat/controller/ApplicationController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'applicationService' defined in file [/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes/com/soongsil/CoffeeChat/service/ApplicationService.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'applicationRepository' defined in com.soongsil.CoffeeChat.repository.ApplicationRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.soongsil.CoffeeChat.repository.ApplicationRepository.findApplicationsByMentorId(java.lang.Long); Reason: Failed to create query for method public abstract java.util.List com.soongsil.CoffeeChat.repository.ApplicationRepository.findApplicationsByMentorId(java.lang.Long); Source must not be null or empty
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:798)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:959)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'applicationService' defined in file [/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes/com/soongsil/CoffeeChat/service/ApplicationService.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'applicationRepository' defined in com.soongsil.CoffeeChat.repository.ApplicationRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.soongsil.CoffeeChat.repository.ApplicationRepository.findApplicationsByMentorId(java.lang.Long); Reason: Failed to create query for method public abstract java.util.List com.soongsil.CoffeeChat.repository.ApplicationRepository.findApplicationsByMentorId(java.lang.Long); Source must not be null or empty
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:798)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'applicationRepository' defined in com.soongsil.CoffeeChat.repository.ApplicationRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.soongsil.CoffeeChat.repository.ApplicationRepository.findApplicationsByMentorId(java.lang.Long); Reason: Failed to create query for method public abstract java.util.List com.soongsil.CoffeeChat.repository.ApplicationRepository.findApplicationsByMentorId(java.lang.Long); Source must not be null or empty
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1773)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	... 33 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.soongsil.CoffeeChat.repository.ApplicationRepository.findApplicationsByMentorId(java.lang.Long); Reason: Failed to create query for method public abstract java.util.List com.soongsil.CoffeeChat.repository.ApplicationRepository.findApplicationsByMentorId(java.lang.Long); Source must not be null or empty
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.soongsil.CoffeeChat.repository.ApplicationRepository.findApplicationsByMentorId(java.lang.Long); Source must not be null or empty
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:106)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:124)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:258)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	... 56 common frames omitted
Caused by: java.lang.IllegalArgumentException: Source must not be null or empty
	at org.springframework.util.Assert.hasText(Assert.java:240)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:351)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:332)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.complete(JpaQueryCreator.java:165)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.complete(JpaQueryCreator.java:141)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.complete(JpaQueryCreator.java:1)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:95)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:81)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$QueryPreparer.<init>(PartTreeJpaQuery.java:218)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:103)
	... 60 common frames omitted
2024-08-12 21:19:25 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Starting CoffeeChatApplication using Java 17.0.11 with PID 26847 (/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes started by kimkyohwee in /Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server)
2024-08-12 21:19:25 [main] [transactionId=] [threadId=] DEBUG c.s.CoffeeChat.CoffeeChatApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-08-12 21:19:25 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-12 21:19:25 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-12 21:19:25 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-12 21:19:25 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 71 ms. Found 6 JPA repository interfaces.
2024-08-12 21:19:25 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-12 21:19:25 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-12 21:19:25 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 21:19:25 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 21:19:25 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 21:19:25 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 21:19:25 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 21:19:25 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 21:19:25 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-08-12 21:19:25 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-12 21:19:25 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-12 21:19:25 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-12 21:19:25 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-08-12 21:19:25 [main] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-12 21:19:25 [main] [transactionId=] [threadId=] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 737 ms
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6f68756d
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@6f68756d
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@6f68756d
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@359865a2
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@359865a2
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5d9bb69b
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5d9bb69b
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@25d0b918
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@25d0b918
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2d38db6f
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2d38db6f
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@37cf91d8
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@571d0925
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@571d0925
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@18811c42
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@18811c42
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@18811c42
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@627acb38
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@627acb38
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@627acb38
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@32b95de
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@32b95de
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@32b95de
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@629cbb1
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@629cbb1
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@165aa43a
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@165aa43a
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7d977a20
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@35ab4260
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@35ab4260
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@76134b9b
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@38667005
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@38667005
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@38667005
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7ee64b53
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@1131aead
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@7d126083
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@76ffc17c
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@76ffc17c
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3a8fb023
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3a8fb023
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@26d73519
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@48af5f38
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@40538370
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@71a2df1
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@18faaff6
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2a9e754e
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@760a2b6e
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@760a2b6e
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@20a9f5fb
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@20a9f5fb
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@6d617b07
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@6d617b07
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@340c57e0
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@340c57e0
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@137a4b54
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@137a4b54
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7c9372ed
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1acc873b
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4ca970d5
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4ca970d5
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@dc8b2ff
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6a2badb1
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@14201a90
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@1308ef19
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@1308ef19
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5b1ff8cd
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6cee903a
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@780ee3ad
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@780ee3ad
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@2c2aab92
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@2c2aab92
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@857f74a
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@857f74a
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@857f74a
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@10a0d93a
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@10a0d93a
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@10a0d93a
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1f3c5308
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@66b31d46
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@51e94b7d
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@51e94b7d
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@47162173
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@47162173
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@47162173
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3a4f8e8a
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4468fda8
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@5fc1e4fb
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@5fc1e4fb
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@29aa4bc9
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@29aa4bc9
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@29aa4bc9
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@6fd7aba8
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6fd7aba8
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@6c519e47
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@6c519e47
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3ce7490a
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3ce7490a
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4768b95c
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4768b95c
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@1530d0f2
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1530d0f2
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@7573c7b5
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@73da7f08
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@4489f60f
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4489f60f
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@36871e98
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@70d687b8
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6533629
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@f49e81a
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@1b444b5
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@459bf87c
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5ae66c98
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1aaf46e6
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@391d28ea
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2006fdaa
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@237cd264) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@51cd2d2)
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5521407f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@42b500aa)
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@71f056a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@64f6dd19)
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b8b5b40) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5151accb)
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2e1ad7de) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7c56c911)
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1de6dc80) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@418d1c03)
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@395197cb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7305cfb1)
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@582c1f8d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@71687d8f)
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@443253a6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@191774d6)
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@37dec463
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@36871e98`
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1df32c09] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1aa31454]
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1df32c09] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7a25f8ee]
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465166738 | took 18ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07

    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07;
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465166743 | took 5ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8

    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8;
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465166749 | took 5ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv

    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv;
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465166754 | took 4ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f

    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f;
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f" via JDBC [Can't DROP 'FKhthvsdqwyr3p97g7ek094r90f'; check that column/key exists]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f" via JDBC [Can't DROP 'FKhthvsdqwyr3p97g7ek094r90f'; check that column/key exists]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:470)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:242)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:244)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Can't DROP 'FKhthvsdqwyr3p97g7ek094r90f'; check that column/key exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465166762 | took 7ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389

    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389;
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465166767 | took 5ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1

    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1;
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465166772 | took 4ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y

    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y;
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Application
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465166776 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Application

    drop table if exists Application;
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Introduction
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465166778 | took 2ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Introduction

    drop table if exists Introduction;
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Mentee
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465166780 | took 2ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Mentee

    drop table if exists Mentee;
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Mentor
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465166781 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Mentor

    drop table if exists Mentor;
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    drop table if exists Mentor" via JDBC [Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    drop table if exists Mentor" via JDBC [Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropTables(SchemaDropperImpl.java:377)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:253)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:244)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLException: Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists PossibleDate
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465166783 | took 1ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists PossibleDate

    drop table if exists PossibleDate;
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Refresh
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465166786 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Refresh

    drop table if exists Refresh;
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists User
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465166789 | took 2ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists User

    drop table if exists User;
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465166795 | took 3ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB

    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB;
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465166797 | took 2ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB

    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB;
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465166800 | took 1ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB

    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB;
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465166800 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB

    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB;
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB" via JDBC [Table 'mentor' already exists]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB" via JDBC [Table 'mentor' already exists]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTables(SchemaCreatorImpl.java:420)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:340)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Table 'mentor' already exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465166803 | took 2ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB

    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB;
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465166805 | took 2ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB

    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB;
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465166808 | took 2ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB

    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB;
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id)
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465166827 | took 18ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id)

    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id);
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465166827 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)

    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction);
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)" via JDBC [Key column 'mentor_introduction' doesn't exist in table]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)" via JDBC [Key column 'mentor_introduction' doesn't exist in table]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTableConstraints(SchemaCreatorImpl.java:393)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:351)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Key column 'mentor_introduction' doesn't exist in table
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee)
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465166832 | took 4ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee)

    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee);
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor)
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465166836 | took 3ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor)

    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor);
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id)
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465166845 | took 9ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id)

    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id);
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id)
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465166857 | took 12ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id)

    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id);
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id)
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465166871 | took 13ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id)

    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id);
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465166872 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)

    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id);
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)" via JDBC [Key column 'mentor_introduction' doesn't exist in table]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)" via JDBC [Key column 'mentor_introduction' doesn't exist in table]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createForeignKeys(SchemaCreatorImpl.java:303)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:250)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Key column 'mentor_introduction' doesn't exist in table
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 39 common frames omitted
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id)
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465166884 | took 11ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id)

    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id);
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id)
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465166894 | took 10ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id)

    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id);
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id)
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465166906 | took 11ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id)

    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id);
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7a25f8ee] for TypeConfiguration
2024-08-12 21:19:26 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-12 21:19:27 [main] [transactionId=] [threadId=] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'applicationController' defined in file [/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes/com/soongsil/CoffeeChat/controller/ApplicationController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'applicationService' defined in file [/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes/com/soongsil/CoffeeChat/service/ApplicationService.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'applicationRepository' defined in com.soongsil.CoffeeChat.repository.ApplicationRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.soongsil.CoffeeChat.repository.ApplicationRepository.findApplicationsByMentor(com.soongsil.CoffeeChat.entity.Mentor); Reason: Failed to create query for method public abstract java.util.List com.soongsil.CoffeeChat.repository.ApplicationRepository.findApplicationsByMentor(com.soongsil.CoffeeChat.entity.Mentor); Source must not be null or empty
2024-08-12 21:19:27 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-12 21:19:27 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@7a25f8ee] for TypeConfiguration
2024-08-12 21:19:27 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@42516ce2] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7a25f8ee]
2024-08-12 21:19:27 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-12 21:19:27 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-12 21:19:27 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2024-08-12 21:19:27 [main] [transactionId=] [threadId=] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-08-12 21:19:27 [main] [transactionId=] [threadId=] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'applicationController' defined in file [/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes/com/soongsil/CoffeeChat/controller/ApplicationController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'applicationService' defined in file [/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes/com/soongsil/CoffeeChat/service/ApplicationService.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'applicationRepository' defined in com.soongsil.CoffeeChat.repository.ApplicationRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.soongsil.CoffeeChat.repository.ApplicationRepository.findApplicationsByMentor(com.soongsil.CoffeeChat.entity.Mentor); Reason: Failed to create query for method public abstract java.util.List com.soongsil.CoffeeChat.repository.ApplicationRepository.findApplicationsByMentor(com.soongsil.CoffeeChat.entity.Mentor); Source must not be null or empty
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:798)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:959)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'applicationService' defined in file [/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes/com/soongsil/CoffeeChat/service/ApplicationService.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'applicationRepository' defined in com.soongsil.CoffeeChat.repository.ApplicationRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.soongsil.CoffeeChat.repository.ApplicationRepository.findApplicationsByMentor(com.soongsil.CoffeeChat.entity.Mentor); Reason: Failed to create query for method public abstract java.util.List com.soongsil.CoffeeChat.repository.ApplicationRepository.findApplicationsByMentor(com.soongsil.CoffeeChat.entity.Mentor); Source must not be null or empty
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:798)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'applicationRepository' defined in com.soongsil.CoffeeChat.repository.ApplicationRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.soongsil.CoffeeChat.repository.ApplicationRepository.findApplicationsByMentor(com.soongsil.CoffeeChat.entity.Mentor); Reason: Failed to create query for method public abstract java.util.List com.soongsil.CoffeeChat.repository.ApplicationRepository.findApplicationsByMentor(com.soongsil.CoffeeChat.entity.Mentor); Source must not be null or empty
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1773)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	... 33 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.soongsil.CoffeeChat.repository.ApplicationRepository.findApplicationsByMentor(com.soongsil.CoffeeChat.entity.Mentor); Reason: Failed to create query for method public abstract java.util.List com.soongsil.CoffeeChat.repository.ApplicationRepository.findApplicationsByMentor(com.soongsil.CoffeeChat.entity.Mentor); Source must not be null or empty
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.soongsil.CoffeeChat.repository.ApplicationRepository.findApplicationsByMentor(com.soongsil.CoffeeChat.entity.Mentor); Source must not be null or empty
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:106)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:124)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:258)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	... 56 common frames omitted
Caused by: java.lang.IllegalArgumentException: Source must not be null or empty
	at org.springframework.util.Assert.hasText(Assert.java:240)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:351)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:332)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.complete(JpaQueryCreator.java:165)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.complete(JpaQueryCreator.java:141)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.complete(JpaQueryCreator.java:1)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:95)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:81)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$QueryPreparer.<init>(PartTreeJpaQuery.java:218)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:103)
	... 60 common frames omitted
2024-08-12 21:20:25 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Starting CoffeeChatApplication using Java 17.0.11 with PID 27064 (/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes started by kimkyohwee in /Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server)
2024-08-12 21:20:25 [main] [transactionId=] [threadId=] DEBUG c.s.CoffeeChat.CoffeeChatApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-08-12 21:20:25 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 74 ms. Found 6 JPA repository interfaces.
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 771 ms
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@77cd235b
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@77cd235b
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@77cd235b
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@302da330
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@302da330
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3568ea59
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3568ea59
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@9f2376f
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@9f2376f
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@173b1af1
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@173b1af1
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@173b1af1
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@4a520f05
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@4a520f05
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@4a520f05
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@6f68756d
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@6f68756d
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@359865a2
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@5d9bb69b
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5d9bb69b
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@25d0b918
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2d38db6f
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@2d38db6f
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@2d38db6f
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@37cf91d8
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@37cf91d8
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@37cf91d8
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@571d0925
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@571d0925
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@18811c42
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@627acb38
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@627acb38
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@627acb38
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@32b95de
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@629cbb1
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@165aa43a
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7d977a20
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7d977a20
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@35ab4260
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@76134b9b
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@38667005
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@7ee64b53
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@1131aead
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@7d126083
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@76ffc17c
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@76ffc17c
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@3a8fb023
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@3a8fb023
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@26d73519
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@26d73519
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@48af5f38
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@48af5f38
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@40538370
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@40538370
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@71a2df1
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@18faaff6
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2a9e754e
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2a9e754e
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@760a2b6e
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@20a9f5fb
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6d617b07
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@340c57e0
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@340c57e0
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@137a4b54
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@7c9372ed
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@1acc873b
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@1acc873b
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@4ca970d5
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4ca970d5
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@dc8b2ff
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@dc8b2ff
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@dc8b2ff
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6a2badb1
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6a2badb1
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6a2badb1
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@14201a90
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@1308ef19
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@5b1ff8cd
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5b1ff8cd
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6cee903a
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6cee903a
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6cee903a
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@780ee3ad
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@2c2aab92
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@857f74a
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@857f74a
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@10a0d93a
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@10a0d93a
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@10a0d93a
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@1f3c5308
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1f3c5308
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@66b31d46
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@66b31d46
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@51e94b7d
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@51e94b7d
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@47162173
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@47162173
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@3a4f8e8a
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3a4f8e8a
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@4468fda8
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@5fc1e4fb
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@34e25492
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@34e25492
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7b3085a3
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@70022d44
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7b1c501d
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5abbb273
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@25d9291a
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@445058e8
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5d5574c7
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5a7a6d34
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@36871e98
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@983050b
2024-08-12 21:20:26 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@391b01c5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6e78177b)
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4ec37a42) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@798b36fd)
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@18ff1520) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@36120a8b)
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@63d66761) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@434a8938)
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@237cd264) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@51cd2d2)
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5521407f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@42b500aa)
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@71f056a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@64f6dd19)
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3b8b5b40) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5151accb)
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2e1ad7de) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7c56c911)
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@14fff5e7
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@7b3085a3`
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@b787274] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4ec616d6]
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@b787274] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6894436e]
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465227515 | took 37ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07

    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07;
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465227525 | took 9ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8

    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8;
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465227533 | took 8ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv

    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv;
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465227540 | took 6ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f

    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f;
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f" via JDBC [Can't DROP 'FKhthvsdqwyr3p97g7ek094r90f'; check that column/key exists]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f" via JDBC [Can't DROP 'FKhthvsdqwyr3p97g7ek094r90f'; check that column/key exists]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:470)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:242)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:244)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Can't DROP 'FKhthvsdqwyr3p97g7ek094r90f'; check that column/key exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465227547 | took 6ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389

    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389;
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465227554 | took 6ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1

    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1;
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465227558 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y

    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y;
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Application
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465227561 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Application

    drop table if exists Application;
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Introduction
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465227564 | took 2ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Introduction

    drop table if exists Introduction;
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Mentee
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465227567 | took 2ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Mentee

    drop table if exists Mentee;
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Mentor
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465227568 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Mentor

    drop table if exists Mentor;
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    drop table if exists Mentor" via JDBC [Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    drop table if exists Mentor" via JDBC [Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropTables(SchemaDropperImpl.java:377)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:253)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:244)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLException: Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists PossibleDate
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465227570 | took 2ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists PossibleDate

    drop table if exists PossibleDate;
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Refresh
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465227573 | took 2ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Refresh

    drop table if exists Refresh;
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists User
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465227576 | took 2ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists User

    drop table if exists User;
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465227589 | took 7ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB

    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB;
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465227596 | took 5ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB

    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB;
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465227600 | took 4ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB

    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB;
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465227601 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB

    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB;
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB" via JDBC [Table 'mentor' already exists]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB" via JDBC [Table 'mentor' already exists]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTables(SchemaCreatorImpl.java:420)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:340)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Table 'mentor' already exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465227605 | took 3ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB

    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB;
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465227607 | took 2ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB

    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB;
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465227611 | took 3ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB

    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB;
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id)
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465227614 | took 3ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id)

    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id);
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465227615 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)

    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction);
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)" via JDBC [Key column 'mentor_introduction' doesn't exist in table]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)" via JDBC [Key column 'mentor_introduction' doesn't exist in table]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTableConstraints(SchemaCreatorImpl.java:393)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:351)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Key column 'mentor_introduction' doesn't exist in table
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee)
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465227618 | took 2ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee)

    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee);
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor)
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465227621 | took 3ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor)

    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor);
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id)
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465227628 | took 6ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id)

    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id);
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id)
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465227644 | took 15ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id)

    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id);
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id)
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465227659 | took 14ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id)

    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id);
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465227659 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)

    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id);
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)" via JDBC [Key column 'mentor_introduction' doesn't exist in table]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)" via JDBC [Key column 'mentor_introduction' doesn't exist in table]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createForeignKeys(SchemaCreatorImpl.java:303)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:250)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Key column 'mentor_introduction' doesn't exist in table
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 39 common frames omitted
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id)
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465227670 | took 10ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id)

    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id);
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id)
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465227681 | took 10ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id)

    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id);
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id)
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465227708 | took 27ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id)

    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id);
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6894436e] for TypeConfiguration
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'applicationController' defined in file [/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes/com/soongsil/CoffeeChat/controller/ApplicationController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'applicationService' defined in file [/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes/com/soongsil/CoffeeChat/service/ApplicationService.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'applicationRepository' defined in com.soongsil.CoffeeChat.repository.ApplicationRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.soongsil.CoffeeChat.repository.ApplicationRepository.findApplicationByMentor(com.soongsil.CoffeeChat.entity.Mentor); Reason: Failed to create query for method public abstract java.util.List com.soongsil.CoffeeChat.repository.ApplicationRepository.findApplicationByMentor(com.soongsil.CoffeeChat.entity.Mentor); Source must not be null or empty
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6894436e] for TypeConfiguration
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@39329d81] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6894436e]
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-08-12 21:20:27 [main] [transactionId=] [threadId=] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'applicationController' defined in file [/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes/com/soongsil/CoffeeChat/controller/ApplicationController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'applicationService' defined in file [/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes/com/soongsil/CoffeeChat/service/ApplicationService.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'applicationRepository' defined in com.soongsil.CoffeeChat.repository.ApplicationRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.soongsil.CoffeeChat.repository.ApplicationRepository.findApplicationByMentor(com.soongsil.CoffeeChat.entity.Mentor); Reason: Failed to create query for method public abstract java.util.List com.soongsil.CoffeeChat.repository.ApplicationRepository.findApplicationByMentor(com.soongsil.CoffeeChat.entity.Mentor); Source must not be null or empty
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:798)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:959)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'applicationService' defined in file [/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes/com/soongsil/CoffeeChat/service/ApplicationService.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'applicationRepository' defined in com.soongsil.CoffeeChat.repository.ApplicationRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.soongsil.CoffeeChat.repository.ApplicationRepository.findApplicationByMentor(com.soongsil.CoffeeChat.entity.Mentor); Reason: Failed to create query for method public abstract java.util.List com.soongsil.CoffeeChat.repository.ApplicationRepository.findApplicationByMentor(com.soongsil.CoffeeChat.entity.Mentor); Source must not be null or empty
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:798)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'applicationRepository' defined in com.soongsil.CoffeeChat.repository.ApplicationRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.soongsil.CoffeeChat.repository.ApplicationRepository.findApplicationByMentor(com.soongsil.CoffeeChat.entity.Mentor); Reason: Failed to create query for method public abstract java.util.List com.soongsil.CoffeeChat.repository.ApplicationRepository.findApplicationByMentor(com.soongsil.CoffeeChat.entity.Mentor); Source must not be null or empty
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1773)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	... 33 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.soongsil.CoffeeChat.repository.ApplicationRepository.findApplicationByMentor(com.soongsil.CoffeeChat.entity.Mentor); Reason: Failed to create query for method public abstract java.util.List com.soongsil.CoffeeChat.repository.ApplicationRepository.findApplicationByMentor(com.soongsil.CoffeeChat.entity.Mentor); Source must not be null or empty
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.soongsil.CoffeeChat.repository.ApplicationRepository.findApplicationByMentor(com.soongsil.CoffeeChat.entity.Mentor); Source must not be null or empty
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:106)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:124)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:258)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	... 56 common frames omitted
Caused by: java.lang.IllegalArgumentException: Source must not be null or empty
	at org.springframework.util.Assert.hasText(Assert.java:240)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:351)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:332)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.complete(JpaQueryCreator.java:165)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.complete(JpaQueryCreator.java:141)
	at org.springframework.data.jpa.repository.query.JpaQueryCreator.complete(JpaQueryCreator.java:1)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:95)
	at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:81)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$QueryPreparer.<init>(PartTreeJpaQuery.java:218)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:103)
	... 60 common frames omitted
2024-08-12 21:26:08 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Starting CoffeeChatApplication using Java 17.0.11 with PID 28312 (/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes started by kimkyohwee in /Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server)
2024-08-12 21:26:08 [main] [transactionId=] [threadId=] DEBUG c.s.CoffeeChat.CoffeeChatApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-08-12 21:26:08 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 71 ms. Found 6 JPA repository interfaces.
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 744 ms
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@25d0b918
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@25d0b918
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@25d0b918
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2d38db6f
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2d38db6f
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2d38db6f
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@18811c42
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@627acb38
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@627acb38
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@627acb38
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@32b95de
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@32b95de
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@32b95de
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@629cbb1
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@629cbb1
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@629cbb1
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@165aa43a
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@165aa43a
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@165aa43a
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7d977a20
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7d977a20
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@35ab4260
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@35ab4260
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@76134b9b
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@76134b9b
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@76134b9b
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@38667005
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@7ee64b53
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7ee64b53
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1131aead
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7d126083
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7d126083
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7d126083
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@76ffc17c
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3a8fb023
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@26d73519
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@48af5f38
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@48af5f38
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@40538370
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@40538370
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@71a2df1
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@18faaff6
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2a9e754e
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@760a2b6e
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@20a9f5fb
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6d617b07
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@340c57e0
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@340c57e0
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@137a4b54
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@137a4b54
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7c9372ed
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7c9372ed
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1acc873b
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1acc873b
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4ca970d5
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4ca970d5
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@dc8b2ff
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6a2badb1
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@14201a90
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@14201a90
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1308ef19
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5b1ff8cd
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6cee903a
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@780ee3ad
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@780ee3ad
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2c2aab92
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@857f74a
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@10a0d93a
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@10a0d93a
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@1f3c5308
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1f3c5308
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@66b31d46
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@66b31d46
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@66b31d46
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@51e94b7d
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@51e94b7d
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@51e94b7d
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@47162173
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3a4f8e8a
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@4468fda8
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4468fda8
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5fc1e4fb
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5fc1e4fb
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5fc1e4fb
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@29aa4bc9
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6fd7aba8
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@6c519e47
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6c519e47
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@3ce7490a
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3ce7490a
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3ce7490a
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4768b95c
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4768b95c
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1530d0f2
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1530d0f2
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7573c7b5
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7573c7b5
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@73da7f08
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@73da7f08
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@717a8a76
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@717a8a76
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@62de73eb
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@97b5e6a
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@7b3085a3
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7b3085a3
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@f49e81a
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1b444b5
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@459bf87c
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5ae66c98
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@1aaf46e6
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@391d28ea
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@23df7fad
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4ab455e2
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2acca224
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3e2578ea
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@42b500aa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@71f056a)
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@64f6dd19) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3b8b5b40)
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5151accb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2e1ad7de)
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7c56c911) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1de6dc80)
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@418d1c03) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@395197cb)
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7305cfb1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@582c1f8d)
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@71687d8f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@443253a6)
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@191774d6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21ffc00e)
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@134955bb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45b08b17)
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@30a791a6
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@f49e81a`
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-12 21:26:09 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@52035328] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5614ae05]
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@52035328] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@27a23d87]
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465570302 | took 18ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07

    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07;
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465570309 | took 7ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8

    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8;
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465570315 | took 5ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv

    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv;
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465570319 | took 4ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f

    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f;
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f" via JDBC [Can't DROP 'FKhthvsdqwyr3p97g7ek094r90f'; check that column/key exists]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f" via JDBC [Can't DROP 'FKhthvsdqwyr3p97g7ek094r90f'; check that column/key exists]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:470)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:242)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:244)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Can't DROP 'FKhthvsdqwyr3p97g7ek094r90f'; check that column/key exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465570326 | took 5ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389

    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389;
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465570333 | took 6ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1

    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1;
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465570338 | took 4ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y

    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y;
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Application
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465570342 | took 4ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Application

    drop table if exists Application;
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Introduction
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465570345 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Introduction

    drop table if exists Introduction;
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Mentee
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465570349 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Mentee

    drop table if exists Mentee;
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Mentor
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465570350 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Mentor

    drop table if exists Mentor;
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    drop table if exists Mentor" via JDBC [Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    drop table if exists Mentor" via JDBC [Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropTables(SchemaDropperImpl.java:377)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:253)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:244)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLException: Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists PossibleDate
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465570353 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists PossibleDate

    drop table if exists PossibleDate;
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Refresh
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465570356 | took 2ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Refresh

    drop table if exists Refresh;
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists User
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465570359 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists User

    drop table if exists User;
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465570369 | took 4ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB

    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB;
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465570378 | took 8ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB

    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB;
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465570383 | took 4ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB

    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB;
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465570383 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB

    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB;
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB" via JDBC [Table 'mentor' already exists]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB" via JDBC [Table 'mentor' already exists]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTables(SchemaCreatorImpl.java:420)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:340)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Table 'mentor' already exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465570399 | took 15ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB

    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB;
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465570404 | took 4ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB

    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB;
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465570410 | took 5ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB

    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB;
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id)
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465570417 | took 6ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id)

    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id);
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465570418 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)

    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction);
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)" via JDBC [Key column 'mentor_introduction' doesn't exist in table]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)" via JDBC [Key column 'mentor_introduction' doesn't exist in table]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTableConstraints(SchemaCreatorImpl.java:393)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:351)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Key column 'mentor_introduction' doesn't exist in table
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee)
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465570423 | took 5ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee)

    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee);
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor)
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465570429 | took 5ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor)

    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor);
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id)
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465570442 | took 12ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id)

    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id);
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id)
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465570456 | took 13ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id)

    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id);
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id)
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465570469 | took 12ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id)

    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id);
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465570469 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)

    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id);
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)" via JDBC [Key column 'mentor_introduction' doesn't exist in table]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)" via JDBC [Key column 'mentor_introduction' doesn't exist in table]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createForeignKeys(SchemaCreatorImpl.java:303)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:250)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Key column 'mentor_introduction' doesn't exist in table
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 39 common frames omitted
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id)
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465570481 | took 11ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id)

    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id);
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id)
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465570491 | took 9ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id)

    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id);
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id)
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  p6spy - #1723465570503 | took 11ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id)

    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id);
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@27a23d87] for TypeConfiguration
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'applicationController' defined in file [/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes/com/soongsil/CoffeeChat/controller/ApplicationController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'applicationService' defined in file [/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes/com/soongsil/CoffeeChat/service/ApplicationService.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'mentorRepository' defined in com.soongsil.CoffeeChat.repository.Mentor.MentorRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.soongsil.CoffeeChat.repository.Mentor.MentorRepository.getMentorListByPart2(java.lang.String); Reason: Failed to create query for method public abstract java.util.List com.soongsil.CoffeeChat.repository.Mentor.MentorRepository.getMentorListByPart2(java.lang.String); No property 'part2' found for type 'Mentor'; Did you mean 'part'
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@27a23d87] for TypeConfiguration
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6e95c023] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@27a23d87]
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-08-12 21:26:10 [main] [transactionId=] [threadId=] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'applicationController' defined in file [/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes/com/soongsil/CoffeeChat/controller/ApplicationController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'applicationService' defined in file [/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes/com/soongsil/CoffeeChat/service/ApplicationService.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'mentorRepository' defined in com.soongsil.CoffeeChat.repository.Mentor.MentorRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.soongsil.CoffeeChat.repository.Mentor.MentorRepository.getMentorListByPart2(java.lang.String); Reason: Failed to create query for method public abstract java.util.List com.soongsil.CoffeeChat.repository.Mentor.MentorRepository.getMentorListByPart2(java.lang.String); No property 'part2' found for type 'Mentor'; Did you mean 'part'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:798)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:959)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'applicationService' defined in file [/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes/com/soongsil/CoffeeChat/service/ApplicationService.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'mentorRepository' defined in com.soongsil.CoffeeChat.repository.Mentor.MentorRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.soongsil.CoffeeChat.repository.Mentor.MentorRepository.getMentorListByPart2(java.lang.String); Reason: Failed to create query for method public abstract java.util.List com.soongsil.CoffeeChat.repository.Mentor.MentorRepository.getMentorListByPart2(java.lang.String); No property 'part2' found for type 'Mentor'; Did you mean 'part'
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:798)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1191)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mentorRepository' defined in com.soongsil.CoffeeChat.repository.Mentor.MentorRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.List com.soongsil.CoffeeChat.repository.Mentor.MentorRepository.getMentorListByPart2(java.lang.String); Reason: Failed to create query for method public abstract java.util.List com.soongsil.CoffeeChat.repository.Mentor.MentorRepository.getMentorListByPart2(java.lang.String); No property 'part2' found for type 'Mentor'; Did you mean 'part'
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1773)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	... 33 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.soongsil.CoffeeChat.repository.Mentor.MentorRepository.getMentorListByPart2(java.lang.String); Reason: Failed to create query for method public abstract java.util.List com.soongsil.CoffeeChat.repository.Mentor.MentorRepository.getMentorListByPart2(java.lang.String); No property 'part2' found for type 'Mentor'; Did you mean 'part'
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.soongsil.CoffeeChat.repository.Mentor.MentorRepository.getMentorListByPart2(java.lang.String); No property 'part2' found for type 'Mentor'; Did you mean 'part'
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:106)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:124)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:258)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)
	... 56 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property 'part2' found for type 'Mentor'; Did you mean 'part'
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:90)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:443)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:419)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:372)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:354)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:332)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:259)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:260)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:389)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:390)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:103)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:100)
	... 60 common frames omitted
2024-08-12 21:36:40 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Starting CoffeeChatApplication using Java 17.0.11 with PID 30728 (/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes started by kimkyohwee in /Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server)
2024-08-12 21:36:40 [main] [transactionId=] [threadId=] DEBUG c.s.CoffeeChat.CoffeeChatApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-08-12 21:36:40 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-12 21:36:40 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-12 21:36:40 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-12 21:36:40 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 62 ms. Found 6 JPA repository interfaces.
2024-08-12 21:36:40 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-12 21:36:40 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-12 21:36:40 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 21:36:40 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 21:36:40 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 21:36:40 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 21:36:40 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 21:36:40 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 21:36:40 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 659 ms
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7d977a20
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7d977a20
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@35ab4260
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@35ab4260
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@76134b9b
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@76134b9b
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@38667005
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@38667005
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@38667005
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@7ee64b53
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@7ee64b53
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@7ee64b53
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@76ffc17c
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@76ffc17c
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@3a8fb023
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@26d73519
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@26d73519
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@48af5f38
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@40538370
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@71a2df1
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@71a2df1
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@71a2df1
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@18faaff6
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@18faaff6
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@18faaff6
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2a9e754e
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@2a9e754e
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@2a9e754e
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@760a2b6e
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@760a2b6e
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@760a2b6e
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@20a9f5fb
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@20a9f5fb
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@20a9f5fb
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@6d617b07
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@6d617b07
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@340c57e0
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@340c57e0
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@137a4b54
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@137a4b54
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@137a4b54
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7c9372ed
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@1acc873b
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1acc873b
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4ca970d5
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@dc8b2ff
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@dc8b2ff
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@dc8b2ff
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6a2badb1
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@14201a90
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@1308ef19
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@5b1ff8cd
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@5b1ff8cd
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6cee903a
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6cee903a
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@780ee3ad
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@2c2aab92
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@857f74a
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@10a0d93a
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@1f3c5308
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@66b31d46
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@51e94b7d
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@51e94b7d
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@47162173
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@47162173
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@3a4f8e8a
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@3a4f8e8a
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4468fda8
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4468fda8
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@5fc1e4fb
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@5fc1e4fb
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@29aa4bc9
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6fd7aba8
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6c519e47
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6c519e47
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@3ce7490a
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4768b95c
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1530d0f2
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@7573c7b5
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@7573c7b5
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@73da7f08
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@717a8a76
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@62de73eb
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@62de73eb
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@97b5e6a
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@97b5e6a
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@29f95272
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@29f95272
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@29f95272
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@c754401
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@c754401
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@c754401
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1da53f4f
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4e7eba9f
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@2df71be0
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@2df71be0
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@b841713
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@b841713
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@b841713
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@3fef1e6b
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@4fee14b
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@11c3d22f
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@11c3d22f
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@3a54638b
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3a54638b
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3a54638b
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7d8f2eec
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7d8f2eec
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@e886caf
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@e886caf
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1d585fb
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1d585fb
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1884e671
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1884e671
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@1c7843c3
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@1c7843c3
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@5158a9f7
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@7c8f047a
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@23df7fad
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@23df7fad
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@4f581211
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@e0847a9
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@51743cc0
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@92e2c93
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6697f3d
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4a105556
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@3a72e2e8
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@42401b81
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@f1d1463
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7294a684
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@45b08b17) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6723e6b3)
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3883b5e9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@61becbcf)
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@20171cdc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@58f97013)
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7d70ba18) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6a07e6ca)
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@726ef6aa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6104691c)
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@195cbf5e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4cb82b09)
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@49665f92) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@b68932b)
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@77b27b57) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7adff6cb)
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@13ebccd) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4e80960a)
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@147375b3
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4f581211`
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6516181f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@40cb95c1]
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6516181f] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@54fbaa65]
2024-08-12 21:36:41 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] INFO  p6spy - #1723466202036 | took 38ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07

    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07;
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] INFO  p6spy - #1723466202042 | took 5ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8

    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8;
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] INFO  p6spy - #1723466202047 | took 5ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv

    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv;
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] INFO  p6spy - #1723466202052 | took 5ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f

    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f;
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f" via JDBC [Can't DROP 'FKhthvsdqwyr3p97g7ek094r90f'; check that column/key exists]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f" via JDBC [Can't DROP 'FKhthvsdqwyr3p97g7ek094r90f'; check that column/key exists]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:470)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:242)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:244)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Can't DROP 'FKhthvsdqwyr3p97g7ek094r90f'; check that column/key exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] INFO  p6spy - #1723466202063 | took 7ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389

    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389;
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] INFO  p6spy - #1723466202066 | took 2ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1

    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1;
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] INFO  p6spy - #1723466202069 | took 2ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y

    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y;
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Application
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] INFO  p6spy - #1723466202073 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Application

    drop table if exists Application;
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Introduction
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] INFO  p6spy - #1723466202076 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Introduction

    drop table if exists Introduction;
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Mentee
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] INFO  p6spy - #1723466202089 | took 13ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Mentee

    drop table if exists Mentee;
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Mentor
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] INFO  p6spy - #1723466202090 | took 1ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Mentor

    drop table if exists Mentor;
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    drop table if exists Mentor" via JDBC [Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    drop table if exists Mentor" via JDBC [Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropTables(SchemaDropperImpl.java:377)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:253)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:244)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLException: Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists PossibleDate
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] INFO  p6spy - #1723466202094 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists PossibleDate

    drop table if exists PossibleDate;
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Refresh
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] INFO  p6spy - #1723466202098 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Refresh

    drop table if exists Refresh;
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists User
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] INFO  p6spy - #1723466202100 | took 1ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists User

    drop table if exists User;
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] INFO  p6spy - #1723466202108 | took 5ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB

    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB;
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] INFO  p6spy - #1723466202112 | took 4ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB

    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB;
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] INFO  p6spy - #1723466202117 | took 4ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB

    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB;
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] INFO  p6spy - #1723466202118 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB

    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB;
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB" via JDBC [Table 'mentor' already exists]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB" via JDBC [Table 'mentor' already exists]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTables(SchemaCreatorImpl.java:420)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:340)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Table 'mentor' already exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] INFO  p6spy - #1723466202124 | took 5ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB

    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB;
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] INFO  p6spy - #1723466202128 | took 3ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB

    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB;
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] INFO  p6spy - #1723466202133 | took 4ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB

    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB;
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id)
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] INFO  p6spy - #1723466202139 | took 6ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id)

    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id);
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] INFO  p6spy - #1723466202139 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)

    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction);
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)" via JDBC [Key column 'mentor_introduction' doesn't exist in table]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)" via JDBC [Key column 'mentor_introduction' doesn't exist in table]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTableConstraints(SchemaCreatorImpl.java:393)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:351)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Key column 'mentor_introduction' doesn't exist in table
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee)
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] INFO  p6spy - #1723466202144 | took 4ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee)

    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee);
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor)
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] INFO  p6spy - #1723466202147 | took 3ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor)

    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor);
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id)
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] INFO  p6spy - #1723466202157 | took 9ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id)

    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id);
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id)
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] INFO  p6spy - #1723466202171 | took 13ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id)

    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id);
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id)
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] INFO  p6spy - #1723466202182 | took 11ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id)

    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id);
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] INFO  p6spy - #1723466202183 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)

    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id);
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)" via JDBC [Key column 'mentor_introduction' doesn't exist in table]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)" via JDBC [Key column 'mentor_introduction' doesn't exist in table]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createForeignKeys(SchemaCreatorImpl.java:303)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:250)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Key column 'mentor_introduction' doesn't exist in table
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 39 common frames omitted
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id)
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] INFO  p6spy - #1723466202193 | took 9ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id)

    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id);
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id)
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] INFO  p6spy - #1723466202201 | took 8ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id)

    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id);
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id)
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] INFO  p6spy - #1723466202213 | took 12ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id)

    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id);
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@54fbaa65] for TypeConfiguration
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-12 21:36:42 [main] [transactionId=] [threadId=] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-12 21:36:43 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@323a47fe, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@eb9b76c, org.springframework.security.web.context.SecurityContextHolderFilter@66c70e18, org.springframework.security.web.header.HeaderWriterFilter@39ae0bff, org.springframework.web.filter.CorsFilter@776eedad, com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter@6752d7fc, org.springframework.security.web.authentication.logout.LogoutFilter@12d49ede, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@46933c4, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@228ed68c, com.soongsil.CoffeeChat.config.jwt.JWTFilter@7b7695f, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@52418721, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@4476ac12, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@48515dfc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@8f2513c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@447522b4, org.springframework.security.web.session.SessionManagementFilter@29e9d47b, org.springframework.security.web.access.ExceptionTranslationFilter@3f7e72a7, org.springframework.security.web.access.intercept.AuthorizationFilter@76c1ede3]
2024-08-12 21:36:43 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-08-12 21:36:43 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/v3/api-docs/**']
2024-08-12 21:36:43 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-08-12 21:36:43 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-ui/**']
2024-08-12 21:36:43 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-08-12 21:36:43 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-resources/**']
2024-08-12 21:36:43 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-08-12 21:36:43 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2024-08-12 21:36:43 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Started CoffeeChatApplication in 2.923 seconds (process running for 3.199)
2024-08-12 21:36:58 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-12 21:36:58 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-08-12 21:36:58 [http-nio-8080-exec-1] [transactionId=] [threadId=] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2024-08-12 21:36:59 [http-nio-8080-exec-9] [transactionId=] [threadId=] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 190 ms
2024-08-12 21:37:24 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-12 21:37:24 [SpringApplicationShutdownHook] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@54fbaa65] for TypeConfiguration
2024-08-12 21:37:24 [SpringApplicationShutdownHook] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3eaadf97] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@54fbaa65]
2024-08-12 21:37:24 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-12 21:37:24 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-12 22:46:32 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Starting CoffeeChatApplication using Java 17.0.11 with PID 45961 (/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes started by kimkyohwee in /Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server)
2024-08-12 22:46:32 [main] [transactionId=] [threadId=] DEBUG c.s.CoffeeChat.CoffeeChatApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-08-12 22:46:32 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 70 ms. Found 6 JPA repository interfaces.
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 762 ms
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@18811c42
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@18811c42
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@627acb38
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@627acb38
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@32b95de
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@32b95de
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@32b95de
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@629cbb1
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@629cbb1
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@629cbb1
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7d977a20
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7d977a20
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@35ab4260
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@76134b9b
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@76134b9b
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@38667005
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7ee64b53
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1131aead
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@1131aead
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1131aead
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@7d126083
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@7d126083
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@7d126083
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@76ffc17c
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@76ffc17c
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@76ffc17c
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3a8fb023
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3a8fb023
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3a8fb023
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@26d73519
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@26d73519
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@26d73519
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@48af5f38
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@48af5f38
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@40538370
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@40538370
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@71a2df1
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@71a2df1
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@71a2df1
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@18faaff6
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@2a9e754e
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@2a9e754e
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@760a2b6e
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@20a9f5fb
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@20a9f5fb
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@20a9f5fb
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6d617b07
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@340c57e0
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@137a4b54
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@7c9372ed
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@7c9372ed
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1acc873b
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1acc873b
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@4ca970d5
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@dc8b2ff
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6a2badb1
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@14201a90
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@1308ef19
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@5b1ff8cd
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6cee903a
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6cee903a
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@780ee3ad
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@780ee3ad
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2c2aab92
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2c2aab92
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@857f74a
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@857f74a
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@10a0d93a
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@10a0d93a
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1f3c5308
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@66b31d46
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@51e94b7d
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@51e94b7d
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@47162173
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3a4f8e8a
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4468fda8
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@5fc1e4fb
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@5fc1e4fb
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@29aa4bc9
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6fd7aba8
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@6c519e47
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6c519e47
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@3ce7490a
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3ce7490a
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@4768b95c
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@4768b95c
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@4768b95c
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@1530d0f2
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@1530d0f2
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@1530d0f2
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@7573c7b5
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@73da7f08
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@717a8a76
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@717a8a76
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@62de73eb
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@62de73eb
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@62de73eb
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@97b5e6a
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@29f95272
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@c754401
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@c754401
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@1da53f4f
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1da53f4f
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1da53f4f
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4e7eba9f
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4e7eba9f
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@2df71be0
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@2df71be0
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@b841713
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@b841713
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@3fef1e6b
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@3fef1e6b
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@4fee14b
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4fee14b
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@11c3d22f
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3a54638b
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@6533629
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6533629
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@223cbf0d
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4a4ff5ed
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5ddb302
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4b7ab7ab
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@cf9bd1e
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@39acd1f1
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@51813065
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4f581211
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@e0847a9
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4cd90c36
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7305cfb1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@582c1f8d)
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@71687d8f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@443253a6)
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@191774d6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@21ffc00e)
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@134955bb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45b08b17)
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6723e6b3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3883b5e9)
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@61becbcf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@20171cdc)
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@58f97013) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7d70ba18)
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6a07e6ca) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@726ef6aa)
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6104691c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@195cbf5e)
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@5fd4e67f
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@223cbf0d`
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-12 22:46:33 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4eb48298] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2d3bb944]
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4eb48298] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5af47414]
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723470394382 | took 50ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07

    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07;
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723470394394 | took 11ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8

    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8;
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723470394401 | took 7ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv

    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv;
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723470394409 | took 8ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f

    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f;
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f" via JDBC [Can't DROP 'FKhthvsdqwyr3p97g7ek094r90f'; check that column/key exists]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f" via JDBC [Can't DROP 'FKhthvsdqwyr3p97g7ek094r90f'; check that column/key exists]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:470)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:242)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:244)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Can't DROP 'FKhthvsdqwyr3p97g7ek094r90f'; check that column/key exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723470394418 | took 7ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389

    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389;
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723470394425 | took 6ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1

    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1;
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723470394430 | took 5ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y

    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y;
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Application
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723470394436 | took 5ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Application

    drop table if exists Application;
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Introduction
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723470394439 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Introduction

    drop table if exists Introduction;
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Mentee
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723470394442 | took 2ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Mentee

    drop table if exists Mentee;
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Mentor
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723470394443 | took 0ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Mentor

    drop table if exists Mentor;
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    drop table if exists Mentor" via JDBC [Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    drop table if exists Mentor" via JDBC [Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropTables(SchemaDropperImpl.java:377)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:253)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:244)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLException: Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists PossibleDate
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723470394446 | took 2ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists PossibleDate

    drop table if exists PossibleDate;
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Refresh
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723470394449 | took 2ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Refresh

    drop table if exists Refresh;
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists User
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723470394453 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists User

    drop table if exists User;
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723470394462 | took 6ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB

    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB;
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723470394469 | took 6ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB

    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB;
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723470394475 | took 5ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB

    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB;
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723470394476 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB

    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB;
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB" via JDBC [Table 'mentor' already exists]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB" via JDBC [Table 'mentor' already exists]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTables(SchemaCreatorImpl.java:420)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:340)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Table 'mentor' already exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723470394479 | took 2ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB

    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB;
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723470394481 | took 2ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB

    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB;
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723470394485 | took 2ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB

    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB;
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id)
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723470394490 | took 4ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id)

    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id);
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723470394490 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)

    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction);
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)" via JDBC [Key column 'mentor_introduction' doesn't exist in table]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)" via JDBC [Key column 'mentor_introduction' doesn't exist in table]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTableConstraints(SchemaCreatorImpl.java:393)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:351)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Key column 'mentor_introduction' doesn't exist in table
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee)
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723470394493 | took 2ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee)

    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee);
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor)
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723470394497 | took 3ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor)

    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor);
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id)
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723470394512 | took 14ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id)

    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id);
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id)
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723470394525 | took 13ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id)

    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id);
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id)
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723470394538 | took 12ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id)

    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id);
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723470394539 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)

    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id);
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)" via JDBC [Key column 'mentor_introduction' doesn't exist in table]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)" via JDBC [Key column 'mentor_introduction' doesn't exist in table]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createForeignKeys(SchemaCreatorImpl.java:303)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:250)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Key column 'mentor_introduction' doesn't exist in table
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 39 common frames omitted
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id)
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723470394550 | took 10ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id)

    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id);
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id)
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723470394561 | took 11ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id)

    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id);
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id)
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723470394577 | took 16ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id)

    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id);
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5af47414] for TypeConfiguration
2024-08-12 22:46:34 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-12 22:46:35 [main] [transactionId=] [threadId=] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-12 22:46:35 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@74a15f4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@125c443, org.springframework.security.web.context.SecurityContextHolderFilter@69bf351e, org.springframework.security.web.header.HeaderWriterFilter@6ea48ca1, org.springframework.web.filter.CorsFilter@71d94ab, com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter@21f3a99c, org.springframework.security.web.authentication.logout.LogoutFilter@328a1843, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@150a201b, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@27af14bd, com.soongsil.CoffeeChat.config.jwt.JWTFilter@76c1ede3, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@48515dfc, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@59e938a4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@654e793f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@29e9d47b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@323a47fe, org.springframework.security.web.session.SessionManagementFilter@52d04234, org.springframework.security.web.access.ExceptionTranslationFilter@216fe151, org.springframework.security.web.access.intercept.AuthorizationFilter@794ffe22]
2024-08-12 22:46:35 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-08-12 22:46:35 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/v3/api-docs/**']
2024-08-12 22:46:35 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-08-12 22:46:35 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-ui/**']
2024-08-12 22:46:35 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-08-12 22:46:35 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-resources/**']
2024-08-12 22:46:35 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-08-12 22:46:35 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2024-08-12 22:46:35 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Started CoffeeChatApplication in 3.232 seconds (process running for 3.558)
2024-08-12 22:46:40 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-12 22:46:40 [SpringApplicationShutdownHook] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5af47414] for TypeConfiguration
2024-08-12 22:46:40 [SpringApplicationShutdownHook] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@41afa0e] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5af47414]
2024-08-12 22:46:40 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-12 22:46:40 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-13 00:07:56 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Starting CoffeeChatApplication using Java 17.0.11 with PID 63803 (/Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server/out/production/classes started by kimkyohwee in /Users/kimkyohwee/Documents/BE프로젝트/CoffeeChat/CoffeeChat-Server)
2024-08-13 00:07:56 [main] [transactionId=] [threadId=] DEBUG c.s.CoffeeChat.CoffeeChatApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-08-13 00:07:56 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-13 00:07:56 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-13 00:07:56 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-13 00:07:56 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 72 ms. Found 6 JPA repository interfaces.
2024-08-13 00:07:56 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-13 00:07:56 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-13 00:07:56 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 00:07:56 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 00:07:56 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 00:07:56 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 00:07:56 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 00:07:56 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 00:07:56 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-08-13 00:07:56 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-13 00:07:56 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-13 00:07:56 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-13 00:07:56 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-08-13 00:07:56 [main] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-13 00:07:56 [main] [transactionId=] [threadId=] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 786 ms
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@389a1e34
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@389a1e34
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@389a1e34
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@204b0f07
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@204b0f07
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@6f68756d
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@6f68756d
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@359865a2
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@359865a2
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5d9bb69b
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5d9bb69b
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5d9bb69b
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@25d0b918
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@25d0b918
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@25d0b918
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@2d38db6f
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@2d38db6f
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@37cf91d8
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@571d0925
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@18811c42
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@18811c42
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@18811c42
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@627acb38
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@627acb38
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@32b95de
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@32b95de
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@629cbb1
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@629cbb1
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@629cbb1
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@165aa43a
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7d977a20
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@35ab4260
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@35ab4260
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@35ab4260
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@76134b9b
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@38667005
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@7ee64b53
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@1131aead
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1131aead
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7d126083
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7d126083
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@76ffc17c
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@3a8fb023
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@26d73519
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@48af5f38
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@40538370
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@71a2df1
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@18faaff6
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@18faaff6
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@2a9e754e
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@2a9e754e
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@760a2b6e
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@760a2b6e
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@20a9f5fb
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@20a9f5fb
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@6d617b07
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@6d617b07
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@340c57e0
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@137a4b54
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@7c9372ed
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@7c9372ed
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1acc873b
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4ca970d5
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@dc8b2ff
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@6a2badb1
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@6a2badb1
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@14201a90
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1308ef19
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@5b1ff8cd
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5b1ff8cd
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@6cee903a
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6cee903a
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@780ee3ad
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@780ee3ad
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@780ee3ad
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@2c2aab92
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@2c2aab92
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@2c2aab92
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@857f74a
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@10a0d93a
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@1f3c5308
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1f3c5308
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@66b31d46
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@66b31d46
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@66b31d46
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@51e94b7d
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@47162173
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@3a4f8e8a
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3a4f8e8a
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@4468fda8
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@4468fda8
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@4468fda8
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@5fc1e4fb
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@5fc1e4fb
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@29aa4bc9
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@29aa4bc9
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6fd7aba8
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6fd7aba8
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6c519e47
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6c519e47
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@3ce7490a
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3ce7490a
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@4768b95c
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1530d0f2
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@6630dd28
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@6630dd28
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@5d5574c7
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5a7a6d34
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@36871e98
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@70d687b8
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6533629
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@f49e81a
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1b444b5
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@459bf87c
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5ae66c98
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6684589a
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@63d66761) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@434a8938)
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@237cd264) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@51cd2d2)
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5521407f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@42b500aa)
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@71f056a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@64f6dd19)
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b8b5b40) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5151accb)
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2e1ad7de) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7c56c911)
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1de6dc80) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@418d1c03)
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@395197cb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7305cfb1)
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@582c1f8d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@71687d8f)
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@5454be
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@5d5574c7`
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4c418496] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@12d35bc9]
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4c418496] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6d7d0946]
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] INFO  p6spy - #1723475277858 | took 42ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07

    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07;
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] INFO  p6spy - #1723475277861 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8

    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8;
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] INFO  p6spy - #1723475277865 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv

    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv;
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] INFO  p6spy - #1723475277871 | took 6ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f

    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f;
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f" via JDBC [Can't DROP 'FKhthvsdqwyr3p97g7ek094r90f'; check that column/key exists]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f" via JDBC [Can't DROP 'FKhthvsdqwyr3p97g7ek094r90f'; check that column/key exists]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:470)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:242)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:244)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Can't DROP 'FKhthvsdqwyr3p97g7ek094r90f'; check that column/key exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] INFO  p6spy - #1723475277875 | took 2ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389

    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389;
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] INFO  p6spy - #1723475277878 | took 2ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1

    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1;
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] INFO  p6spy - #1723475277881 | took 2ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y

    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y;
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Application
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] INFO  p6spy - #1723475277900 | took 17ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Application

    drop table if exists Application;
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Introduction
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] INFO  p6spy - #1723475277903 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Introduction

    drop table if exists Introduction;
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Mentee
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] INFO  p6spy - #1723475277907 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Mentee

    drop table if exists Mentee;
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Mentor
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] INFO  p6spy - #1723475277908 | took 1ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Mentor

    drop table if exists Mentor;
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    drop table if exists Mentor" via JDBC [Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    drop table if exists Mentor" via JDBC [Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropTables(SchemaDropperImpl.java:377)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:253)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:244)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLException: Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists PossibleDate
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] INFO  p6spy - #1723475277911 | took 2ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists PossibleDate

    drop table if exists PossibleDate;
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Refresh
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] INFO  p6spy - #1723475277914 | took 2ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Refresh

    drop table if exists Refresh;
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists User
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] INFO  p6spy - #1723475277918 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists User

    drop table if exists User;
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] INFO  p6spy - #1723475277926 | took 3ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB

    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB;
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] INFO  p6spy - #1723475277928 | took 2ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB

    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB;
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] INFO  p6spy - #1723475277930 | took 1ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB

    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB;
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] INFO  p6spy - #1723475277931 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB

    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB;
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB" via JDBC [Table 'mentor' already exists]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB" via JDBC [Table 'mentor' already exists]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTables(SchemaCreatorImpl.java:420)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:340)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Table 'mentor' already exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] INFO  p6spy - #1723475277935 | took 3ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB

    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB;
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] INFO  p6spy - #1723475277937 | took 2ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB

    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB;
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] INFO  p6spy - #1723475277943 | took 5ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB

    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB;
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id)
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] INFO  p6spy - #1723475277951 | took 7ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id)

    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id);
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] INFO  p6spy - #1723475277951 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)

    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction);
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)" via JDBC [Key column 'mentor_introduction' doesn't exist in table]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)" via JDBC [Key column 'mentor_introduction' doesn't exist in table]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTableConstraints(SchemaCreatorImpl.java:393)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:351)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Key column 'mentor_introduction' doesn't exist in table
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee)
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] INFO  p6spy - #1723475277955 | took 3ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee)

    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee);
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor)
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] INFO  p6spy - #1723475277958 | took 3ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor)

    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor);
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id)
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] INFO  p6spy - #1723475277966 | took 7ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id)

    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id);
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id)
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] INFO  p6spy - #1723475277979 | took 12ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id)

    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id);
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id)
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] INFO  p6spy - #1723475277995 | took 16ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id)

    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id);
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] INFO  p6spy - #1723475277996 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)

    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id);
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)" via JDBC [Key column 'mentor_introduction' doesn't exist in table]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)" via JDBC [Key column 'mentor_introduction' doesn't exist in table]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createForeignKeys(SchemaCreatorImpl.java:303)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:250)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Key column 'mentor_introduction' doesn't exist in table
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 39 common frames omitted
2024-08-13 00:07:57 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id)
2024-08-13 00:07:58 [main] [transactionId=] [threadId=] INFO  p6spy - #1723475278008 | took 12ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id)

    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id);
2024-08-13 00:07:58 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id)
2024-08-13 00:07:58 [main] [transactionId=] [threadId=] INFO  p6spy - #1723475278023 | took 14ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id)

    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id);
2024-08-13 00:07:58 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id)
2024-08-13 00:07:58 [main] [transactionId=] [threadId=] INFO  p6spy - #1723475278056 | took 32ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo-local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id)

    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id);
2024-08-13 00:07:58 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6d7d0946] for TypeConfiguration
2024-08-13 00:07:58 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-13 00:07:58 [main] [transactionId=] [threadId=] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-13 00:07:59 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4d7909bd, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5bddb619, org.springframework.security.web.context.SecurityContextHolderFilter@16be2c40, org.springframework.security.web.header.HeaderWriterFilter@41f4693a, org.springframework.web.filter.CorsFilter@b729651, com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter@14c5d220, org.springframework.security.web.authentication.logout.LogoutFilter@587107c, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@2a85e4f4, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@463a0302, com.soongsil.CoffeeChat.config.jwt.JWTFilter@11f415e4, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@4cf5db07, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@27af14bd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@51bab787, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@24fc91a3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@38f0de07, org.springframework.security.web.session.SessionManagementFilter@54ff871a, org.springframework.security.web.access.ExceptionTranslationFilter@4d555b85, org.springframework.security.web.access.intercept.AuthorizationFilter@379cfc77]
2024-08-13 00:07:59 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-08-13 00:07:59 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/v3/api-docs/**']
2024-08-13 00:07:59 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-08-13 00:07:59 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-ui/**']
2024-08-13 00:07:59 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-08-13 00:07:59 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-resources/**']
2024-08-13 00:07:59 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-08-13 00:07:59 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2024-08-13 00:07:59 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Started CoffeeChatApplication in 3.313 seconds (process running for 3.662)
2024-08-13 00:08:04 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-13 00:08:04 [SpringApplicationShutdownHook] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6d7d0946] for TypeConfiguration
2024-08-13 00:08:04 [SpringApplicationShutdownHook] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5c47cb06] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6d7d0946]
2024-08-13 00:08:04 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-13 00:08:04 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-13 17:05:55 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Starting CoffeeChatApplication using Java 17.0.9 with PID 6719 (/Users/oxdjww/Desktop/Repo/COGO-DEV-server/build/classes/java/main started by oxdjww in /Users/oxdjww/Desktop/Repo/COGO-DEV-server)
2024-08-13 17:05:55 [main] [transactionId=] [threadId=] DEBUG c.s.CoffeeChat.CoffeeChatApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-08-13 17:05:55 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 127 ms. Found 6 JPA repository interfaces.
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1400 ms
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@2d38db6f
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@2d38db6f
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@37cf91d8
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@37cf91d8
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@37cf91d8
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@571d0925
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@571d0925
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@571d0925
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@18811c42
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@18811c42
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@627acb38
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@32b95de
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@629cbb1
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@629cbb1
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@629cbb1
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@165aa43a
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@165aa43a
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@165aa43a
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7d977a20
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7d977a20
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7d977a20
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@35ab4260
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@35ab4260
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@35ab4260
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@76134b9b
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@76134b9b
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@38667005
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@38667005
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@7ee64b53
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@7ee64b53
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@7ee64b53
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1131aead
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@7d126083
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7d126083
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@76ffc17c
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@3a8fb023
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@3a8fb023
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@3a8fb023
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@26d73519
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@48af5f38
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@40538370
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@71a2df1
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@71a2df1
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@18faaff6
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@18faaff6
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2a9e754e
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@760a2b6e
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@20a9f5fb
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6d617b07
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@340c57e0
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@137a4b54
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@7c9372ed
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@7c9372ed
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1acc873b
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1acc873b
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@4ca970d5
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@4ca970d5
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@dc8b2ff
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@dc8b2ff
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@6a2badb1
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@6a2badb1
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@14201a90
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1308ef19
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@5b1ff8cd
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@5b1ff8cd
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@6cee903a
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@780ee3ad
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2c2aab92
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@857f74a
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@857f74a
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@10a0d93a
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1f3c5308
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@66b31d46
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@66b31d46
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@51e94b7d
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@51e94b7d
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@47162173
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@47162173
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@47162173
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3a4f8e8a
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3a4f8e8a
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3a4f8e8a
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4468fda8
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5fc1e4fb
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@29aa4bc9
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@29aa4bc9
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@6fd7aba8
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@6fd7aba8
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@6fd7aba8
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@6c519e47
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3ce7490a
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@4768b95c
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@4768b95c
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@1530d0f2
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1530d0f2
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1530d0f2
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@7573c7b5
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@7573c7b5
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@73da7f08
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@73da7f08
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@717a8a76
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@717a8a76
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@62de73eb
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@62de73eb
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@97b5e6a
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@97b5e6a
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@29f95272
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@c754401
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@7b1c501d
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7b1c501d
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@459bf87c
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5ae66c98
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@1aaf46e6
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@391d28ea
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@23df7fad
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4ab455e2
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2acca224
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7ac685ef
2024-08-13 17:05:56 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@223cbf0d
2024-08-13 17:05:57 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-13 17:05:57 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-13 17:05:57 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4cf5d999
2024-08-13 17:05:57 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-13 17:05:57 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-13 17:05:57 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@64f6dd19) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3b8b5b40)
2024-08-13 17:05:57 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5151accb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2e1ad7de)
2024-08-13 17:05:57 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7c56c911) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1de6dc80)
2024-08-13 17:05:57 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@418d1c03) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@395197cb)
2024-08-13 17:05:57 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7305cfb1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@582c1f8d)
2024-08-13 17:05:57 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@71687d8f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@443253a6)
2024-08-13 17:05:57 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@191774d6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21ffc00e)
2024-08-13 17:05:57 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@134955bb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45b08b17)
2024-08-13 17:05:57 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6723e6b3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3883b5e9)
2024-08-13 17:05:57 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-13 17:05:57 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-13 17:05:57 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-13 17:05:57 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-13 17:05:57 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-13 17:05:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@5981f2c6
2024-08-13 17:05:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@459bf87c`
2024-08-13 17:05:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-08-13 17:05:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-08-13 17:05:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-08-13 17:05:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-13 17:05:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-13 17:05:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-13 17:05:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-13 17:05:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-13 17:05:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-13 17:05:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-13 17:05:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-13 17:05:57 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-13 17:05:57 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@54970127] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3c4c7e51]
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@54970127] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2cbae0f1]
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536358212 | took 120ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07

    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07;
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536358223 | took 10ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8

    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8;
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536358231 | took 7ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv

    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv;
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv" via JDBC [Can't DROP 'FKohjibsdevd7mwn5kssk0lf1fv'; check that column/key exists]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv" via JDBC [Can't DROP 'FKohjibsdevd7mwn5kssk0lf1fv'; check that column/key exists]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:470)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:242)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:244)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Can't DROP 'FKohjibsdevd7mwn5kssk0lf1fv'; check that column/key exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536358248 | took 15ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f

    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f;
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536358257 | took 9ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389

    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389;
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536358271 | took 13ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1

    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1;
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536358295 | took 23ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y

    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y;
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Application
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536358322 | took 27ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Application

    drop table if exists Application;
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Introduction
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536358351 | took 28ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Introduction

    drop table if exists Introduction;
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Mentee
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536358362 | took 10ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Mentee

    drop table if exists Mentee;
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Mentor
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536358366 | took 2ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Mentor

    drop table if exists Mentor;
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    drop table if exists Mentor" via JDBC [Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    drop table if exists Mentor" via JDBC [Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropTables(SchemaDropperImpl.java:377)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:253)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:244)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLException: Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists PossibleDate
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536358372 | took 5ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists PossibleDate

    drop table if exists PossibleDate;
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Refresh
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536358379 | took 6ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Refresh

    drop table if exists Refresh;
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists User
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536358385 | took 5ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists User

    drop table if exists User;
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536358400 | took 8ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB

    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB;
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536358407 | took 5ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB

    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB;
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536358413 | took 5ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB

    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB;
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536358414 | took 1ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB

    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB;
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB" via JDBC [Table 'mentor' already exists]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB" via JDBC [Table 'mentor' already exists]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTables(SchemaCreatorImpl.java:420)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:340)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Table 'mentor' already exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536358433 | took 18ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB

    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB;
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536358442 | took 7ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB

    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB;
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536358450 | took 7ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB

    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB;
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id)
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536358468 | took 17ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id)

    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id);
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536358469 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)

    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction);
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)" via JDBC [Duplicate key name 'UK_q1bnlwuhs82q8yg9sugcv9i2t']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)" via JDBC [Duplicate key name 'UK_q1bnlwuhs82q8yg9sugcv9i2t']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTableConstraints(SchemaCreatorImpl.java:393)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:351)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Duplicate key name 'UK_q1bnlwuhs82q8yg9sugcv9i2t'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee)
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536358479 | took 9ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee)

    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee);
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor)
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536358507 | took 27ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor)

    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor);
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id)
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536358565 | took 57ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id)

    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id);
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id)
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536358598 | took 32ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id)

    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id);
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id)
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536358620 | took 22ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id)

    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id);
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536358638 | took 17ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)

    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id);
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id)
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536358652 | took 13ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id)

    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id);
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id)
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536358666 | took 13ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id)

    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id);
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id)
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536358683 | took 17ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id)

    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id);
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2cbae0f1] for TypeConfiguration
2024-08-13 17:05:58 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-13 17:05:59 [main] [transactionId=] [threadId=] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-13 17:06:00 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5bddb619, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@b729651, org.springframework.security.web.context.SecurityContextHolderFilter@3e51beda, org.springframework.security.web.header.HeaderWriterFilter@33116b8e, org.springframework.web.filter.CorsFilter@14c5d220, com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter@11f415e4, org.springframework.security.web.authentication.logout.LogoutFilter@47fb038d, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@3b3fa4c0, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@150a201b, com.soongsil.CoffeeChat.config.jwt.JWTFilter@27af14bd, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@216fe151, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@38f0de07, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@24fc91a3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@43c76550, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@21e5feb, org.springframework.security.web.session.SessionManagementFilter@4c94621d, org.springframework.security.web.access.ExceptionTranslationFilter@1132c14, org.springframework.security.web.access.intercept.AuthorizationFilter@c3fd72]
2024-08-13 17:06:00 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-08-13 17:06:00 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/v3/api-docs/**']
2024-08-13 17:06:00 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-08-13 17:06:00 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-ui/**']
2024-08-13 17:06:00 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-08-13 17:06:00 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-resources/**']
2024-08-13 17:06:00 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-08-13 17:06:00 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2024-08-13 17:06:00 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Started CoffeeChatApplication in 6.324 seconds (process running for 8.004)
2024-08-13 17:06:21 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-13 17:06:21 [SpringApplicationShutdownHook] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2cbae0f1] for TypeConfiguration
2024-08-13 17:06:21 [SpringApplicationShutdownHook] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5d02acd1] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2cbae0f1]
2024-08-13 17:06:21 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-13 17:06:21 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-13 17:12:51 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Starting CoffeeChatApplication using Java 17.0.9 with PID 7090 (/Users/oxdjww/Desktop/Repo/COGO-DEV-server/build/classes/java/main started by oxdjww in /Users/oxdjww/Desktop/Repo/COGO-DEV-server)
2024-08-13 17:12:51 [main] [transactionId=] [threadId=] DEBUG c.s.CoffeeChat.CoffeeChatApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-08-13 17:12:51 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-13 17:12:52 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-13 17:12:52 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-13 17:12:52 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 154 ms. Found 6 JPA repository interfaces.
2024-08-13 17:12:52 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-13 17:12:52 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1528 ms
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@37cf91d8
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@37cf91d8
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@37cf91d8
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@571d0925
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@571d0925
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@32b95de
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@32b95de
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@629cbb1
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@165aa43a
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@165aa43a
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@7d977a20
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@35ab4260
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@35ab4260
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@35ab4260
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@76134b9b
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@76134b9b
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@76134b9b
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@38667005
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@38667005
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@38667005
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7ee64b53
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@7ee64b53
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@7ee64b53
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1131aead
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@1131aead
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@1131aead
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7d126083
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7d126083
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@76ffc17c
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@76ffc17c
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@3a8fb023
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@3a8fb023
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3a8fb023
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@26d73519
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@48af5f38
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@48af5f38
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@40538370
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@71a2df1
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@71a2df1
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@71a2df1
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@18faaff6
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@2a9e754e
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@760a2b6e
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@20a9f5fb
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@20a9f5fb
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6d617b07
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6d617b07
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@340c57e0
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@137a4b54
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7c9372ed
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@1acc873b
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@4ca970d5
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@dc8b2ff
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@6a2badb1
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@6a2badb1
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@14201a90
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@14201a90
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1308ef19
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1308ef19
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@5b1ff8cd
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@5b1ff8cd
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@6cee903a
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@6cee903a
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@780ee3ad
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2c2aab92
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@857f74a
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@857f74a
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@10a0d93a
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@1f3c5308
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@66b31d46
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@51e94b7d
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@51e94b7d
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@47162173
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3a4f8e8a
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@4468fda8
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@4468fda8
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@5fc1e4fb
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@5fc1e4fb
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@29aa4bc9
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@29aa4bc9
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@29aa4bc9
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6fd7aba8
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6fd7aba8
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6fd7aba8
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@6c519e47
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3ce7490a
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@4768b95c
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4768b95c
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@1530d0f2
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@1530d0f2
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@1530d0f2
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7573c7b5
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@73da7f08
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@717a8a76
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@717a8a76
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@62de73eb
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@62de73eb
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@62de73eb
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@97b5e6a
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@97b5e6a
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@29f95272
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@29f95272
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@c754401
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@c754401
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@1da53f4f
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@1da53f4f
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@4e7eba9f
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4e7eba9f
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@2df71be0
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@b841713
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@5d5574c7
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5d5574c7
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@23df7fad
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4ab455e2
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2acca224
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7ac685ef
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@223cbf0d
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4a4ff5ed
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@5ddb302
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4b7ab7ab
2024-08-13 17:12:53 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@cf9bd1e
2024-08-13 17:12:54 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-13 17:12:54 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-13 17:12:54 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5c0272e0
2024-08-13 17:12:54 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-13 17:12:54 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-13 17:12:54 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7c56c911) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1de6dc80)
2024-08-13 17:12:54 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@418d1c03) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@395197cb)
2024-08-13 17:12:54 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7305cfb1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@582c1f8d)
2024-08-13 17:12:54 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@71687d8f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@443253a6)
2024-08-13 17:12:54 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@191774d6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21ffc00e)
2024-08-13 17:12:54 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@134955bb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45b08b17)
2024-08-13 17:12:54 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6723e6b3) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3883b5e9)
2024-08-13 17:12:54 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@61becbcf) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@20171cdc)
2024-08-13 17:12:54 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@58f97013) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7d70ba18)
2024-08-13 17:12:54 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-13 17:12:54 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-13 17:12:54 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-13 17:12:54 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-13 17:12:54 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-13 17:12:54 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@3f033664
2024-08-13 17:12:54 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@23df7fad`
2024-08-13 17:12:54 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-08-13 17:12:54 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-08-13 17:12:54 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-08-13 17:12:54 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-13 17:12:54 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-13 17:12:54 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-13 17:12:54 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-13 17:12:54 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-13 17:12:54 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-13 17:12:54 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-13 17:12:54 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-13 17:12:54 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-13 17:12:54 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6bfbab1c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@349aeec4]
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6bfbab1c] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2e9f5499]
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536775102 | took 47ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07

    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07;
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536775110 | took 7ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8

    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8;
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536775117 | took 6ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv

    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv;
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536775128 | took 11ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f

    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f;
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536775132 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389

    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389;
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536775136 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1

    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1;
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536775139 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y

    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y;
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Application
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536775161 | took 21ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Application

    drop table if exists Application;
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Introduction
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536775166 | took 4ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Introduction

    drop table if exists Introduction;
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Mentee
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536775171 | took 5ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Mentee

    drop table if exists Mentee;
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Mentor
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536775180 | took 8ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Mentor

    drop table if exists Mentor;
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    drop table if exists Mentor" via JDBC [Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    drop table if exists Mentor" via JDBC [Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropTables(SchemaDropperImpl.java:377)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:253)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:244)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLException: Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists PossibleDate
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536775188 | took 5ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists PossibleDate

    drop table if exists PossibleDate;
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Refresh
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536775192 | took 4ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Refresh

    drop table if exists Refresh;
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists User
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536775199 | took 6ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists User

    drop table if exists User;
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536775211 | took 6ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB

    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB;
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536775216 | took 4ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB

    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB;
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536775220 | took 3ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB

    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB;
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536775222 | took 1ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB

    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB;
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB" via JDBC [Table 'mentor' already exists]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB" via JDBC [Table 'mentor' already exists]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTables(SchemaCreatorImpl.java:420)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:340)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Table 'mentor' already exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536775227 | took 4ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB

    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB;
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536775231 | took 3ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB

    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB;
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536775236 | took 4ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB

    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB;
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id)
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536775243 | took 6ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id)

    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id);
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536775244 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)

    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction);
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)" via JDBC [Duplicate key name 'UK_q1bnlwuhs82q8yg9sugcv9i2t']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)" via JDBC [Duplicate key name 'UK_q1bnlwuhs82q8yg9sugcv9i2t']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTableConstraints(SchemaCreatorImpl.java:393)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:351)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Duplicate key name 'UK_q1bnlwuhs82q8yg9sugcv9i2t'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee)
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536775251 | took 6ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee)

    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee);
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor)
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536775275 | took 23ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor)

    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor);
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id)
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536775297 | took 21ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id)

    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id);
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id)
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536775319 | took 22ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id)

    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id);
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id)
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536775340 | took 19ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id)

    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id);
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536775359 | took 19ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)

    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id);
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id)
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536775374 | took 14ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id)

    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id);
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id)
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536775396 | took 22ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id)

    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id);
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id)
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536775414 | took 17ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id)

    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id);
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2e9f5499] for TypeConfiguration
2024-08-13 17:12:55 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-13 17:12:56 [main] [transactionId=] [threadId=] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-13 17:12:57 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@b729651, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@14c5d220, org.springframework.security.web.context.SecurityContextHolderFilter@51bab787, org.springframework.security.web.header.HeaderWriterFilter@54ff871a, org.springframework.web.filter.CorsFilter@11f415e4, com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter@27af14bd, org.springframework.security.web.authentication.logout.LogoutFilter@5d9ac1ff, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@78333d5a, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@79228440, com.soongsil.CoffeeChat.config.jwt.JWTFilter@38f0de07, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@5cdf6bb1, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@21e5feb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@43c76550, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@70d3b49c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@33742179, org.springframework.security.web.session.SessionManagementFilter@2ecb7f0c, org.springframework.security.web.access.ExceptionTranslationFilter@41f4693a, org.springframework.security.web.access.intercept.AuthorizationFilter@4d7909bd]
2024-08-13 17:12:57 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-08-13 17:12:57 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/v3/api-docs/**']
2024-08-13 17:12:57 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-08-13 17:12:57 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-ui/**']
2024-08-13 17:12:57 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-08-13 17:12:57 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-resources/**']
2024-08-13 17:12:57 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-08-13 17:12:57 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2024-08-13 17:12:57 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Started CoffeeChatApplication in 6.374 seconds (process running for 7.476)
2024-08-13 17:15:26 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-13 17:15:26 [SpringApplicationShutdownHook] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2e9f5499] for TypeConfiguration
2024-08-13 17:15:26 [SpringApplicationShutdownHook] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@59ac0dc] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2e9f5499]
2024-08-13 17:15:26 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-13 17:15:26 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-13 17:15:30 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Starting CoffeeChatApplication using Java 17.0.9 with PID 7205 (/Users/oxdjww/Desktop/Repo/COGO-DEV-server/build/classes/java/main started by oxdjww in /Users/oxdjww/Desktop/Repo/COGO-DEV-server)
2024-08-13 17:15:30 [main] [transactionId=] [threadId=] DEBUG c.s.CoffeeChat.CoffeeChatApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-08-13 17:15:30 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-13 17:15:31 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-13 17:15:31 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-13 17:15:32 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 165 ms. Found 6 JPA repository interfaces.
2024-08-13 17:15:32 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-13 17:15:32 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-13 17:15:32 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:15:32 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:15:32 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:15:32 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:15:32 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:15:32 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:15:32 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-08-13 17:15:32 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-13 17:15:32 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-13 17:15:32 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-13 17:15:32 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-08-13 17:15:32 [main] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-13 17:15:32 [main] [transactionId=] [threadId=] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1935 ms
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@173b1af1
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@173b1af1
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@173b1af1
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4a520f05
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4a520f05
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@389a1e34
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@389a1e34
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@204b0f07
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@204b0f07
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6f68756d
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6f68756d
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6f68756d
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@359865a2
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@359865a2
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@359865a2
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2d38db6f
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@37cf91d8
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@37cf91d8
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@37cf91d8
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@571d0925
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@571d0925
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@571d0925
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@18811c42
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@18811c42
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@627acb38
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@627acb38
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@627acb38
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@32b95de
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@629cbb1
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@629cbb1
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@165aa43a
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7d977a20
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@35ab4260
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@76134b9b
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@38667005
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@38667005
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7ee64b53
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7ee64b53
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1131aead
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7d126083
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@76ffc17c
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3a8fb023
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@26d73519
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@48af5f38
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@40538370
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@40538370
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@71a2df1
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@71a2df1
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@18faaff6
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@18faaff6
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2a9e754e
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2a9e754e
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@760a2b6e
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@760a2b6e
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@20a9f5fb
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6d617b07
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@340c57e0
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@340c57e0
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@137a4b54
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7c9372ed
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1acc873b
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4ca970d5
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4ca970d5
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@dc8b2ff
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6a2badb1
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@14201a90
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@14201a90
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@1308ef19
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1308ef19
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5b1ff8cd
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5b1ff8cd
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5b1ff8cd
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6cee903a
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6cee903a
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6cee903a
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@780ee3ad
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@2c2aab92
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@857f74a
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@857f74a
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@10a0d93a
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@10a0d93a
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@10a0d93a
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1f3c5308
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@66b31d46
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@51e94b7d
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@51e94b7d
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@47162173
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@47162173
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@47162173
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@3a4f8e8a
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3a4f8e8a
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4468fda8
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4468fda8
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5fc1e4fb
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5fc1e4fb
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@29aa4bc9
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@29aa4bc9
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@6fd7aba8
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6fd7aba8
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@6c519e47
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3ce7490a
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@4fea5ee0
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4fea5ee0
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@25d9291a
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@445058e8
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5d5574c7
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5a7a6d34
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@36871e98
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@70d687b8
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6533629
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@f49e81a
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1b444b5
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5d15789f
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@18ff1520) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@36120a8b)
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@63d66761) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@434a8938)
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@237cd264) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@51cd2d2)
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5521407f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@42b500aa)
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@71f056a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@64f6dd19)
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b8b5b40) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5151accb)
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2e1ad7de) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7c56c911)
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1de6dc80) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@418d1c03)
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@395197cb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7305cfb1)
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@443dae2
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@25d9291a`
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-13 17:15:33 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@45f95ac0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3b77940f]
2024-08-13 17:15:34 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-13 17:15:34 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@45f95ac0] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6d7d0946]
2024-08-13 17:15:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07
2024-08-13 17:15:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536934827 | took 64ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07

    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07;
2024-08-13 17:15:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8
2024-08-13 17:15:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536934835 | took 8ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8

    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8;
2024-08-13 17:15:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv
2024-08-13 17:15:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536934843 | took 8ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv

    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv;
2024-08-13 17:15:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f
2024-08-13 17:15:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536934859 | took 15ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f

    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f;
2024-08-13 17:15:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389
2024-08-13 17:15:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536934865 | took 5ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389

    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389;
2024-08-13 17:15:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1
2024-08-13 17:15:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536934870 | took 4ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1

    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1;
2024-08-13 17:15:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y
2024-08-13 17:15:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536934875 | took 5ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y

    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y;
2024-08-13 17:15:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Application
2024-08-13 17:15:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536934880 | took 4ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Application

    drop table if exists Application;
2024-08-13 17:15:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Introduction
2024-08-13 17:15:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536934886 | took 5ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Introduction

    drop table if exists Introduction;
2024-08-13 17:15:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Mentee
2024-08-13 17:15:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536934890 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Mentee

    drop table if exists Mentee;
2024-08-13 17:15:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Mentor
2024-08-13 17:15:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536934898 | took 7ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Mentor

    drop table if exists Mentor;
2024-08-13 17:15:34 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    drop table if exists Mentor" via JDBC [Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    drop table if exists Mentor" via JDBC [Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropTables(SchemaDropperImpl.java:377)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:253)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:244)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLException: Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-13 17:15:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists PossibleDate
2024-08-13 17:15:34 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536934959 | took 57ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists PossibleDate

    drop table if exists PossibleDate;
2024-08-13 17:15:34 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Refresh
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536935000 | took 40ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Refresh

    drop table if exists Refresh;
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists User
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536935034 | took 33ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists User

    drop table if exists User;
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536935097 | took 46ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB

    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB;
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536935118 | took 20ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB

    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB;
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536935133 | took 14ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB

    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB;
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536935142 | took 7ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB

    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB;
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB" via JDBC [Table 'mentor' already exists]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB" via JDBC [Table 'mentor' already exists]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTables(SchemaCreatorImpl.java:420)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:340)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Table 'mentor' already exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536935179 | took 35ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB

    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB;
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536935201 | took 20ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB

    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB;
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536935215 | took 12ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB

    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB;
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id)
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536935241 | took 25ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id)

    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id);
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536935243 | took 1ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)

    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction);
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)" via JDBC [Duplicate key name 'UK_q1bnlwuhs82q8yg9sugcv9i2t']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)" via JDBC [Duplicate key name 'UK_q1bnlwuhs82q8yg9sugcv9i2t']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTableConstraints(SchemaCreatorImpl.java:393)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:351)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Duplicate key name 'UK_q1bnlwuhs82q8yg9sugcv9i2t'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee)
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536935258 | took 13ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee)

    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee);
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor)
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536935271 | took 12ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor)

    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor);
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id)
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536935316 | took 44ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id)

    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id);
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id)
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536935356 | took 39ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id)

    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id);
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id)
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536935418 | took 61ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id)

    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id);
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536935526 | took 107ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)

    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id);
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id)
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536935565 | took 37ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id)

    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id);
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id)
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536935618 | took 52ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id)

    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id);
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id)
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] INFO  p6spy - #1723536935638 | took 20ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id)

    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id);
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6d7d0946] for TypeConfiguration
2024-08-13 17:15:35 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-13 17:15:37 [main] [transactionId=] [threadId=] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-13 17:15:37 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@150a201b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@79228440, org.springframework.security.web.context.SecurityContextHolderFilter@8e89c5f, org.springframework.security.web.header.HeaderWriterFilter@54c3b0dd, org.springframework.web.filter.CorsFilter@9c7699e, com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter@1ff359b7, org.springframework.security.web.authentication.logout.LogoutFilter@39ae0bff, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@2f7765f1, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@7d800902, com.soongsil.CoffeeChat.config.jwt.JWTFilter@5bbda8aa, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@4c94621d, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@36d02719, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2f3ba597, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4d555b85, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@46933c4, org.springframework.security.web.session.SessionManagementFilter@d0c3793, org.springframework.security.web.access.ExceptionTranslationFilter@6f21c18f, org.springframework.security.web.access.intercept.AuthorizationFilter@38691f8d]
2024-08-13 17:15:37 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-08-13 17:15:37 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/v3/api-docs/**']
2024-08-13 17:15:37 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-08-13 17:15:37 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-ui/**']
2024-08-13 17:15:37 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-08-13 17:15:37 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-resources/**']
2024-08-13 17:15:38 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-08-13 17:15:38 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2024-08-13 17:15:38 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Started CoffeeChatApplication in 7.591 seconds (process running for 8.443)
2024-08-13 17:16:37 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-13 17:16:37 [SpringApplicationShutdownHook] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6d7d0946] for TypeConfiguration
2024-08-13 17:16:37 [SpringApplicationShutdownHook] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@16a04607] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6d7d0946]
2024-08-13 17:16:37 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-13 17:16:37 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-13 17:16:40 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Starting CoffeeChatApplication using Java 17.0.9 with PID 7279 (/Users/oxdjww/Desktop/Repo/COGO-DEV-server/build/classes/java/main started by oxdjww in /Users/oxdjww/Desktop/Repo/COGO-DEV-server)
2024-08-13 17:16:40 [main] [transactionId=] [threadId=] DEBUG c.s.CoffeeChat.CoffeeChatApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-08-13 17:16:40 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-13 17:16:41 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-13 17:16:41 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-13 17:16:41 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 134 ms. Found 6 JPA repository interfaces.
2024-08-13 17:16:41 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-13 17:16:41 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-13 17:16:41 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:16:41 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:16:41 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:16:41 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:16:41 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:16:41 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:16:41 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-08-13 17:16:41 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-13 17:16:41 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-13 17:16:41 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-13 17:16:41 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-08-13 17:16:41 [main] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-13 17:16:41 [main] [transactionId=] [threadId=] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1446 ms
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@571d0925
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@571d0925
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@571d0925
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@18811c42
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@18811c42
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@18811c42
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@629cbb1
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@629cbb1
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@165aa43a
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@7d977a20
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@35ab4260
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@76134b9b
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@76134b9b
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@76134b9b
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@38667005
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@38667005
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@38667005
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7ee64b53
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7ee64b53
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7ee64b53
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1131aead
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@1131aead
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1131aead
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7d126083
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7d126083
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7d126083
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@76ffc17c
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@76ffc17c
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@3a8fb023
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@3a8fb023
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@26d73519
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@26d73519
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@26d73519
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@48af5f38
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@40538370
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@40538370
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@71a2df1
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@18faaff6
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@18faaff6
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@18faaff6
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@2a9e754e
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@760a2b6e
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@20a9f5fb
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@6d617b07
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6d617b07
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@340c57e0
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@340c57e0
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@137a4b54
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7c9372ed
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@1acc873b
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@4ca970d5
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@dc8b2ff
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6a2badb1
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@14201a90
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@14201a90
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@1308ef19
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@1308ef19
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@5b1ff8cd
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@5b1ff8cd
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@6cee903a
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@6cee903a
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@780ee3ad
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@780ee3ad
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2c2aab92
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@857f74a
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@10a0d93a
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@10a0d93a
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1f3c5308
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66b31d46
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@51e94b7d
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@47162173
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@47162173
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@3a4f8e8a
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4468fda8
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@5fc1e4fb
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@5fc1e4fb
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@29aa4bc9
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@29aa4bc9
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@6fd7aba8
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@6fd7aba8
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@6fd7aba8
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6c519e47
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6c519e47
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6c519e47
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3ce7490a
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4768b95c
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@1530d0f2
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1530d0f2
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@7573c7b5
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@7573c7b5
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@7573c7b5
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@73da7f08
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@717a8a76
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@62de73eb
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@62de73eb
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@97b5e6a
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@97b5e6a
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@97b5e6a
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@29f95272
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@29f95272
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@c754401
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@c754401
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1da53f4f
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1da53f4f
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@4e7eba9f
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@4e7eba9f
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@2df71be0
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2df71be0
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@b841713
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3fef1e6b
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@5a7a6d34
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5a7a6d34
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@4ab455e2
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2acca224
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7ac685ef
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@223cbf0d
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4a4ff5ed
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5ddb302
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4b7ab7ab
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@cf9bd1e
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@39acd1f1
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@60c4cf2b
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1de6dc80) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@418d1c03)
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@395197cb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7305cfb1)
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@582c1f8d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@71687d8f)
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@443253a6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@191774d6)
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21ffc00e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@134955bb)
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45b08b17) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6723e6b3)
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3883b5e9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@61becbcf)
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@20171cdc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@58f97013)
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7d70ba18) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6a07e6ca)
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@6abd8bcd
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4ab455e2`
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-13 17:16:42 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@349aeec4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3700994c]
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@349aeec4] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@30f54522]
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537003270 | took 15ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07

    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07;
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537003277 | took 6ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8

    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8;
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537003283 | took 5ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv

    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv;
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537003316 | took 32ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f

    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f;
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537003321 | took 4ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389

    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389;
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537003325 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1

    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1;
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537003334 | took 9ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y

    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y;
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Application
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537003338 | took 4ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Application

    drop table if exists Application;
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Introduction
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537003341 | took 2ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Introduction

    drop table if exists Introduction;
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Mentee
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537003343 | took 2ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Mentee

    drop table if exists Mentee;
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Mentor
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537003351 | took 7ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Mentor

    drop table if exists Mentor;
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    drop table if exists Mentor" via JDBC [Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    drop table if exists Mentor" via JDBC [Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropTables(SchemaDropperImpl.java:377)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:253)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:244)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLException: Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists PossibleDate
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537003357 | took 4ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists PossibleDate

    drop table if exists PossibleDate;
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Refresh
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537003362 | took 5ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Refresh

    drop table if exists Refresh;
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists User
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537003365 | took 2ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists User

    drop table if exists User;
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537003374 | took 4ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB

    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB;
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537003377 | took 3ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB

    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB;
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537003381 | took 3ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB

    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB;
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537003382 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB

    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB;
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB" via JDBC [Table 'mentor' already exists]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB" via JDBC [Table 'mentor' already exists]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTables(SchemaCreatorImpl.java:420)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:340)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Table 'mentor' already exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537003387 | took 3ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB

    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB;
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537003391 | took 3ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB

    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB;
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537003394 | took 3ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB

    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB;
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id)
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537003398 | took 3ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id)

    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id);
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537003399 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)

    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction);
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)" via JDBC [Duplicate key name 'UK_q1bnlwuhs82q8yg9sugcv9i2t']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)" via JDBC [Duplicate key name 'UK_q1bnlwuhs82q8yg9sugcv9i2t']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTableConstraints(SchemaCreatorImpl.java:393)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:351)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Duplicate key name 'UK_q1bnlwuhs82q8yg9sugcv9i2t'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee)
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537003404 | took 4ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee)

    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee);
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor)
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537003430 | took 25ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor)

    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor);
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id)
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537003445 | took 14ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id)

    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id);
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id)
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537003461 | took 15ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id)

    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id);
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id)
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537003495 | took 32ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id)

    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id);
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537003533 | took 37ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)

    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id);
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id)
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537003558 | took 24ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id)

    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id);
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id)
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537003573 | took 15ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id)

    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id);
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id)
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537003588 | took 14ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id)

    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id);
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@30f54522] for TypeConfiguration
2024-08-13 17:16:43 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-13 17:16:44 [main] [transactionId=] [threadId=] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-13 17:16:45 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@11f415e4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@27af14bd, org.springframework.security.web.context.SecurityContextHolderFilter@43c76550, org.springframework.security.web.header.HeaderWriterFilter@2ecb7f0c, org.springframework.web.filter.CorsFilter@38f0de07, com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter@21e5feb, org.springframework.security.web.authentication.logout.LogoutFilter@6ff879e5, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@3b5fa30d, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@1ff359b7, com.soongsil.CoffeeChat.config.jwt.JWTFilter@33742179, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@ceb4f91, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@6ca1c156, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7451338e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@34e0d52e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@521f2a23, org.springframework.security.web.session.SessionManagementFilter@3e51beda, org.springframework.security.web.access.ExceptionTranslationFilter@54ff871a, org.springframework.security.web.access.intercept.AuthorizationFilter@b729651]
2024-08-13 17:16:45 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-08-13 17:16:45 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/v3/api-docs/**']
2024-08-13 17:16:45 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-08-13 17:16:45 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-ui/**']
2024-08-13 17:16:45 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-08-13 17:16:45 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-resources/**']
2024-08-13 17:16:45 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-08-13 17:16:45 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2024-08-13 17:16:45 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Started CoffeeChatApplication in 5.82 seconds (process running for 6.605)
2024-08-13 17:19:53 [HikariPool-1 housekeeper] [transactionId=] [threadId=] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m10s530ms).
2024-08-13 17:21:12 [HikariPool-1 housekeeper] [transactionId=] [threadId=] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m19s668ms).
2024-08-13 17:23:21 [HikariPool-1 housekeeper] [transactionId=] [threadId=] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m8s358ms).
2024-08-13 17:25:05 [HikariPool-1 housekeeper] [transactionId=] [threadId=] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m44s21ms).
2024-08-13 17:28:09 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-13 17:28:09 [SpringApplicationShutdownHook] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@30f54522] for TypeConfiguration
2024-08-13 17:28:09 [SpringApplicationShutdownHook] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@28043cbe] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@30f54522]
2024-08-13 17:28:09 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-13 17:28:09 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-13 17:28:15 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Starting CoffeeChatApplication using Java 17.0.9 with PID 7663 (/Users/oxdjww/Desktop/Repo/COGO-DEV-server/build/classes/java/main started by oxdjww in /Users/oxdjww/Desktop/Repo/COGO-DEV-server)
2024-08-13 17:28:15 [main] [transactionId=] [threadId=] DEBUG c.s.CoffeeChat.CoffeeChatApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-08-13 17:28:15 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-13 17:28:16 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-13 17:28:16 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-13 17:28:16 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 153 ms. Found 6 JPA repository interfaces.
2024-08-13 17:28:16 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-13 17:28:16 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-13 17:28:16 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:28:16 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:28:16 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:28:16 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:28:16 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:28:16 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:28:16 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-08-13 17:28:16 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-13 17:28:16 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-13 17:28:16 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-13 17:28:16 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-08-13 17:28:16 [main] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-13 17:28:16 [main] [transactionId=] [threadId=] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1520 ms
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@173b1af1
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@173b1af1
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@173b1af1
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4a520f05
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4a520f05
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@389a1e34
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@389a1e34
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@204b0f07
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@204b0f07
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6f68756d
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@6f68756d
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@6f68756d
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@359865a2
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@359865a2
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@359865a2
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@2d38db6f
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@37cf91d8
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@37cf91d8
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@37cf91d8
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@571d0925
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@571d0925
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@571d0925
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@18811c42
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@18811c42
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@627acb38
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@627acb38
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@627acb38
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@32b95de
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@629cbb1
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@629cbb1
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@165aa43a
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7d977a20
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@35ab4260
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@76134b9b
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@38667005
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@38667005
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7ee64b53
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7ee64b53
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1131aead
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@7d126083
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@76ffc17c
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3a8fb023
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@26d73519
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@48af5f38
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@40538370
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@40538370
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@71a2df1
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@71a2df1
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@18faaff6
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@18faaff6
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2a9e754e
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2a9e754e
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@760a2b6e
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@760a2b6e
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@20a9f5fb
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6d617b07
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@340c57e0
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@340c57e0
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@137a4b54
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@7c9372ed
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1acc873b
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4ca970d5
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4ca970d5
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@dc8b2ff
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6a2badb1
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@14201a90
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@14201a90
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@1308ef19
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1308ef19
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@5b1ff8cd
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@5b1ff8cd
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@5b1ff8cd
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6cee903a
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6cee903a
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6cee903a
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@780ee3ad
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@2c2aab92
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@857f74a
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@857f74a
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@10a0d93a
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@10a0d93a
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@10a0d93a
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@1f3c5308
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@66b31d46
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@51e94b7d
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@51e94b7d
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@47162173
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@47162173
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@47162173
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@3a4f8e8a
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3a4f8e8a
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4468fda8
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4468fda8
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@5fc1e4fb
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@5fc1e4fb
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@29aa4bc9
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@29aa4bc9
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@6fd7aba8
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@6fd7aba8
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@6c519e47
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@3ce7490a
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@4fea5ee0
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@4fea5ee0
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@25d9291a
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@445058e8
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@5d5574c7
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5a7a6d34
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@36871e98
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@70d687b8
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6533629
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@f49e81a
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1b444b5
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5d15789f
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@18ff1520) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@36120a8b)
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@63d66761) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@434a8938)
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@237cd264) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@51cd2d2)
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5521407f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@42b500aa)
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@71f056a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@64f6dd19)
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b8b5b40) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5151accb)
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2e1ad7de) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7c56c911)
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1de6dc80) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@418d1c03)
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@395197cb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7305cfb1)
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@443dae2
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@25d9291a`
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-13 17:28:17 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@45f95ac0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3b77940f]
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@45f95ac0] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6d7d0946]
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537698556 | took 53ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07

    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07;
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537698567 | took 11ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8

    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8;
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537698575 | took 8ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv

    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv;
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537698604 | took 27ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f

    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f;
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537698608 | took 4ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389

    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389;
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537698613 | took 4ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1

    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1;
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537698617 | took 4ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y

    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y;
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Application
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537698623 | took 5ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Application

    drop table if exists Application;
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Introduction
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537698627 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Introduction

    drop table if exists Introduction;
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Mentee
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537698631 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Mentee

    drop table if exists Mentee;
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Mentor
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537698638 | took 7ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Mentor

    drop table if exists Mentor;
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    drop table if exists Mentor" via JDBC [Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    drop table if exists Mentor" via JDBC [Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropTables(SchemaDropperImpl.java:377)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:253)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:244)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLException: Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists PossibleDate
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537698643 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists PossibleDate

    drop table if exists PossibleDate;
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Refresh
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537698648 | took 4ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Refresh

    drop table if exists Refresh;
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists User
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537698650 | took 2ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists User

    drop table if exists User;
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537698662 | took 7ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB

    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB;
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537698667 | took 4ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB

    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB;
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537698671 | took 3ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB

    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB;
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537698673 | took 1ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB

    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB;
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB" via JDBC [Table 'mentor' already exists]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB" via JDBC [Table 'mentor' already exists]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTables(SchemaCreatorImpl.java:420)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:340)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Table 'mentor' already exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537698677 | took 4ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB

    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB;
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537698681 | took 3ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB

    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB;
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537698688 | took 5ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB

    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB;
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id)
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537698696 | took 8ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id)

    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id);
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537698697 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)

    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction);
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)" via JDBC [Duplicate key name 'UK_q1bnlwuhs82q8yg9sugcv9i2t']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)" via JDBC [Duplicate key name 'UK_q1bnlwuhs82q8yg9sugcv9i2t']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTableConstraints(SchemaCreatorImpl.java:393)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:351)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Duplicate key name 'UK_q1bnlwuhs82q8yg9sugcv9i2t'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee)
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537698706 | took 8ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee)

    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee);
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor)
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537698777 | took 70ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor)

    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor);
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id)
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537698819 | took 40ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id)

    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id);
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id)
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537698838 | took 18ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id)

    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id);
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id)
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537698857 | took 19ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id)

    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id);
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537698876 | took 18ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)

    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id);
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id)
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537698890 | took 13ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id)

    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id);
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id)
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537698909 | took 18ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id)

    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id);
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id)
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537698931 | took 21ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id)

    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id);
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6d7d0946] for TypeConfiguration
2024-08-13 17:28:18 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-13 17:28:20 [main] [transactionId=] [threadId=] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-13 17:28:20 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@150a201b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@79228440, org.springframework.security.web.context.SecurityContextHolderFilter@8e89c5f, org.springframework.security.web.header.HeaderWriterFilter@54c3b0dd, org.springframework.web.filter.CorsFilter@9c7699e, com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter@1ff359b7, org.springframework.security.web.authentication.logout.LogoutFilter@39ae0bff, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@2f7765f1, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@7d800902, com.soongsil.CoffeeChat.config.jwt.JWTFilter@5bbda8aa, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@4c94621d, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@36d02719, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2f3ba597, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4d555b85, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@46933c4, org.springframework.security.web.session.SessionManagementFilter@d0c3793, org.springframework.security.web.access.ExceptionTranslationFilter@6f21c18f, org.springframework.security.web.access.intercept.AuthorizationFilter@38691f8d]
2024-08-13 17:28:20 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-08-13 17:28:20 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/v3/api-docs/**']
2024-08-13 17:28:20 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-08-13 17:28:20 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-ui/**']
2024-08-13 17:28:20 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-08-13 17:28:20 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-resources/**']
2024-08-13 17:28:21 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-08-13 17:28:21 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2024-08-13 17:28:21 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Started CoffeeChatApplication in 6.703 seconds (process running for 8.001)
2024-08-13 17:30:15 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-13 17:30:15 [SpringApplicationShutdownHook] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6d7d0946] for TypeConfiguration
2024-08-13 17:30:15 [SpringApplicationShutdownHook] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@87a3dfd] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6d7d0946]
2024-08-13 17:30:15 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-13 17:30:15 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-13 17:32:20 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Starting CoffeeChatApplication using Java 17.0.9 with PID 7873 (/Users/oxdjww/Desktop/Repo/COGO-DEV-server/build/classes/java/main started by oxdjww in /Users/oxdjww/Desktop/Repo/COGO-DEV-server)
2024-08-13 17:32:20 [main] [transactionId=] [threadId=] DEBUG c.s.CoffeeChat.CoffeeChatApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-08-13 17:32:20 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-13 17:32:21 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-13 17:32:21 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-13 17:32:21 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 151 ms. Found 6 JPA repository interfaces.
2024-08-13 17:32:21 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-13 17:32:21 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-13 17:32:21 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:32:21 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:32:21 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:32:21 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:32:21 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:32:21 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:32:21 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-08-13 17:32:21 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-13 17:32:21 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-13 17:32:21 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-13 17:32:21 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-08-13 17:32:21 [main] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-13 17:32:21 [main] [transactionId=] [threadId=] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1438 ms
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@18811c42
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@18811c42
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@627acb38
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@627acb38
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@627acb38
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@32b95de
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@32b95de
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@32b95de
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@7d977a20
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@35ab4260
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@35ab4260
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@76134b9b
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@38667005
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@7ee64b53
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@7ee64b53
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7ee64b53
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@1131aead
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@1131aead
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1131aead
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7d126083
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7d126083
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7d126083
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@76ffc17c
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@76ffc17c
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@76ffc17c
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3a8fb023
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3a8fb023
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3a8fb023
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@26d73519
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@26d73519
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@48af5f38
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@48af5f38
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@40538370
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@40538370
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@40538370
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@71a2df1
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@18faaff6
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@18faaff6
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2a9e754e
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@760a2b6e
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@760a2b6e
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@760a2b6e
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@20a9f5fb
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@6d617b07
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@340c57e0
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@137a4b54
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@137a4b54
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7c9372ed
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7c9372ed
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1acc873b
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4ca970d5
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@dc8b2ff
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6a2badb1
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@14201a90
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1308ef19
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5b1ff8cd
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5b1ff8cd
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6cee903a
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6cee903a
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@780ee3ad
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@780ee3ad
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2c2aab92
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2c2aab92
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@857f74a
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@857f74a
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@10a0d93a
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1f3c5308
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@66b31d46
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@66b31d46
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@51e94b7d
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@47162173
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3a4f8e8a
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4468fda8
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4468fda8
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5fc1e4fb
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@29aa4bc9
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@6fd7aba8
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6fd7aba8
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@6c519e47
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6c519e47
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3ce7490a
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3ce7490a
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3ce7490a
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4768b95c
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4768b95c
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4768b95c
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1530d0f2
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7573c7b5
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@73da7f08
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@73da7f08
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@717a8a76
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@717a8a76
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@717a8a76
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@62de73eb
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@97b5e6a
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@29f95272
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@29f95272
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@c754401
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@c754401
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@c754401
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@1da53f4f
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1da53f4f
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4e7eba9f
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4e7eba9f
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2df71be0
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2df71be0
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@b841713
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@b841713
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@3fef1e6b
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3fef1e6b
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@4fee14b
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@11c3d22f
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@70d687b8
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@70d687b8
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7ac685ef
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@223cbf0d
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4a4ff5ed
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5ddb302
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4b7ab7ab
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@cf9bd1e
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@39acd1f1
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@51813065
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4f581211
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@303fbc4
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@395197cb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7305cfb1)
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@582c1f8d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@71687d8f)
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@443253a6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@191774d6)
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21ffc00e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@134955bb)
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45b08b17) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6723e6b3)
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3883b5e9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@61becbcf)
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@20171cdc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@58f97013)
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7d70ba18) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6a07e6ca)
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@726ef6aa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6104691c)
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@79424f25
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@7ac685ef`
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-13 17:32:22 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@78a165db] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4eb48298]
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@78a165db] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@43e9a8a2]
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537943337 | took 22ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07

    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07;
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537943345 | took 7ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8

    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8;
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537943352 | took 7ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv

    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv;
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537943365 | took 11ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f

    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f;
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537943369 | took 4ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389

    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389;
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537943373 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1

    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1;
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537943377 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y

    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y;
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Application
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537943384 | took 7ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Application

    drop table if exists Application;
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Introduction
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537943387 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Introduction

    drop table if exists Introduction;
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Mentee
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537943390 | took 2ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Mentee

    drop table if exists Mentee;
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Mentor
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537943398 | took 7ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Mentor

    drop table if exists Mentor;
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    drop table if exists Mentor" via JDBC [Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    drop table if exists Mentor" via JDBC [Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropTables(SchemaDropperImpl.java:377)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:253)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:244)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLException: Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists PossibleDate
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537943406 | took 4ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists PossibleDate

    drop table if exists PossibleDate;
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Refresh
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537943409 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Refresh

    drop table if exists Refresh;
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists User
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537943413 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists User

    drop table if exists User;
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537943424 | took 3ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB

    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB;
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537943428 | took 3ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB

    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB;
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537943432 | took 3ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB

    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB;
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537943433 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB

    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB;
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB" via JDBC [Table 'mentor' already exists]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB" via JDBC [Table 'mentor' already exists]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTables(SchemaCreatorImpl.java:420)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:340)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Table 'mentor' already exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537943438 | took 5ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB

    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB;
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537943454 | took 15ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB

    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB;
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537943458 | took 3ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB

    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB;
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id)
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537943464 | took 4ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id)

    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id);
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537943465 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)

    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction);
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)" via JDBC [Duplicate key name 'UK_q1bnlwuhs82q8yg9sugcv9i2t']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)" via JDBC [Duplicate key name 'UK_q1bnlwuhs82q8yg9sugcv9i2t']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTableConstraints(SchemaCreatorImpl.java:393)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:351)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Duplicate key name 'UK_q1bnlwuhs82q8yg9sugcv9i2t'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee)
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537943471 | took 5ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee)

    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee);
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor)
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537943475 | took 4ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor)

    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor);
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id)
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537943486 | took 10ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id)

    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id);
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id)
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537943498 | took 11ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id)

    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id);
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id)
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537943511 | took 12ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id)

    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id);
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537943527 | took 16ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)

    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id);
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id)
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537943561 | took 33ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id)

    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id);
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id)
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537943589 | took 28ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id)

    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id);
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id)
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] INFO  p6spy - #1723537943606 | took 15ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id)

    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id);
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@43e9a8a2] for TypeConfiguration
2024-08-13 17:32:23 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-13 17:32:24 [main] [transactionId=] [threadId=] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-13 17:32:25 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@38f0de07, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@21e5feb, org.springframework.security.web.context.SecurityContextHolderFilter@7451338e, org.springframework.security.web.header.HeaderWriterFilter@3e51beda, org.springframework.web.filter.CorsFilter@33742179, com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter@6ca1c156, org.springframework.security.web.authentication.logout.LogoutFilter@7b9e4a2a, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@1cb83205, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@36d02719, com.soongsil.CoffeeChat.config.jwt.JWTFilter@521f2a23, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@75f5293c, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@228ed68c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4cf5db07, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@216fe151, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@30e3544d, org.springframework.security.web.session.SessionManagementFilter@24fc91a3, org.springframework.security.web.access.ExceptionTranslationFilter@2ecb7f0c, org.springframework.security.web.access.intercept.AuthorizationFilter@11f415e4]
2024-08-13 17:32:25 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-08-13 17:32:25 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/v3/api-docs/**']
2024-08-13 17:32:25 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-08-13 17:32:25 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-ui/**']
2024-08-13 17:32:25 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-08-13 17:32:25 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-resources/**']
2024-08-13 17:32:25 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-08-13 17:32:25 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2024-08-13 17:32:25 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Started CoffeeChatApplication in 5.857 seconds (process running for 6.797)
2024-08-13 17:39:56 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-13 17:39:56 [SpringApplicationShutdownHook] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@43e9a8a2] for TypeConfiguration
2024-08-13 17:39:56 [SpringApplicationShutdownHook] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@20131cc2] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@43e9a8a2]
2024-08-13 17:39:56 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-13 17:39:56 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-13 17:42:10 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Starting CoffeeChatApplication using Java 17.0.9 with PID 8220 (/Users/oxdjww/Desktop/Repo/COGO-DEV-server/build/classes/java/main started by oxdjww in /Users/oxdjww/Desktop/Repo/COGO-DEV-server)
2024-08-13 17:42:10 [main] [transactionId=] [threadId=] DEBUG c.s.CoffeeChat.CoffeeChatApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-08-13 17:42:10 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-13 17:42:12 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-13 17:42:12 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-13 17:42:12 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 161 ms. Found 6 JPA repository interfaces.
2024-08-13 17:42:12 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-13 17:42:12 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-13 17:42:12 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:42:12 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:42:12 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:42:12 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:42:12 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:42:12 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:42:12 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-08-13 17:42:12 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-13 17:42:12 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-13 17:42:12 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-13 17:42:12 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-08-13 17:42:12 [main] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-13 17:42:12 [main] [transactionId=] [threadId=] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1849 ms
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@25d0b918
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@25d0b918
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@25d0b918
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@9bf63d2
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@7ffcb232
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7f53fc38
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@5feb82b3
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@2d38db6f
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2d38db6f
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@2d38db6f
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@54e0f76f
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@18811c42
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@627acb38
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@627acb38
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@627acb38
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@32b95de
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@32b95de
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@32b95de
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@629cbb1
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@629cbb1
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@629cbb1
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@165aa43a
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@165aa43a
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@165aa43a
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7d977a20
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7d977a20
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@35ab4260
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@35ab4260
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@76134b9b
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@76134b9b
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@76134b9b
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@38667005
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@7ee64b53
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@7ee64b53
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1131aead
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@7d126083
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@7d126083
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@7d126083
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@76ffc17c
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@3a8fb023
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@26d73519
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@48af5f38
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@48af5f38
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@40538370
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@40538370
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@71a2df1
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@18faaff6
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@2a9e754e
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@760a2b6e
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@20a9f5fb
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@6d617b07
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@340c57e0
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@340c57e0
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@137a4b54
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@137a4b54
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@7c9372ed
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@7c9372ed
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1acc873b
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1acc873b
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@4ca970d5
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@4ca970d5
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@dc8b2ff
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6a2badb1
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@14201a90
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@14201a90
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@1308ef19
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5b1ff8cd
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6cee903a
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@780ee3ad
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@780ee3ad
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2c2aab92
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@857f74a
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@10a0d93a
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@10a0d93a
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@1f3c5308
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1f3c5308
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@66b31d46
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@66b31d46
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@66b31d46
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@51e94b7d
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@51e94b7d
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@51e94b7d
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@47162173
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3a4f8e8a
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@4468fda8
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@4468fda8
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@5fc1e4fb
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@5fc1e4fb
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@5fc1e4fb
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@29aa4bc9
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6fd7aba8
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@6c519e47
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@6c519e47
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@3ce7490a
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@3ce7490a
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@3ce7490a
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@4768b95c
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4768b95c
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@1530d0f2
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@1530d0f2
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@7573c7b5
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@7573c7b5
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@73da7f08
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@73da7f08
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@717a8a76
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@717a8a76
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@62de73eb
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@97b5e6a
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@7b3085a3
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7b3085a3
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@f49e81a
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1b444b5
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@459bf87c
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5ae66c98
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@1aaf46e6
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@391d28ea
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@23df7fad
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4ab455e2
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2acca224
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3e2578ea
2024-08-13 17:42:13 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@42b500aa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@71f056a)
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@64f6dd19) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3b8b5b40)
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5151accb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2e1ad7de)
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7c56c911) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1de6dc80)
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@418d1c03) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@395197cb)
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7305cfb1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@582c1f8d)
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@71687d8f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@443253a6)
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@191774d6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21ffc00e)
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@134955bb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45b08b17)
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@30a791a6
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@f49e81a`
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@52035328] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5614ae05]
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@52035328] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@27a23d87]
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538534860 | took 69ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07

    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07;
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538534869 | took 8ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8

    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8;
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538534877 | took 7ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv

    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv;
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538534893 | took 15ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f

    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f;
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538534902 | took 9ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389

    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389;
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538534907 | took 4ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1

    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1;
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538534910 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y

    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y;
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Application
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538534916 | took 5ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Application

    drop table if exists Application;
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Introduction
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538534922 | took 6ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Introduction

    drop table if exists Introduction;
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Mentee
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538534926 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Mentee

    drop table if exists Mentee;
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Mentor
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538534934 | took 7ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Mentor

    drop table if exists Mentor;
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    drop table if exists Mentor" via JDBC [Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    drop table if exists Mentor" via JDBC [Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropTables(SchemaDropperImpl.java:377)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:253)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:244)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLException: Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists PossibleDate
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538534939 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists PossibleDate

    drop table if exists PossibleDate;
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Refresh
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538534942 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Refresh

    drop table if exists Refresh;
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists User
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538534945 | took 2ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists User

    drop table if exists User;
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538534984 | took 32ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB

    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB;
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538534992 | took 7ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB

    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB;
2024-08-13 17:42:14 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB
2024-08-13 17:42:15 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538535002 | took 8ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB

    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB;
2024-08-13 17:42:15 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB
2024-08-13 17:42:15 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538535004 | took 1ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB

    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB;
2024-08-13 17:42:15 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB" via JDBC [Table 'mentor' already exists]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB" via JDBC [Table 'mentor' already exists]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTables(SchemaCreatorImpl.java:420)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:340)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Table 'mentor' already exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-13 17:42:15 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB
2024-08-13 17:42:15 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538535014 | took 7ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB

    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB;
2024-08-13 17:42:15 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB
2024-08-13 17:42:15 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538535021 | took 7ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB

    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB;
2024-08-13 17:42:15 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB
2024-08-13 17:42:15 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538535029 | took 7ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB

    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB;
2024-08-13 17:42:15 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id)
2024-08-13 17:42:15 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538535043 | took 12ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id)

    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id);
2024-08-13 17:42:15 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)
2024-08-13 17:42:15 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538535044 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)

    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction);
2024-08-13 17:42:15 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)" via JDBC [Duplicate key name 'UK_q1bnlwuhs82q8yg9sugcv9i2t']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)" via JDBC [Duplicate key name 'UK_q1bnlwuhs82q8yg9sugcv9i2t']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTableConstraints(SchemaCreatorImpl.java:393)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:351)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Duplicate key name 'UK_q1bnlwuhs82q8yg9sugcv9i2t'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-13 17:42:15 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee)
2024-08-13 17:42:15 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538535054 | took 9ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee)

    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee);
2024-08-13 17:42:15 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor)
2024-08-13 17:42:15 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538535072 | took 17ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor)

    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor);
2024-08-13 17:42:15 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id)
2024-08-13 17:42:15 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538535089 | took 16ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id)

    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id);
2024-08-13 17:42:15 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id)
2024-08-13 17:42:15 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538535103 | took 14ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id)

    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id);
2024-08-13 17:42:15 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id)
2024-08-13 17:42:15 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538535118 | took 14ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id)

    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id);
2024-08-13 17:42:15 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)
2024-08-13 17:42:15 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538535135 | took 16ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)

    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id);
2024-08-13 17:42:15 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id)
2024-08-13 17:42:15 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538535147 | took 11ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id)

    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id);
2024-08-13 17:42:15 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id)
2024-08-13 17:42:15 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538535158 | took 9ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id)

    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id);
2024-08-13 17:42:15 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id)
2024-08-13 17:42:15 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538535170 | took 11ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id)

    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id);
2024-08-13 17:42:15 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@27a23d87] for TypeConfiguration
2024-08-13 17:42:15 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-13 17:42:16 [main] [transactionId=] [threadId=] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-13 17:42:17 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1d2ec1f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@379cfc77, org.springframework.security.web.context.SecurityContextHolderFilter@54ff871a, org.springframework.security.web.header.HeaderWriterFilter@2f3ba597, org.springframework.web.filter.CorsFilter@c3fd72, com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter@4d7909bd, org.springframework.security.web.authentication.logout.LogoutFilter@48515dfc, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@6c5fbe8a, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@4ca3e806, com.soongsil.CoffeeChat.config.jwt.JWTFilter@5bddb619, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@70d3b49c, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@b729651, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2ecb7f0c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@16be2c40, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@14c5d220, org.springframework.security.web.session.SessionManagementFilter@1132c14, org.springframework.security.web.access.ExceptionTranslationFilter@8e89c5f, org.springframework.security.web.access.intercept.AuthorizationFilter@36d02719]
2024-08-13 17:42:17 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-08-13 17:42:17 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/v3/api-docs/**']
2024-08-13 17:42:17 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-08-13 17:42:17 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-ui/**']
2024-08-13 17:42:17 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-08-13 17:42:17 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-resources/**']
2024-08-13 17:42:17 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-08-13 17:42:17 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2024-08-13 17:42:17 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Started CoffeeChatApplication in 6.892 seconds (process running for 7.849)
2024-08-13 17:43:31 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-13 17:43:31 [SpringApplicationShutdownHook] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@27a23d87] for TypeConfiguration
2024-08-13 17:43:31 [SpringApplicationShutdownHook] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2f5ef75d] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@27a23d87]
2024-08-13 17:43:31 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-13 17:43:31 [SpringApplicationShutdownHook] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2024-08-13 17:44:44 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Starting CoffeeChatApplication using Java 17.0.9 with PID 8360 (/Users/oxdjww/Desktop/Repo/COGO-DEV-server/build/classes/java/main started by oxdjww in /Users/oxdjww/Desktop/Repo/COGO-DEV-server)
2024-08-13 17:44:44 [main] [transactionId=] [threadId=] DEBUG c.s.CoffeeChat.CoffeeChatApplication - Running with Spring Boot v3.2.2, Spring v6.1.3
2024-08-13 17:44:44 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - No active profile set, falling back to 1 default profile: "default"
2024-08-13 17:44:45 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-13 17:44:45 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 149 ms. Found 6 JPA repository interfaces.
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.ApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.MenteeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.Mentor.MentorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.PossibleDate.PossibleDateRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.RefreshRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.soongsil.CoffeeChat.repository.User.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.18]
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1979 ms
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3fe8ad3f
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@7462ba4b
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@4b09d1c3
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@18811c42
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@18811c42
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@627acb38
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.BasicTypeReference@627acb38
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@627acb38
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BasicTypeReference@32b95de
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@32b95de
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BasicTypeReference@32b95de
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@22cd8ec2
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.BasicTypeReference@7d977a20
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BasicTypeReference@35ab4260
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@35ab4260
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@76134b9b
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@38667005
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@7ee64b53
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.BasicTypeReference@7ee64b53
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@7ee64b53
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.BasicTypeReference@1131aead
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.BasicTypeReference@1131aead
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@1131aead
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7d126083
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.BasicTypeReference@7d126083
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@7d126083
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@76ffc17c
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.BasicTypeReference@76ffc17c
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@76ffc17c
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3a8fb023
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.BasicTypeReference@3a8fb023
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@3a8fb023
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@26d73519
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@26d73519
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@48af5f38
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@48af5f38
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.BasicTypeReference@40538370
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.BasicTypeReference@40538370
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@40538370
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@71a2df1
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.BasicTypeReference@18faaff6
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@18faaff6
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.BasicTypeReference@2a9e754e
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.BasicTypeReference@760a2b6e
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.BasicTypeReference@760a2b6e
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.BasicTypeReference@760a2b6e
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@20a9f5fb
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.BasicTypeReference@6d617b07
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.BasicTypeReference@340c57e0
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.BasicTypeReference@137a4b54
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@137a4b54
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.BasicTypeReference@7c9372ed
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@7c9372ed
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@1acc873b
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4ca970d5
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@dc8b2ff
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@6a2badb1
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@14201a90
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@1308ef19
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5b1ff8cd
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5b1ff8cd
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6cee903a
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6cee903a
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@780ee3ad
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@780ee3ad
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@2c2aab92
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@2c2aab92
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@857f74a
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@857f74a
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@10a0d93a
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@1f3c5308
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@66b31d46
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@66b31d46
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@51e94b7d
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@47162173
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3a4f8e8a
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@4468fda8
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@4468fda8
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5fc1e4fb
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@29aa4bc9
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.BasicTypeReference@6fd7aba8
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@6fd7aba8
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.BasicTypeReference@6c519e47
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@6c519e47
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@3ce7490a
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@3ce7490a
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@3ce7490a
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4768b95c
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4768b95c
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4768b95c
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1530d0f2
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@7573c7b5
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration instant -> org.hibernate.type.BasicTypeReference@73da7f08
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@73da7f08
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid -> org.hibernate.type.BasicTypeReference@717a8a76
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@717a8a76
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@717a8a76
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@62de73eb
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@97b5e6a
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.BasicTypeReference@29f95272
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@29f95272
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.BasicTypeReference@c754401
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Currency -> org.hibernate.type.BasicTypeReference@c754401
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@c754401
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.BasicTypeReference@1da53f4f
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@1da53f4f
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4e7eba9f
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4e7eba9f
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.BasicTypeReference@2df71be0
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@2df71be0
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@b841713
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@b841713
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.BasicTypeReference@3fef1e6b
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3fef1e6b
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration vector -> org.hibernate.type.BasicTypeReference@4fee14b
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.BasicTypeReference@11c3d22f
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.JavaObjectType@70d687b8
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@70d687b8
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@7ac685ef
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@223cbf0d
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4a4ff5ed
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5ddb302
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4b7ab7ab
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@cf9bd1e
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@39acd1f1
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@51813065
2024-08-13 17:44:46 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@4f581211
2024-08-13 17:44:47 [main] [transactionId=] [threadId=] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2024-08-13 17:44:47 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2024-08-13 17:44:47 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@303fbc4
2024-08-13 17:44:47 [main] [transactionId=] [threadId=] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2024-08-13 17:44:47 [main] [transactionId=] [threadId=] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-08-13 17:44:47 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@395197cb) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7305cfb1)
2024-08-13 17:44:47 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@582c1f8d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@71687d8f)
2024-08-13 17:44:47 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@443253a6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@191774d6)
2024-08-13 17:44:47 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@21ffc00e) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@134955bb)
2024-08-13 17:44:47 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@45b08b17) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6723e6b3)
2024-08-13 17:44:47 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3883b5e9) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@61becbcf)
2024-08-13 17:44:47 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@20171cdc) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@58f97013)
2024-08-13 17:44:47 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7d70ba18) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6a07e6ca)
2024-08-13 17:44:47 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.sql.spi.DdlTypeRegistry - addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@726ef6aa) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@6104691c)
2024-08-13 17:44:47 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-08-13 17:44:47 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-08-13 17:44:47 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-08-13 17:44:47 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-13 17:44:47 [main] [transactionId=] [threadId=] DEBUG o.h.t.d.jdbc.spi.JdbcTypeRegistry - addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-08-13 17:44:47 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration null -> org.hibernate.type.NullType@79424f25
2024-08-13 17:44:47 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@7ac685ef`
2024-08-13 17:44:47 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,2)
2024-08-13 17:44:47 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration Duration -> basicType@1(java.time.Duration,2)
2024-08-13 17:44:47 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.Duration -> basicType@1(java.time.Duration,2)
2024-08-13 17:44:47 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-13 17:44:47 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-13 17:44:47 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-08-13 17:44:47 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-13 17:44:47 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-13 17:44:47 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-08-13 17:44:47 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-08-13 17:44:47 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-13 17:44:47 [main] [transactionId=] [threadId=] DEBUG o.hibernate.type.BasicTypeRegistry - Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-08-13 17:44:47 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@78a165db] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4eb48298]
2024-08-13 17:44:47 [main] [transactionId=] [threadId=] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-08-13 17:44:47 [main] [transactionId=] [threadId=] DEBUG o.h.type.spi.TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@78a165db] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@43e9a8a2]
2024-08-13 17:44:47 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538688000 | took 32ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07

    alter table Application 
       drop 
       foreign key FK8kh8w7no9sulg3pndjsaksm07;
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538688010 | took 10ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8

    alter table Application 
       drop 
       foreign key FKpd9woc1pqnmd32ku3j1nqcha8;
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538688019 | took 8ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv

    alter table Application 
       drop 
       foreign key FKohjibsdevd7mwn5kssk0lf1fv;
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538688037 | took 18ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f

    alter table Mentor 
       drop 
       foreign key FKhthvsdqwyr3p97g7ek094r90f;
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538688041 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389

    alter table PossibleDate 
       drop 
       foreign key FKr8bu03rfgyjtiimmtsu23389;
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538688045 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1

    alter table User 
       drop 
       foreign key FKd8bqph9uejx4p62aywyh692u1;
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538688048 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y

    alter table User 
       drop 
       foreign key FKb06u1te2qae5gn3i7y9cm0i0y;
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Application
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538688070 | took 21ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Application

    drop table if exists Application;
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Introduction
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538688080 | took 9ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Introduction

    drop table if exists Introduction;
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Mentee
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538688084 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Mentee

    drop table if exists Mentee;
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Mentor
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538688093 | took 8ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Mentor

    drop table if exists Mentor;
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    drop table if exists Mentor" via JDBC [Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    drop table if exists Mentor" via JDBC [Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropTables(SchemaDropperImpl.java:377)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropConstraintsTablesSequences(SchemaDropperImpl.java:253)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:215)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:185)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:155)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:115)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:244)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLException: Cannot drop table 'mentor' referenced by a foreign key constraint 'FKa69afi8ngf3x94mccbyq6vy3s' on table 'Club'.
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists PossibleDate
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538688097 | took 2ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists PossibleDate

    drop table if exists PossibleDate;
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists Refresh
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538688101 | took 3ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists Refresh

    drop table if exists Refresh;
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    drop table if exists User
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538688104 | took 2ms | statement | connection 1| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    drop table if exists User

    drop table if exists User;
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538688117 | took 5ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB

    create table Application (
        application_id bigint not null auto_increment,
        mentee_id bigint,
        mentor_id bigint,
        possible_date_id bigint,
        memo varchar(255),
        accept VARCHAR(255) DEFAULT 'UNMATCHED',
        primary key (application_id)
    ) engine=InnoDB;
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538688123 | took 5ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB

    create table Introduction (
        introduction_id bigint not null auto_increment,
        answer1 varchar(255),
        answer2 varchar(255),
        description varchar(255),
        title varchar(255),
        primary key (introduction_id)
    ) engine=InnoDB;
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538688127 | took 3ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB

    create table Mentee (
        mentee_id bigint not null auto_increment,
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentee_id)
    ) engine=InnoDB;
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538688130 | took 2ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB

    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB;
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB" via JDBC [Table 'mentor' already exists]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table Mentor (
        mentor_id bigint not null auto_increment,
        mentor_introduction bigint,
        club enum ('GDSC','YOURSSU','UMC','LIKELION'),
        part enum ('FE','BE','PM','DESIGN'),
        primary key (mentor_id)
    ) engine=InnoDB" via JDBC [Table 'mentor' already exists]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTables(SchemaCreatorImpl.java:420)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:340)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Table 'mentor' already exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538688135 | took 4ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB

    create table PossibleDate (
        date date,
        endTime time(6),
        isActive bit,
        startTime time(6),
        mentor_id bigint,
        possible_date_id bigint not null auto_increment,
        primary key (possible_date_id)
    ) engine=InnoDB;
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538688139 | took 3ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB

    create table Refresh (
        id bigint not null auto_increment,
        expiration varchar(255),
        refresh varchar(255),
        username varchar(255),
        primary key (id)
    ) engine=InnoDB;
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538688145 | took 5ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB

    create table User (
        user_id bigint not null auto_increment,
        user_mentee bigint,
        user_mentor bigint,
        email varchar(255),
        name varchar(255),
        phoneNum varchar(255),
        picture varchar(255),
        role varchar(255),
        username varchar(255),
        primary key (user_id)
    ) engine=InnoDB;
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id)
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538688150 | took 4ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id)

    alter table Application 
       add constraint UK_4esdtl19hhaqci2wxmrsi3a1d unique (possible_date_id);
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538688150 | took 0ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)

    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction);
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)" via JDBC [Duplicate key name 'UK_q1bnlwuhs82q8yg9sugcv9i2t']
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table Mentor 
       add constraint UK_q1bnlwuhs82q8yg9sugcv9i2t unique (mentor_introduction)" via JDBC [Duplicate key name 'UK_q1bnlwuhs82q8yg9sugcv9i2t']
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.Helper.applySqlString(Helper.java:233)
	at org.hibernate.tool.schema.internal.Helper.applySqlStrings(Helper.java:217)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createTableConstraints(SchemaCreatorImpl.java:393)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createSequencesTablesConstraints(SchemaCreatorImpl.java:351)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:239)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:172)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:142)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:118)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:256)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:376)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1820)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1769)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at com.soongsil.CoffeeChat.CoffeeChatApplication.main(CoffeeChatApplication.java:22)
Caused by: java.sql.SQLSyntaxErrorException: Duplicate key name 'UK_q1bnlwuhs82q8yg9sugcv9i2t'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at com.p6spy.engine.wrapper.StatementWrapper.execute(StatementWrapper.java:115)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 40 common frames omitted
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee)
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538688155 | took 4ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee)

    alter table User 
       add constraint UK_lc9moypm41adanqklg8nenmal unique (user_mentee);
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor)
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538688160 | took 4ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor)

    alter table User 
       add constraint UK_3tggmai9ph5bnfjy0wat5ltb5 unique (user_mentor);
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id)
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538688197 | took 37ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id)

    alter table Application 
       add constraint FK8kh8w7no9sulg3pndjsaksm07 
       foreign key (mentee_id) 
       references Mentee (mentee_id);
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id)
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538688221 | took 23ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id)

    alter table Application 
       add constraint FKpd9woc1pqnmd32ku3j1nqcha8 
       foreign key (mentor_id) 
       references Mentor (mentor_id);
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id)
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538688243 | took 21ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id)

    alter table Application 
       add constraint FKohjibsdevd7mwn5kssk0lf1fv 
       foreign key (possible_date_id) 
       references PossibleDate (possible_date_id);
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538688259 | took 15ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id)

    alter table Mentor 
       add constraint FKhthvsdqwyr3p97g7ek094r90f 
       foreign key (mentor_introduction) 
       references Introduction (introduction_id);
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id)
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538688292 | took 32ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id)

    alter table PossibleDate 
       add constraint FKr8bu03rfgyjtiimmtsu23389 
       foreign key (mentor_id) 
       references Mentor (mentor_id);
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id)
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538688307 | took 14ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id)

    alter table User 
       add constraint FKd8bqph9uejx4p62aywyh692u1 
       foreign key (user_mentee) 
       references Mentee (mentee_id);
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] DEBUG org.hibernate.SQL - 
    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id)
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] INFO  p6spy - #1723538688322 | took 13ms | statement | connection 2| url jdbc:mysql:// localhost:3306/cogo_local?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true

    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id)

    alter table User 
       add constraint FKb06u1te2qae5gn3i7y9cm0i0y 
       foreign key (user_mentor) 
       references Mentor (mentor_id);
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] TRACE o.h.type.spi.TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@43e9a8a2] for TypeConfiguration
2024-08-13 17:44:48 [main] [transactionId=] [threadId=] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-13 17:44:49 [main] [transactionId=] [threadId=] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-13 17:44:50 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@27af14bd, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@38f0de07, org.springframework.security.web.context.SecurityContextHolderFilter@70d3b49c, org.springframework.security.web.header.HeaderWriterFilter@16be2c40, org.springframework.web.filter.CorsFilter@21e5feb, com.soongsil.CoffeeChat.config.jwt.CustomLogoutFilter@33742179, org.springframework.security.web.authentication.logout.LogoutFilter@7080e8fc, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@7d800902, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@5bbda8aa, com.soongsil.CoffeeChat.config.jwt.JWTFilter@6ca1c156, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@52d04234, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@521f2a23, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@34e0d52e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4cf5db07, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@228ed68c, org.springframework.security.web.session.SessionManagementFilter@51bab787, org.springframework.security.web.access.ExceptionTranslationFilter@4c94621d, org.springframework.security.web.access.intercept.AuthorizationFilter@14c5d220]
2024-08-13 17:44:50 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/v3/api-docs/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-08-13 17:44:50 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/v3/api-docs/**']
2024-08-13 17:44:50 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-ui/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-08-13 17:44:50 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-ui/**']
2024-08-13 17:44:50 [main] [transactionId=] [threadId=] WARN  o.s.s.c.a.web.builders.WebSecurity - You are asking Spring Security to ignore Mvc [pattern='/swagger-resources/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2024-08-13 17:44:50 [main] [transactionId=] [threadId=] INFO  o.s.s.web.DefaultSecurityFilterChain - Will not secure Mvc [pattern='/swagger-resources/**']
2024-08-13 17:44:50 [main] [transactionId=] [threadId=] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2024-08-13 17:44:50 [main] [transactionId=] [threadId=] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2024-08-13 17:44:50 [main] [transactionId=] [threadId=] INFO  c.s.CoffeeChat.CoffeeChatApplication - Started CoffeeChatApplication in 6.77 seconds (process running for 7.692)
