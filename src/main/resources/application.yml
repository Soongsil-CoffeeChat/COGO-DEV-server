spring:
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql:// ${DB_URL}:3306/${DB_NAME}?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
    username: ${DB_USERNAME}
    password: ${DB_PW}
  jpa:
    hibernate:
      ddl-auto: create-drop
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    database: mysql
    properties:
      hibernate:
        format_sql: true
        show_sql: true


  #  mail:
  #    host: smtp.gmail.com
  #    port: 587
  #    sender: ${MAIL_SENDER}
  #    password: ${MAIL_PW}
  #    properties:
  #      mail:
  #        smtp:
  #          auth: true
  #          starttls:
  #            enable: true

  jwt:
    access-expiration: 86400000 # 24시간
    refresh-expiration: 1209600000 # 14일
    secret: ${JWT_SECRET}
  security:
    oauth2:
      client:
        registration:
          naver:
            client-name: naver
            client-id: ${NAVER_ID}
            client-secret: ${NAVER_SECRET}
            redirect-uri: ${NAVER_REDIRECT}
            authorization-grant-type: authorization_code
            scope: name,email
          google:
            client-name: google
            client-id: ${GOOGLE_ID}
            client-secret: ${GOOGLE_SECRET}
            redirect-uri: ${GOOGLE_REDIRECT}
            authorization-grant-type: authorization_code
            scope: profile,email
          kakao:
            client-name: kakao
            client-id: ${KAKAO_ID}
            client-secret: ${KAKAO_SECRET}
            redirect-uri: ${KAKAO_REDIRECT}
            authorization-grant-type: authorization_code
            scope: profile_nickname, profile_image
          apple:
            client-name: Apple
            client-id: ${APPLE_CLIENT_ID}
#            client-secret: ${APPLE_CLIENT_SECRET}
            redirect-uri: ${APPLE_REDIRECT}
            authorization-grant-type: authorization_code
            scope: name, email
    
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
#          apple:
#            authorization-uri: https://appleid.apple.com/auth/authorize
#            token-uri: https://appleid.apple.com/auth/token
#            user-info-uri: https://appleid.apple.com/auth/userinfo
#            user-name-attribute: sub
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
cloud:
  aws:
    s3:
      bucket: ${BUCKET_NAME}
    credentials:
      access-key: ${S3_ACCESS}
      secret-key: ${S3_SECRET}
    region:
      static: ap-northeast-2
      auto: false
    stack:
      auto: false
#    sqs:
#      queue-name: ${SQS_NAME}

logging.level:
  org.hibernate.SQL: debug
  org.hibernate.type: trace

server:
  servlet:
    session:
      tracking-modes: cookie # 세션 추적 방식을 쿠키로 제한

coolsms:
  from: ${SMS_FROM}
  api-key: ${SMS_KEY}
  api-secret: ${SMS_SECRET}

admin:
  password: ${ADMIN_PASSWORD}

firebase:
  credential:
    json: ${FIREBASE_CREDENTIAL_JSON}

# ====== 여기서부터 추가 ======
social-login:
  provider:
    apple:
#      redirect-uri: ${APPLE_REDIRECT}
      client-id: ${APPLE_CLIENT_ID}
      key-id: ${APPLE_KEY_ID}
      team-id: ${APPLE_TEAM_ID}
      audience: https://appleid.apple.com
      private-key: ${APPLE_SECRET}
# ============================
